{
	"id": "7e0b6b834b8e3549482458f4ad1bc960",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/LionCoin.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity  ^0.8.20;\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\";\r\n\r\ncontract LionToken is ERC20{\r\n\r\n    uint public n = (1/3)*3;\r\n\r\n    //Call ERC 20 token constractore\r\n    constructor(string memory _name, string memory _symbol) ERC20(_name, _symbol){\r\n\r\n        // _name = \"LionCoin\";\r\n        // _symbol = \"LION\";\r\n        //Get som tokens ourselves\r\n        // msg.send => apreson who deploye the contract\r\n        //Solidity is not support floating poing numbers\r\n        _mint(msg.sender, 100 *(10**18));\r\n\r\n    }\r\n}"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error ERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `requestedDecrease`.\n     *\n     * NOTE: Although this function is designed to avoid double spending with {approval},\n     * it can still be frontrunned, preventing any attempt of allowance reduction.\n     */\n    function decreaseAllowance(address spender, uint256 requestedDecrease) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < requestedDecrease) {\n            revert ERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n        }\n        unchecked {\n            _approve(owner, spender, currentAllowance - requestedDecrease);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from` (or `to`) is\n     * the zero address. All customizations to transfers, mints, and burns should be done by overriding this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, by transferring it to address(0).\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to true\n     * using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/LionCoin.sol": {
				"LionToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "ERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "n",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `requestedDecrease`. NOTE: Although this function is designed to avoid double spending with {approval}, it can still be frontrunned, preventing any attempt of allowance reduction."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LionCoin.sol\":172:626  contract LionToken is ERC20{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/LionCoin.sol\":224:231  (1/3)*3 */\n  0x01\n    /* \"contracts/LionCoin.sol\":208:231  uint public n = (1/3)*3 */\n  0x05\n  sstore\n    /* \"contracts/LionCoin.sol\":278:623  constructor(string memory _name, string memory _symbol) ERC20(_name, _symbol){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/LionCoin.sol\":340:345  _name */\n  dup2\n    /* \"contracts/LionCoin.sol\":347:354  _symbol */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2348:2353  name_ */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2340:2345  _name */\n  0x03\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2340:2353  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2373:2380  symbol_ */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2363:2370  _symbol */\n  0x04\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2363:2380  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2274:2387  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/LionCoin.sol\":581:613  _mint(msg.sender, 100 *(10**18)) */\n  tag_11\n    /* \"contracts/LionCoin.sol\":587:597  msg.sender */\n  caller\n    /* \"contracts/LionCoin.sol\":599:612  100 *(10**18) */\n  0x056bc75e2d63100000\n    /* \"contracts/LionCoin.sol\":581:586  _mint */\n  shl(0x20, tag_12)\n    /* \"contracts/LionCoin.sol\":581:613  _mint(msg.sender, 100 *(10**18)) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"contracts/LionCoin.sol\":278:623  constructor(string memory _name, string memory _symbol) ERC20(_name, _symbol){... */\n  pop\n  pop\n    /* \"contracts/LionCoin.sol\":172:626  contract LionToken is ERC20{... */\n  jump(tag_13)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9883:10091  function _mint(address account, uint256 value) internal {... */\ntag_12:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9972:9973  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9953:9974  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9953:9960  account */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9953:9974  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9949:10040  if (account == address(0)) {... */\n  tag_15\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10026:10027  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9997:10029  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_16\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9949:10040  if (account == address(0)) {... */\ntag_15:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10049:10084  _update(address(0), account, value) */\n  tag_18\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10065:10066  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10069:10076  account */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10078:10083  value */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10049:10056  _update */\n  shl(0x20, tag_19)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10049:10084  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9883:10091  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8433:9540  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_19:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8538:8539  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8522:8540  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8522:8526  from */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8522:8540  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8518:9058  if (from == address(0)) {... */\n  tag_21\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8674:8679  value */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8658:8670  _totalSupply */\n  0x02\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8658:8679  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_22\n  swap2\n  swap1\n  tag_23\n  jump\t// in\ntag_22:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8518:9058  if (from == address(0)) {... */\n  jump(tag_24)\ntag_21:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8710:8729  uint256 fromBalance */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8732:8741  _balances */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8732:8747  _balances[from] */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8742:8746  from */\n  dup6\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8732:8747  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8710:8747  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8779:8784  value */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8765:8776  fromBalance */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8765:8784  fromBalance < value */\n  lt\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8761:8876  if (fromBalance < value) {... */\n  iszero\n  tag_25\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8836:8840  from */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8842:8853  fromBalance */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8855:8860  value */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8811:8861  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_26\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_27\n  jump\t// in\ntag_26:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8761:8876  if (fromBalance < value) {... */\ntag_25:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9028:9033  value */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9014:9025  fromBalance */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9014:9033  fromBalance - value */\n  sub\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8996:9005  _balances */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8996:9011  _balances[from] */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9006:9010  from */\n  dup7\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8996:9011  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8996:9033  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8696:9058  {... */\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8518:9058  if (from == address(0)) {... */\ntag_24:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9086:9087  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9072:9088  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9072:9074  to */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9072:9088  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9068:9493  if (to == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9251:9256  value */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9235:9247  _totalSupply */\n  0x02\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9235:9256  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9068:9493  if (to == address(0)) {... */\n  jump(tag_29)\ntag_28:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9463:9468  value */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9446:9455  _balances */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9446:9459  _balances[to] */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9456:9458  to */\n  dup5\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9446:9459  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9446:9468  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9068:9493  if (to == address(0)) {... */\ntag_29:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9523:9525  to */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9508:9533  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9517:9521  from */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9508:9533  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9527:9532  value */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9508:9533  Transfer(from, to, value) */\n  mload(0x40)\n  tag_30\n  swap2\n  swap1\n  tag_31\n  jump\t// in\ntag_30:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8433:9540  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_32:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_33:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_34:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_35:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_36:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_37:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_38:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_39:\n    /* \"#utility.yul\":957:984   */\n  tag_78\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_37\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_80\n  tag_38\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":1030:1118   */\ntag_79:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_40:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_82\n  tag_32\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_83\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_39\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_41:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_85\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_86\n  tag_38\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":1434:1490   */\ntag_85:\n    /* \"#utility.yul\":1508:1537   */\n  tag_87\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_37\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_42:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_89:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_89)\ntag_91:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_43:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_93\n    /* \"#utility.yul\":1992:2041   */\n  tag_94\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_41\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":1976:2042   */\n  tag_40\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_96\n  tag_36\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":2117:2229   */\ntag_95:\n    /* \"#utility.yul\":2238:2290   */\n  tag_97\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_42\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_44:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_99\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_100\n  tag_35\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":2399:2521   */\ntag_99:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_101\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_43\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:3530   */\ntag_3:\n    /* \"#utility.yul\":2776:2782   */\n  0x00\n    /* \"#utility.yul\":2784:2790   */\n  dup1\n    /* \"#utility.yul\":2833:2835   */\n  0x40\n    /* \"#utility.yul\":2821:2830   */\n  dup4\n    /* \"#utility.yul\":2812:2819   */\n  dup6\n    /* \"#utility.yul\":2808:2831   */\n  sub\n    /* \"#utility.yul\":2804:2836   */\n  slt\n    /* \"#utility.yul\":2801:2920   */\n  iszero\n  tag_103\n  jumpi\n    /* \"#utility.yul\":2839:2918   */\n  tag_104\n  tag_33\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":2801:2920   */\ntag_103:\n    /* \"#utility.yul\":2980:2981   */\n  0x00\n    /* \"#utility.yul\":2969:2978   */\n  dup4\n    /* \"#utility.yul\":2965:2982   */\n  add\n    /* \"#utility.yul\":2959:2983   */\n  mload\n    /* \"#utility.yul\":3010:3028   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3002:3008   */\n  dup2\n    /* \"#utility.yul\":2999:3029   */\n  gt\n    /* \"#utility.yul\":2996:3113   */\n  iszero\n  tag_105\n  jumpi\n    /* \"#utility.yul\":3032:3111   */\n  tag_106\n  tag_34\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":2996:3113   */\ntag_105:\n    /* \"#utility.yul\":3137:3211   */\n  tag_107\n    /* \"#utility.yul\":3203:3210   */\n  dup6\n    /* \"#utility.yul\":3194:3200   */\n  dup3\n    /* \"#utility.yul\":3183:3192   */\n  dup7\n    /* \"#utility.yul\":3179:3201   */\n  add\n    /* \"#utility.yul\":3137:3211   */\n  tag_44\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":3127:3211   */\n  swap3\n  pop\n    /* \"#utility.yul\":2930:3221   */\n  pop\n    /* \"#utility.yul\":3281:3283   */\n  0x20\n    /* \"#utility.yul\":3270:3279   */\n  dup4\n    /* \"#utility.yul\":3266:3284   */\n  add\n    /* \"#utility.yul\":3260:3285   */\n  mload\n    /* \"#utility.yul\":3312:3330   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3304:3310   */\n  dup2\n    /* \"#utility.yul\":3301:3331   */\n  gt\n    /* \"#utility.yul\":3298:3415   */\n  iszero\n  tag_108\n  jumpi\n    /* \"#utility.yul\":3334:3413   */\n  tag_109\n  tag_34\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":3298:3415   */\ntag_108:\n    /* \"#utility.yul\":3439:3513   */\n  tag_110\n    /* \"#utility.yul\":3505:3512   */\n  dup6\n    /* \"#utility.yul\":3496:3502   */\n  dup3\n    /* \"#utility.yul\":3485:3494   */\n  dup7\n    /* \"#utility.yul\":3481:3503   */\n  add\n    /* \"#utility.yul\":3439:3513   */\n  tag_44\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":3429:3513   */\n  swap2\n  pop\n    /* \"#utility.yul\":3231:3523   */\n  pop\n    /* \"#utility.yul\":2677:3530   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3536:3635   */\ntag_45:\n    /* \"#utility.yul\":3588:3594   */\n  0x00\n    /* \"#utility.yul\":3622:3627   */\n  dup2\n    /* \"#utility.yul\":3616:3628   */\n  mload\n    /* \"#utility.yul\":3606:3628   */\n  swap1\n  pop\n    /* \"#utility.yul\":3536:3635   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3641:3821   */\ntag_46:\n    /* \"#utility.yul\":3689:3766   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3686:3687   */\n  0x00\n    /* \"#utility.yul\":3679:3767   */\n  mstore\n    /* \"#utility.yul\":3786:3790   */\n  0x22\n    /* \"#utility.yul\":3783:3784   */\n  0x04\n    /* \"#utility.yul\":3776:3791   */\n  mstore\n    /* \"#utility.yul\":3810:3814   */\n  0x24\n    /* \"#utility.yul\":3807:3808   */\n  0x00\n    /* \"#utility.yul\":3800:3815   */\n  revert\n    /* \"#utility.yul\":3827:4147   */\ntag_47:\n    /* \"#utility.yul\":3871:3877   */\n  0x00\n    /* \"#utility.yul\":3908:3909   */\n  0x02\n    /* \"#utility.yul\":3902:3906   */\n  dup3\n    /* \"#utility.yul\":3898:3910   */\n  div\n    /* \"#utility.yul\":3888:3910   */\n  swap1\n  pop\n    /* \"#utility.yul\":3955:3956   */\n  0x01\n    /* \"#utility.yul\":3949:3953   */\n  dup3\n    /* \"#utility.yul\":3945:3957   */\n  and\n    /* \"#utility.yul\":3976:3994   */\n  dup1\n    /* \"#utility.yul\":3966:4047   */\n  tag_114\n  jumpi\n    /* \"#utility.yul\":4032:4036   */\n  0x7f\n    /* \"#utility.yul\":4024:4030   */\n  dup3\n    /* \"#utility.yul\":4020:4037   */\n  and\n    /* \"#utility.yul\":4010:4037   */\n  swap2\n  pop\n    /* \"#utility.yul\":3966:4047   */\ntag_114:\n    /* \"#utility.yul\":4094:4096   */\n  0x20\n    /* \"#utility.yul\":4086:4092   */\n  dup3\n    /* \"#utility.yul\":4083:4097   */\n  lt\n    /* \"#utility.yul\":4063:4081   */\n  dup2\n    /* \"#utility.yul\":4060:4098   */\n  sub\n    /* \"#utility.yul\":4057:4141   */\n  tag_115\n  jumpi\n    /* \"#utility.yul\":4113:4131   */\n  tag_116\n  tag_46\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":4057:4141   */\ntag_115:\n    /* \"#utility.yul\":3878:4147   */\n  pop\n    /* \"#utility.yul\":3827:4147   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4153:4294   */\ntag_48:\n    /* \"#utility.yul\":4202:4206   */\n  0x00\n    /* \"#utility.yul\":4225:4228   */\n  dup2\n    /* \"#utility.yul\":4217:4228   */\n  swap1\n  pop\n    /* \"#utility.yul\":4248:4251   */\n  dup2\n    /* \"#utility.yul\":4245:4246   */\n  0x00\n    /* \"#utility.yul\":4238:4252   */\n  mstore\n    /* \"#utility.yul\":4282:4286   */\n  0x20\n    /* \"#utility.yul\":4279:4280   */\n  0x00\n    /* \"#utility.yul\":4269:4287   */\n  keccak256\n    /* \"#utility.yul\":4261:4287   */\n  swap1\n  pop\n    /* \"#utility.yul\":4153:4294   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4300:4393   */\ntag_49:\n    /* \"#utility.yul\":4337:4343   */\n  0x00\n    /* \"#utility.yul\":4384:4386   */\n  0x20\n    /* \"#utility.yul\":4379:4381   */\n  0x1f\n    /* \"#utility.yul\":4372:4377   */\n  dup4\n    /* \"#utility.yul\":4368:4382   */\n  add\n    /* \"#utility.yul\":4364:4387   */\n  div\n    /* \"#utility.yul\":4354:4387   */\n  swap1\n  pop\n    /* \"#utility.yul\":4300:4393   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4399:4506   */\ntag_50:\n    /* \"#utility.yul\":4443:4451   */\n  0x00\n    /* \"#utility.yul\":4493:4498   */\n  dup3\n    /* \"#utility.yul\":4487:4491   */\n  dup3\n    /* \"#utility.yul\":4483:4499   */\n  shl\n    /* \"#utility.yul\":4462:4499   */\n  swap1\n  pop\n    /* \"#utility.yul\":4399:4506   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4512:4905   */\ntag_51:\n    /* \"#utility.yul\":4581:4587   */\n  0x00\n    /* \"#utility.yul\":4631:4632   */\n  0x08\n    /* \"#utility.yul\":4619:4629   */\n  dup4\n    /* \"#utility.yul\":4615:4633   */\n  mul\n    /* \"#utility.yul\":4654:4751   */\n  tag_121\n    /* \"#utility.yul\":4684:4750   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4673:4682   */\n  dup3\n    /* \"#utility.yul\":4654:4751   */\n  tag_50\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":4772:4811   */\n  tag_122\n    /* \"#utility.yul\":4802:4810   */\n  dup7\n    /* \"#utility.yul\":4791:4800   */\n  dup4\n    /* \"#utility.yul\":4772:4811   */\n  tag_50\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":4760:4811   */\n  swap6\n  pop\n    /* \"#utility.yul\":4844:4848   */\n  dup1\n    /* \"#utility.yul\":4840:4849   */\n  not\n    /* \"#utility.yul\":4833:4838   */\n  dup5\n    /* \"#utility.yul\":4829:4850   */\n  and\n    /* \"#utility.yul\":4820:4850   */\n  swap4\n  pop\n    /* \"#utility.yul\":4893:4897   */\n  dup1\n    /* \"#utility.yul\":4883:4891   */\n  dup7\n    /* \"#utility.yul\":4879:4898   */\n  and\n    /* \"#utility.yul\":4872:4877   */\n  dup5\n    /* \"#utility.yul\":4869:4899   */\n  or\n    /* \"#utility.yul\":4859:4899   */\n  swap3\n  pop\n    /* \"#utility.yul\":4588:4905   */\n  pop\n  pop\n    /* \"#utility.yul\":4512:4905   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4911:4988   */\ntag_52:\n    /* \"#utility.yul\":4948:4955   */\n  0x00\n    /* \"#utility.yul\":4977:4982   */\n  dup2\n    /* \"#utility.yul\":4966:4982   */\n  swap1\n  pop\n    /* \"#utility.yul\":4911:4988   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4994:5054   */\ntag_53:\n    /* \"#utility.yul\":5022:5025   */\n  0x00\n    /* \"#utility.yul\":5043:5048   */\n  dup2\n    /* \"#utility.yul\":5036:5048   */\n  swap1\n  pop\n    /* \"#utility.yul\":4994:5054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5060:5202   */\ntag_54:\n    /* \"#utility.yul\":5110:5119   */\n  0x00\n    /* \"#utility.yul\":5143:5196   */\n  tag_126\n    /* \"#utility.yul\":5161:5195   */\n  tag_127\n    /* \"#utility.yul\":5170:5194   */\n  tag_128\n    /* \"#utility.yul\":5188:5193   */\n  dup5\n    /* \"#utility.yul\":5170:5194   */\n  tag_52\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":5161:5195   */\n  tag_53\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":5143:5196   */\n  tag_52\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":5130:5196   */\n  swap1\n  pop\n    /* \"#utility.yul\":5060:5202   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5208:5283   */\ntag_55:\n    /* \"#utility.yul\":5251:5254   */\n  0x00\n    /* \"#utility.yul\":5272:5277   */\n  dup2\n    /* \"#utility.yul\":5265:5277   */\n  swap1\n  pop\n    /* \"#utility.yul\":5208:5283   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5289:5558   */\ntag_56:\n    /* \"#utility.yul\":5399:5438   */\n  tag_131\n    /* \"#utility.yul\":5430:5437   */\n  dup4\n    /* \"#utility.yul\":5399:5438   */\n  tag_54\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":5460:5551   */\n  tag_132\n    /* \"#utility.yul\":5509:5550   */\n  tag_133\n    /* \"#utility.yul\":5533:5549   */\n  dup3\n    /* \"#utility.yul\":5509:5550   */\n  tag_55\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":5501:5507   */\n  dup5\n    /* \"#utility.yul\":5494:5498   */\n  dup5\n    /* \"#utility.yul\":5488:5499   */\n  sload\n    /* \"#utility.yul\":5460:5551   */\n  tag_51\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":5454:5458   */\n  dup3\n    /* \"#utility.yul\":5447:5552   */\n  sstore\n    /* \"#utility.yul\":5365:5558   */\n  pop\n    /* \"#utility.yul\":5289:5558   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5564:5637   */\ntag_57:\n    /* \"#utility.yul\":5609:5612   */\n  0x00\n    /* \"#utility.yul\":5564:5637   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5643:5832   */\ntag_58:\n    /* \"#utility.yul\":5720:5752   */\n  tag_136\n  tag_57\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":5761:5826   */\n  tag_137\n    /* \"#utility.yul\":5819:5825   */\n  dup2\n    /* \"#utility.yul\":5811:5817   */\n  dup5\n    /* \"#utility.yul\":5805:5809   */\n  dup5\n    /* \"#utility.yul\":5761:5826   */\n  tag_56\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":5696:5832   */\n  pop\n    /* \"#utility.yul\":5643:5832   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5838:6024   */\ntag_59:\n    /* \"#utility.yul\":5898:6018   */\ntag_139:\n    /* \"#utility.yul\":5915:5918   */\n  dup2\n    /* \"#utility.yul\":5908:5913   */\n  dup2\n    /* \"#utility.yul\":5905:5919   */\n  lt\n    /* \"#utility.yul\":5898:6018   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":5969:6008   */\n  tag_142\n    /* \"#utility.yul\":6006:6007   */\n  0x00\n    /* \"#utility.yul\":5999:6004   */\n  dup3\n    /* \"#utility.yul\":5969:6008   */\n  tag_58\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":5942:5943   */\n  0x01\n    /* \"#utility.yul\":5935:5940   */\n  dup2\n    /* \"#utility.yul\":5931:5944   */\n  add\n    /* \"#utility.yul\":5922:5944   */\n  swap1\n  pop\n    /* \"#utility.yul\":5898:6018   */\n  jump(tag_139)\ntag_141:\n    /* \"#utility.yul\":5838:6024   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6030:6573   */\ntag_60:\n    /* \"#utility.yul\":6131:6133   */\n  0x1f\n    /* \"#utility.yul\":6126:6129   */\n  dup3\n    /* \"#utility.yul\":6123:6134   */\n  gt\n    /* \"#utility.yul\":6120:6566   */\n  iszero\n  tag_144\n  jumpi\n    /* \"#utility.yul\":6165:6203   */\n  tag_145\n    /* \"#utility.yul\":6197:6202   */\n  dup2\n    /* \"#utility.yul\":6165:6203   */\n  tag_48\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":6249:6278   */\n  tag_146\n    /* \"#utility.yul\":6267:6277   */\n  dup5\n    /* \"#utility.yul\":6249:6278   */\n  tag_49\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":6239:6247   */\n  dup2\n    /* \"#utility.yul\":6235:6279   */\n  add\n    /* \"#utility.yul\":6432:6434   */\n  0x20\n    /* \"#utility.yul\":6420:6430   */\n  dup6\n    /* \"#utility.yul\":6417:6435   */\n  lt\n    /* \"#utility.yul\":6414:6463   */\n  iszero\n  tag_147\n  jumpi\n    /* \"#utility.yul\":6453:6461   */\n  dup2\n    /* \"#utility.yul\":6438:6461   */\n  swap1\n  pop\n    /* \"#utility.yul\":6414:6463   */\ntag_147:\n    /* \"#utility.yul\":6476:6556   */\n  tag_148\n    /* \"#utility.yul\":6532:6554   */\n  tag_149\n    /* \"#utility.yul\":6550:6553   */\n  dup6\n    /* \"#utility.yul\":6532:6554   */\n  tag_49\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":6522:6530   */\n  dup4\n    /* \"#utility.yul\":6518:6555   */\n  add\n    /* \"#utility.yul\":6505:6516   */\n  dup3\n    /* \"#utility.yul\":6476:6556   */\n  tag_59\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":6135:6566   */\n  pop\n  pop\n    /* \"#utility.yul\":6120:6566   */\ntag_144:\n    /* \"#utility.yul\":6030:6573   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6579:6696   */\ntag_61:\n    /* \"#utility.yul\":6633:6641   */\n  0x00\n    /* \"#utility.yul\":6683:6688   */\n  dup3\n    /* \"#utility.yul\":6677:6681   */\n  dup3\n    /* \"#utility.yul\":6673:6689   */\n  shr\n    /* \"#utility.yul\":6652:6689   */\n  swap1\n  pop\n    /* \"#utility.yul\":6579:6696   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6702:6871   */\ntag_62:\n    /* \"#utility.yul\":6746:6752   */\n  0x00\n    /* \"#utility.yul\":6779:6830   */\n  tag_152\n    /* \"#utility.yul\":6827:6828   */\n  0x00\n    /* \"#utility.yul\":6823:6829   */\n  not\n    /* \"#utility.yul\":6815:6820   */\n  dup5\n    /* \"#utility.yul\":6812:6813   */\n  0x08\n    /* \"#utility.yul\":6808:6821   */\n  mul\n    /* \"#utility.yul\":6779:6830   */\n  tag_61\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":6775:6831   */\n  not\n    /* \"#utility.yul\":6860:6864   */\n  dup1\n    /* \"#utility.yul\":6854:6858   */\n  dup4\n    /* \"#utility.yul\":6850:6865   */\n  and\n    /* \"#utility.yul\":6840:6865   */\n  swap2\n  pop\n    /* \"#utility.yul\":6753:6871   */\n  pop\n    /* \"#utility.yul\":6702:6871   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6876:7171   */\ntag_63:\n    /* \"#utility.yul\":6952:6956   */\n  0x00\n    /* \"#utility.yul\":7098:7127   */\n  tag_154\n    /* \"#utility.yul\":7123:7126   */\n  dup4\n    /* \"#utility.yul\":7117:7121   */\n  dup4\n    /* \"#utility.yul\":7098:7127   */\n  tag_62\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":7090:7127   */\n  swap2\n  pop\n    /* \"#utility.yul\":7160:7163   */\n  dup3\n    /* \"#utility.yul\":7157:7158   */\n  0x02\n    /* \"#utility.yul\":7153:7164   */\n  mul\n    /* \"#utility.yul\":7147:7151   */\n  dup3\n    /* \"#utility.yul\":7144:7165   */\n  or\n    /* \"#utility.yul\":7136:7165   */\n  swap1\n  pop\n    /* \"#utility.yul\":6876:7171   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7176:8571   */\ntag_8:\n    /* \"#utility.yul\":7293:7330   */\n  tag_156\n    /* \"#utility.yul\":7326:7329   */\n  dup3\n    /* \"#utility.yul\":7293:7330   */\n  tag_45\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":7395:7413   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7387:7393   */\n  dup2\n    /* \"#utility.yul\":7384:7414   */\n  gt\n    /* \"#utility.yul\":7381:7437   */\n  iszero\n  tag_157\n  jumpi\n    /* \"#utility.yul\":7417:7435   */\n  tag_158\n  tag_38\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":7381:7437   */\ntag_157:\n    /* \"#utility.yul\":7461:7499   */\n  tag_159\n    /* \"#utility.yul\":7493:7497   */\n  dup3\n    /* \"#utility.yul\":7487:7498   */\n  sload\n    /* \"#utility.yul\":7461:7499   */\n  tag_47\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":7546:7613   */\n  tag_160\n    /* \"#utility.yul\":7606:7612   */\n  dup3\n    /* \"#utility.yul\":7598:7604   */\n  dup3\n    /* \"#utility.yul\":7592:7596   */\n  dup6\n    /* \"#utility.yul\":7546:7613   */\n  tag_60\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":7640:7641   */\n  0x00\n    /* \"#utility.yul\":7664:7668   */\n  0x20\n    /* \"#utility.yul\":7651:7668   */\n  swap1\n  pop\n    /* \"#utility.yul\":7696:7698   */\n  0x1f\n    /* \"#utility.yul\":7688:7694   */\n  dup4\n    /* \"#utility.yul\":7685:7699   */\n  gt\n    /* \"#utility.yul\":7713:7714   */\n  0x01\n    /* \"#utility.yul\":7708:8326   */\n  dup2\n  eq\n  tag_162\n  jumpi\n    /* \"#utility.yul\":8370:8371   */\n  0x00\n    /* \"#utility.yul\":8387:8393   */\n  dup5\n    /* \"#utility.yul\":8384:8461   */\n  iszero\n  tag_163\n  jumpi\n    /* \"#utility.yul\":8436:8445   */\n  dup3\n    /* \"#utility.yul\":8431:8434   */\n  dup8\n    /* \"#utility.yul\":8427:8446   */\n  add\n    /* \"#utility.yul\":8421:8447   */\n  mload\n    /* \"#utility.yul\":8412:8447   */\n  swap1\n  pop\n    /* \"#utility.yul\":8384:8461   */\ntag_163:\n    /* \"#utility.yul\":8487:8554   */\n  tag_164\n    /* \"#utility.yul\":8547:8553   */\n  dup6\n    /* \"#utility.yul\":8540:8545   */\n  dup3\n    /* \"#utility.yul\":8487:8554   */\n  tag_63\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":8481:8485   */\n  dup7\n    /* \"#utility.yul\":8474:8555   */\n  sstore\n    /* \"#utility.yul\":8343:8565   */\n  pop\n    /* \"#utility.yul\":7678:8565   */\n  jump(tag_161)\n    /* \"#utility.yul\":7708:8326   */\ntag_162:\n    /* \"#utility.yul\":7760:7764   */\n  0x1f\n    /* \"#utility.yul\":7756:7765   */\n  not\n    /* \"#utility.yul\":7748:7754   */\n  dup5\n    /* \"#utility.yul\":7744:7766   */\n  and\n    /* \"#utility.yul\":7794:7831   */\n  tag_165\n    /* \"#utility.yul\":7826:7830   */\n  dup7\n    /* \"#utility.yul\":7794:7831   */\n  tag_48\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":7853:7854   */\n  0x00\n    /* \"#utility.yul\":7867:8075   */\ntag_166:\n    /* \"#utility.yul\":7881:7888   */\n  dup3\n    /* \"#utility.yul\":7878:7879   */\n  dup2\n    /* \"#utility.yul\":7875:7889   */\n  lt\n    /* \"#utility.yul\":7867:8075   */\n  iszero\n  tag_168\n  jumpi\n    /* \"#utility.yul\":7960:7969   */\n  dup5\n    /* \"#utility.yul\":7955:7958   */\n  dup10\n    /* \"#utility.yul\":7951:7970   */\n  add\n    /* \"#utility.yul\":7945:7971   */\n  mload\n    /* \"#utility.yul\":7937:7943   */\n  dup3\n    /* \"#utility.yul\":7930:7972   */\n  sstore\n    /* \"#utility.yul\":8011:8012   */\n  0x01\n    /* \"#utility.yul\":8003:8009   */\n  dup3\n    /* \"#utility.yul\":7999:8013   */\n  add\n    /* \"#utility.yul\":7989:8013   */\n  swap2\n  pop\n    /* \"#utility.yul\":8058:8060   */\n  0x20\n    /* \"#utility.yul\":8047:8056   */\n  dup6\n    /* \"#utility.yul\":8043:8061   */\n  add\n    /* \"#utility.yul\":8030:8061   */\n  swap5\n  pop\n    /* \"#utility.yul\":7904:7908   */\n  0x20\n    /* \"#utility.yul\":7901:7902   */\n  dup2\n    /* \"#utility.yul\":7897:7909   */\n  add\n    /* \"#utility.yul\":7892:7909   */\n  swap1\n  pop\n    /* \"#utility.yul\":7867:8075   */\n  jump(tag_166)\ntag_168:\n    /* \"#utility.yul\":8103:8109   */\n  dup7\n    /* \"#utility.yul\":8094:8101   */\n  dup4\n    /* \"#utility.yul\":8091:8110   */\n  lt\n    /* \"#utility.yul\":8088:8267   */\n  iszero\n  tag_169\n  jumpi\n    /* \"#utility.yul\":8161:8170   */\n  dup5\n    /* \"#utility.yul\":8156:8159   */\n  dup10\n    /* \"#utility.yul\":8152:8171   */\n  add\n    /* \"#utility.yul\":8146:8172   */\n  mload\n    /* \"#utility.yul\":8204:8252   */\n  tag_170\n    /* \"#utility.yul\":8246:8250   */\n  0x1f\n    /* \"#utility.yul\":8238:8244   */\n  dup10\n    /* \"#utility.yul\":8234:8251   */\n  and\n    /* \"#utility.yul\":8223:8232   */\n  dup3\n    /* \"#utility.yul\":8204:8252   */\n  tag_62\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":8196:8202   */\n  dup4\n    /* \"#utility.yul\":8189:8253   */\n  sstore\n    /* \"#utility.yul\":8111:8267   */\n  pop\n    /* \"#utility.yul\":8088:8267   */\ntag_169:\n    /* \"#utility.yul\":8313:8314   */\n  0x01\n    /* \"#utility.yul\":8309:8310   */\n  0x02\n    /* \"#utility.yul\":8301:8307   */\n  dup9\n    /* \"#utility.yul\":8297:8311   */\n  mul\n    /* \"#utility.yul\":8293:8315   */\n  add\n    /* \"#utility.yul\":8287:8291   */\n  dup9\n    /* \"#utility.yul\":8280:8316   */\n  sstore\n    /* \"#utility.yul\":7715:8326   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7678:8565   */\ntag_161:\n  pop\n    /* \"#utility.yul\":7268:8571   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7176:8571   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8577:8703   */\ntag_64:\n    /* \"#utility.yul\":8614:8621   */\n  0x00\n    /* \"#utility.yul\":8654:8696   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":8647:8652   */\n  dup3\n    /* \"#utility.yul\":8643:8697   */\n  and\n    /* \"#utility.yul\":8632:8697   */\n  swap1\n  pop\n    /* \"#utility.yul\":8577:8703   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8709:8805   */\ntag_65:\n    /* \"#utility.yul\":8746:8753   */\n  0x00\n    /* \"#utility.yul\":8775:8799   */\n  tag_173\n    /* \"#utility.yul\":8793:8798   */\n  dup3\n    /* \"#utility.yul\":8775:8799   */\n  tag_64\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":8764:8799   */\n  swap1\n  pop\n    /* \"#utility.yul\":8709:8805   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8811:8929   */\ntag_66:\n    /* \"#utility.yul\":8898:8922   */\n  tag_175\n    /* \"#utility.yul\":8916:8921   */\n  dup2\n    /* \"#utility.yul\":8898:8922   */\n  tag_65\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":8893:8896   */\n  dup3\n    /* \"#utility.yul\":8886:8923   */\n  mstore\n    /* \"#utility.yul\":8811:8929   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8935:9157   */\ntag_17:\n    /* \"#utility.yul\":9028:9032   */\n  0x00\n    /* \"#utility.yul\":9066:9068   */\n  0x20\n    /* \"#utility.yul\":9055:9064   */\n  dup3\n    /* \"#utility.yul\":9051:9069   */\n  add\n    /* \"#utility.yul\":9043:9069   */\n  swap1\n  pop\n    /* \"#utility.yul\":9079:9150   */\n  tag_177\n    /* \"#utility.yul\":9147:9148   */\n  0x00\n    /* \"#utility.yul\":9136:9145   */\n  dup4\n    /* \"#utility.yul\":9132:9149   */\n  add\n    /* \"#utility.yul\":9123:9129   */\n  dup5\n    /* \"#utility.yul\":9079:9150   */\n  tag_66\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":8935:9157   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9163:9343   */\ntag_67:\n    /* \"#utility.yul\":9211:9288   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":9208:9209   */\n  0x00\n    /* \"#utility.yul\":9201:9289   */\n  mstore\n    /* \"#utility.yul\":9308:9312   */\n  0x11\n    /* \"#utility.yul\":9305:9306   */\n  0x04\n    /* \"#utility.yul\":9298:9313   */\n  mstore\n    /* \"#utility.yul\":9332:9336   */\n  0x24\n    /* \"#utility.yul\":9329:9330   */\n  0x00\n    /* \"#utility.yul\":9322:9337   */\n  revert\n    /* \"#utility.yul\":9349:9540   */\ntag_23:\n    /* \"#utility.yul\":9389:9392   */\n  0x00\n    /* \"#utility.yul\":9408:9428   */\n  tag_180\n    /* \"#utility.yul\":9426:9427   */\n  dup3\n    /* \"#utility.yul\":9408:9428   */\n  tag_52\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":9403:9428   */\n  swap2\n  pop\n    /* \"#utility.yul\":9442:9462   */\n  tag_181\n    /* \"#utility.yul\":9460:9461   */\n  dup4\n    /* \"#utility.yul\":9442:9462   */\n  tag_52\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":9437:9462   */\n  swap3\n  pop\n    /* \"#utility.yul\":9485:9486   */\n  dup3\n    /* \"#utility.yul\":9482:9483   */\n  dup3\n    /* \"#utility.yul\":9478:9487   */\n  add\n    /* \"#utility.yul\":9471:9487   */\n  swap1\n  pop\n    /* \"#utility.yul\":9506:9509   */\n  dup1\n    /* \"#utility.yul\":9503:9504   */\n  dup3\n    /* \"#utility.yul\":9500:9510   */\n  gt\n    /* \"#utility.yul\":9497:9533   */\n  iszero\n  tag_182\n  jumpi\n    /* \"#utility.yul\":9513:9531   */\n  tag_183\n  tag_67\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":9497:9533   */\ntag_182:\n    /* \"#utility.yul\":9349:9540   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9546:9664   */\ntag_68:\n    /* \"#utility.yul\":9633:9657   */\n  tag_185\n    /* \"#utility.yul\":9651:9656   */\n  dup2\n    /* \"#utility.yul\":9633:9657   */\n  tag_52\n  jump\t// in\ntag_185:\n    /* \"#utility.yul\":9628:9631   */\n  dup3\n    /* \"#utility.yul\":9621:9658   */\n  mstore\n    /* \"#utility.yul\":9546:9664   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9670:10112   */\ntag_27:\n    /* \"#utility.yul\":9819:9823   */\n  0x00\n    /* \"#utility.yul\":9857:9859   */\n  0x60\n    /* \"#utility.yul\":9846:9855   */\n  dup3\n    /* \"#utility.yul\":9842:9860   */\n  add\n    /* \"#utility.yul\":9834:9860   */\n  swap1\n  pop\n    /* \"#utility.yul\":9870:9941   */\n  tag_187\n    /* \"#utility.yul\":9938:9939   */\n  0x00\n    /* \"#utility.yul\":9927:9936   */\n  dup4\n    /* \"#utility.yul\":9923:9940   */\n  add\n    /* \"#utility.yul\":9914:9920   */\n  dup7\n    /* \"#utility.yul\":9870:9941   */\n  tag_66\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":9951:10023   */\n  tag_188\n    /* \"#utility.yul\":10019:10021   */\n  0x20\n    /* \"#utility.yul\":10008:10017   */\n  dup4\n    /* \"#utility.yul\":10004:10022   */\n  add\n    /* \"#utility.yul\":9995:10001   */\n  dup6\n    /* \"#utility.yul\":9951:10023   */\n  tag_68\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":10033:10105   */\n  tag_189\n    /* \"#utility.yul\":10101:10103   */\n  0x40\n    /* \"#utility.yul\":10090:10099   */\n  dup4\n    /* \"#utility.yul\":10086:10104   */\n  add\n    /* \"#utility.yul\":10077:10083   */\n  dup5\n    /* \"#utility.yul\":10033:10105   */\n  tag_68\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":9670:10112   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10118:10340   */\ntag_31:\n    /* \"#utility.yul\":10211:10215   */\n  0x00\n    /* \"#utility.yul\":10249:10251   */\n  0x20\n    /* \"#utility.yul\":10238:10247   */\n  dup3\n    /* \"#utility.yul\":10234:10252   */\n  add\n    /* \"#utility.yul\":10226:10252   */\n  swap1\n  pop\n    /* \"#utility.yul\":10262:10333   */\n  tag_191\n    /* \"#utility.yul\":10330:10331   */\n  0x00\n    /* \"#utility.yul\":10319:10328   */\n  dup4\n    /* \"#utility.yul\":10315:10332   */\n  add\n    /* \"#utility.yul\":10306:10312   */\n  dup5\n    /* \"#utility.yul\":10262:10333   */\n  tag_68\n  jump\t// in\ntag_191:\n    /* \"#utility.yul\":10118:10340   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/LionCoin.sol\":172:626  contract LionToken is ERC20{... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LionCoin.sol\":172:626  contract LionToken is ERC20{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2e52d606\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2452:2541  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4671:4857  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3522:3619  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5417:5661  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LionCoin.sol\":208:231  uint public n = (1/3)*3 */\n    tag_7:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3380:3462  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6056:6290  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_9:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3677:3793  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_10:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2654:2747  function symbol() public view virtual returns (string memory) {... */\n    tag_11:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6959:7452  function decreaseAllowance(address spender, uint256 requestedDecrease) public virtual returns (bool) {... */\n    tag_12:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3988:4166  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_13:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4224:4364  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_14:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2452:2541  function name() public view virtual returns (string memory) {... */\n    tag_17:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2497:2510  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2529:2534  _name */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2522:2534  return _name */\n      dup1\n      sload\n      tag_68\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_70\n      swap1\n      tag_69\n      jump\t// in\n    tag_70:\n      dup1\n      iszero\n      tag_71\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_72\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_71)\n    tag_72:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_73:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_73\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_71:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2452:2541  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4671:4857  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_23:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4744:4748  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4760:4773  address owner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4776:4788  _msgSender() */\n      tag_75\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4776:4786  _msgSender */\n      tag_76\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4776:4788  _msgSender() */\n      jump\t// in\n    tag_75:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4760:4788  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4798:4829  _approve(owner, spender, value) */\n      tag_77\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4807:4812  owner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4814:4821  spender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4823:4828  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4798:4806  _approve */\n      tag_78\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4798:4829  _approve(owner, spender, value) */\n      jump\t// in\n    tag_77:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4846:4850  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4839:4850  return true */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4671:4857  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3522:3619  function totalSupply() public view virtual returns (uint256) {... */\n    tag_27:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3574:3581  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3600:3612  _totalSupply */\n      sload(0x02)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3593:3612  return _totalSupply */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3522:3619  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5417:5661  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_33:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5504:5508  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5520:5535  address spender */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5538:5550  _msgSender() */\n      tag_81\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5538:5548  _msgSender */\n      tag_76\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5538:5550  _msgSender() */\n      jump\t// in\n    tag_81:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5520:5550  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5560:5597  _spendAllowance(from, spender, value) */\n      tag_82\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5576:5580  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5582:5589  spender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5591:5596  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5560:5575  _spendAllowance */\n      tag_83\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5560:5597  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_82:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5607:5633  _transfer(from, to, value) */\n      tag_84\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5617:5621  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5623:5625  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5627:5632  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5607:5616  _transfer */\n      tag_85\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5607:5633  _transfer(from, to, value) */\n      jump\t// in\n    tag_84:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5650:5654  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5643:5654  return true */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5417:5661  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LionCoin.sol\":208:231  uint public n = (1/3)*3 */\n    tag_36:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3380:3462  function decimals() public view virtual returns (uint8) {... */\n    tag_39:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3429:3434  uint8 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3453:3455  18 */\n      0x12\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3446:3455  return 18 */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3380:3462  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6056:6290  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_44:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6144:6148  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6160:6173  address owner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6176:6188  _msgSender() */\n      tag_88\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6176:6186  _msgSender */\n      tag_76\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6176:6188  _msgSender() */\n      jump\t// in\n    tag_88:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6160:6188  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6198:6262  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_89\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6207:6212  owner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6214:6221  spender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6251:6261  addedValue */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6223:6248  allowance(owner, spender) */\n      tag_90\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6233:6238  owner */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6240:6247  spender */\n      dup10\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6223:6232  allowance */\n      tag_65\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6223:6248  allowance(owner, spender) */\n      jump\t// in\n    tag_90:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6223:6261  allowance(owner, spender) + addedValue */\n      tag_91\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6198:6206  _approve */\n      tag_78\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6198:6262  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n    tag_89:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6279:6283  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6272:6283  return true */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6056:6290  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3677:3793  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_49:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3742:3749  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3768:3777  _balances */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3768:3786  _balances[account] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3778:3785  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3768:3786  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3761:3786  return _balances[account] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3677:3793  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2654:2747  function symbol() public view virtual returns (string memory) {... */\n    tag_52:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2701:2714  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2733:2740  _symbol */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2726:2740  return _symbol */\n      dup1\n      sload\n      tag_95\n      swap1\n      tag_69\n      jump\t// in\n    tag_95:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_96\n      swap1\n      tag_69\n      jump\t// in\n    tag_96:\n      dup1\n      iszero\n      tag_97\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_98\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_97)\n    tag_98:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_99:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_99\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_97:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2654:2747  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6959:7452  function decreaseAllowance(address spender, uint256 requestedDecrease) public virtual returns (bool) {... */\n    tag_56:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7054:7058  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7070:7083  address owner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7086:7098  _msgSender() */\n      tag_101\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7086:7096  _msgSender */\n      tag_76\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7086:7098  _msgSender() */\n      jump\t// in\n    tag_101:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7070:7098  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7108:7132  uint256 currentAllowance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7135:7160  allowance(owner, spender) */\n      tag_102\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7145:7150  owner */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7152:7159  spender */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7135:7144  allowance */\n      tag_65\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7135:7160  allowance(owner, spender) */\n      jump\t// in\n    tag_102:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7108:7160  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7193:7210  requestedDecrease */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7174:7190  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7174:7210  currentAllowance < requestedDecrease */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7170:7318  if (currentAllowance < requestedDecrease) {... */\n      iszero\n      tag_103\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7262:7269  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7271:7287  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7289:7306  requestedDecrease */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7233:7307  ERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease) */\n      mload(0x40)\n      0xa60f030c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7170:7318  if (currentAllowance < requestedDecrease) {... */\n    tag_103:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7351:7413  _approve(owner, spender, currentAllowance - requestedDecrease) */\n      tag_106\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7360:7365  owner */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7367:7374  spender */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7395:7412  requestedDecrease */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7376:7392  currentAllowance */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7376:7412  currentAllowance - requestedDecrease */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7351:7359  _approve */\n      tag_78\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7351:7413  _approve(owner, spender, currentAllowance - requestedDecrease) */\n      jump\t// in\n    tag_106:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7441:7445  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7434:7445  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6959:7452  function decreaseAllowance(address spender, uint256 requestedDecrease) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3988:4166  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_60:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4057:4061  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4073:4086  address owner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4089:4101  _msgSender() */\n      tag_108\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4089:4099  _msgSender */\n      tag_76\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4089:4101  _msgSender() */\n      jump\t// in\n    tag_108:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4073:4101  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4111:4138  _transfer(owner, to, value) */\n      tag_109\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4121:4126  owner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4128:4130  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4132:4137  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4111:4120  _transfer */\n      tag_85\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4111:4138  _transfer(owner, to, value) */\n      jump\t// in\n    tag_109:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4155:4159  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4148:4159  return true */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3988:4166  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4224:4364  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_65:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4304:4311  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4330:4341  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4330:4348  _allowances[owner] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4342:4347  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4330:4348  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4330:4357  _allowances[owner][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4349:4356  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4330:4357  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4323:4357  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4224:4364  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":641:737  function _msgSender() internal view virtual returns (address) {... */\n    tag_76:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":694:701  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":720:730  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":713:730  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":641:737  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11158:11286  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_78:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11242:11279  _approve(owner, spender, value, true) */\n      tag_113\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11251:11256  owner */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11258:11265  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11267:11272  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11274:11278  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11242:11250  _approve */\n      tag_114\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11242:11279  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_113:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11158:11286  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12829:13306  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_83:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12928:12952  uint256 currentAllowance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12955:12980  allowance(owner, spender) */\n      tag_116\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12965:12970  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12972:12979  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12955:12964  allowance */\n      tag_65\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12955:12980  allowance(owner, spender) */\n      jump\t// in\n    tag_116:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12928:12980  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":13014:13031  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12994:13010  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12994:13031  currentAllowance != type(uint256).max */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12990:13300  if (currentAllowance != type(uint256).max) {... */\n      tag_117\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":13070:13075  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":13051:13067  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":13051:13075  currentAllowance < value */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":13047:13177  if (currentAllowance < value) {... */\n      iszero\n      tag_118\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":13129:13136  spender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":13138:13154  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":13156:13161  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":13102:13162  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":13047:13177  if (currentAllowance < value) {... */\n    tag_118:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":13218:13275  _approve(owner, spender, currentAllowance - value, false) */\n      tag_120\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":13227:13232  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":13234:13241  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":13262:13267  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":13243:13259  currentAllowance */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":13243:13267  currentAllowance - value */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":13269:13274  false */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":13218:13226  _approve */\n      tag_114\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":13218:13275  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_120:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12990:13300  if (currentAllowance != type(uint256).max) {... */\n    tag_117:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12918:13306  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12829:13306  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7825:8125  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_85:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7924:7925  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7908:7926  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7908:7912  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7908:7926  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7904:7990  if (from == address(0)) {... */\n      tag_122\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7976:7977  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7949:7979  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7904:7990  if (from == address(0)) {... */\n    tag_122:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8017:8018  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8003:8019  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8003:8005  to */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8003:8019  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7999:8085  if (to == address(0)) {... */\n      tag_125\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8071:8072  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8042:8074  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7999:8085  if (to == address(0)) {... */\n    tag_125:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8094:8118  _update(from, to, value) */\n      tag_127\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8102:8106  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8108:8110  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8112:8117  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8094:8101  _update */\n      tag_128\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8094:8118  _update(from, to, value) */\n      jump\t// in\n    tag_127:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7825:8125  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12118:12550  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_114:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12247:12248  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12230:12249  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12230:12235  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12230:12249  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12226:12315  if (owner == address(0)) {... */\n      tag_130\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12301:12302  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12272:12304  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12226:12315  if (owner == address(0)) {... */\n    tag_130:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12347:12348  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12328:12349  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12328:12335  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12328:12349  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12324:12414  if (spender == address(0)) {... */\n      tag_132\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12400:12401  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12372:12403  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12324:12414  if (spender == address(0)) {... */\n    tag_132:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12453:12458  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12423:12434  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12423:12441  _allowances[owner] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12435:12440  owner */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12423:12441  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12423:12450  _allowances[owner][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12442:12449  spender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12423:12450  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12423:12458  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12472:12481  emitEvent */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12468:12544  if (emitEvent) {... */\n      iszero\n      tag_134\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12518:12525  spender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12502:12533  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12511:12516  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12502:12533  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12527:12532  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12502:12533  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_135\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12468:12544  if (emitEvent) {... */\n    tag_134:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12118:12550  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8433:9540  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_128:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8538:8539  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8522:8540  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8522:8526  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8522:8540  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8518:9058  if (from == address(0)) {... */\n      tag_137\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8674:8679  value */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8658:8670  _totalSupply */\n      0x02\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8658:8679  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_138\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_138:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8518:9058  if (from == address(0)) {... */\n      jump(tag_139)\n    tag_137:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8710:8729  uint256 fromBalance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8732:8741  _balances */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8732:8747  _balances[from] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8742:8746  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8732:8747  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8710:8747  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8779:8784  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8765:8776  fromBalance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8765:8784  fromBalance < value */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8761:8876  if (fromBalance < value) {... */\n      iszero\n      tag_140\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8836:8840  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8842:8853  fromBalance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8855:8860  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8811:8861  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_141\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8761:8876  if (fromBalance < value) {... */\n    tag_140:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9028:9033  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9014:9025  fromBalance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9014:9033  fromBalance - value */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8996:9005  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8996:9011  _balances[from] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9006:9010  from */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8996:9011  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8996:9033  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8696:9058  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8518:9058  if (from == address(0)) {... */\n    tag_139:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9086:9087  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9072:9088  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9072:9074  to */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9072:9088  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9068:9493  if (to == address(0)) {... */\n      tag_142\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9251:9256  value */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9235:9247  _totalSupply */\n      0x02\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9235:9256  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9068:9493  if (to == address(0)) {... */\n      jump(tag_143)\n    tag_142:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9463:9468  value */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9446:9455  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9446:9459  _balances[to] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9456:9458  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9446:9459  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9446:9468  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9068:9493  if (to == address(0)) {... */\n    tag_143:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9523:9525  to */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9508:9533  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9517:9521  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9508:9533  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9527:9532  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9508:9533  Transfer(from, to, value) */\n      mload(0x40)\n      tag_144\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8433:9540  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_145:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_146:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_147:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_172:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_174\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_172)\n    tag_174:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_148:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_149:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_177\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_145\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":818:889   */\n      tag_178\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_146\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_179\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_147\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":988:1017   */\n      tag_180\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_148\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_19:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_182\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_149\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_151:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_153:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_154:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_188\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_153\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_155:\n        /* \"#utility.yul\":1983:2007   */\n      tag_190\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_154\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_191\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_191:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_156:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_193\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_155\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_157:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_158:\n        /* \"#utility.yul\":2339:2363   */\n      tag_196\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_157\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_197\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_197:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_159:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_199\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_158\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_22:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_201\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_202\n      tag_151\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":2632:2751   */\n    tag_201:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_203\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_156\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_204\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_159\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_160:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_161:\n        /* \"#utility.yul\":3196:3217   */\n      tag_207\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_160\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_25:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_209\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_161\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_162:\n        /* \"#utility.yul\":3533:3557   */\n      tag_211\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_157\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_29:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_213\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_162\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_32:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_215\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_216\n      tag_151\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":3908:4027   */\n    tag_215:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_217\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_156\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_218\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_156\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_219\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_159\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_163:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_164:\n        /* \"#utility.yul\":4598:4620   */\n      tag_222\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_163\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_41:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_224\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_164\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:5182   */\n    tag_48:\n        /* \"#utility.yul\":4912:4918   */\n      0x00\n        /* \"#utility.yul\":4961:4963   */\n      0x20\n        /* \"#utility.yul\":4949:4958   */\n      dup3\n        /* \"#utility.yul\":4940:4947   */\n      dup5\n        /* \"#utility.yul\":4936:4959   */\n      sub\n        /* \"#utility.yul\":4932:4964   */\n      slt\n        /* \"#utility.yul\":4929:5048   */\n      iszero\n      tag_226\n      jumpi\n        /* \"#utility.yul\":4967:5046   */\n      tag_227\n      tag_151\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":4929:5048   */\n    tag_226:\n        /* \"#utility.yul\":5087:5088   */\n      0x00\n        /* \"#utility.yul\":5112:5165   */\n      tag_228\n        /* \"#utility.yul\":5157:5164   */\n      dup5\n        /* \"#utility.yul\":5148:5154   */\n      dup3\n        /* \"#utility.yul\":5137:5146   */\n      dup6\n        /* \"#utility.yul\":5133:5155   */\n      add\n        /* \"#utility.yul\":5112:5165   */\n      tag_156\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":5102:5165   */\n      swap2\n      pop\n        /* \"#utility.yul\":5058:5175   */\n      pop\n        /* \"#utility.yul\":4853:5182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5662   */\n    tag_64:\n        /* \"#utility.yul\":5256:5262   */\n      0x00\n        /* \"#utility.yul\":5264:5270   */\n      dup1\n        /* \"#utility.yul\":5313:5315   */\n      0x40\n        /* \"#utility.yul\":5301:5310   */\n      dup4\n        /* \"#utility.yul\":5292:5299   */\n      dup6\n        /* \"#utility.yul\":5288:5311   */\n      sub\n        /* \"#utility.yul\":5284:5316   */\n      slt\n        /* \"#utility.yul\":5281:5400   */\n      iszero\n      tag_230\n      jumpi\n        /* \"#utility.yul\":5319:5398   */\n      tag_231\n      tag_151\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":5281:5400   */\n    tag_230:\n        /* \"#utility.yul\":5439:5440   */\n      0x00\n        /* \"#utility.yul\":5464:5517   */\n      tag_232\n        /* \"#utility.yul\":5509:5516   */\n      dup6\n        /* \"#utility.yul\":5500:5506   */\n      dup3\n        /* \"#utility.yul\":5489:5498   */\n      dup7\n        /* \"#utility.yul\":5485:5507   */\n      add\n        /* \"#utility.yul\":5464:5517   */\n      tag_156\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":5454:5517   */\n      swap3\n      pop\n        /* \"#utility.yul\":5410:5527   */\n      pop\n        /* \"#utility.yul\":5566:5568   */\n      0x20\n        /* \"#utility.yul\":5592:5645   */\n      tag_233\n        /* \"#utility.yul\":5637:5644   */\n      dup6\n        /* \"#utility.yul\":5628:5634   */\n      dup3\n        /* \"#utility.yul\":5617:5626   */\n      dup7\n        /* \"#utility.yul\":5613:5635   */\n      add\n        /* \"#utility.yul\":5592:5645   */\n      tag_156\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":5582:5645   */\n      swap2\n      pop\n        /* \"#utility.yul\":5537:5655   */\n      pop\n        /* \"#utility.yul\":5188:5662   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5668:5848   */\n    tag_165:\n        /* \"#utility.yul\":5716:5793   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5713:5714   */\n      0x00\n        /* \"#utility.yul\":5706:5794   */\n      mstore\n        /* \"#utility.yul\":5813:5817   */\n      0x22\n        /* \"#utility.yul\":5810:5811   */\n      0x04\n        /* \"#utility.yul\":5803:5818   */\n      mstore\n        /* \"#utility.yul\":5837:5841   */\n      0x24\n        /* \"#utility.yul\":5834:5835   */\n      0x00\n        /* \"#utility.yul\":5827:5842   */\n      revert\n        /* \"#utility.yul\":5854:6174   */\n    tag_69:\n        /* \"#utility.yul\":5898:5904   */\n      0x00\n        /* \"#utility.yul\":5935:5936   */\n      0x02\n        /* \"#utility.yul\":5929:5933   */\n      dup3\n        /* \"#utility.yul\":5925:5937   */\n      div\n        /* \"#utility.yul\":5915:5937   */\n      swap1\n      pop\n        /* \"#utility.yul\":5982:5983   */\n      0x01\n        /* \"#utility.yul\":5976:5980   */\n      dup3\n        /* \"#utility.yul\":5972:5984   */\n      and\n        /* \"#utility.yul\":6003:6021   */\n      dup1\n        /* \"#utility.yul\":5993:6074   */\n      tag_236\n      jumpi\n        /* \"#utility.yul\":6059:6063   */\n      0x7f\n        /* \"#utility.yul\":6051:6057   */\n      dup3\n        /* \"#utility.yul\":6047:6064   */\n      and\n        /* \"#utility.yul\":6037:6064   */\n      swap2\n      pop\n        /* \"#utility.yul\":5993:6074   */\n    tag_236:\n        /* \"#utility.yul\":6121:6123   */\n      0x20\n        /* \"#utility.yul\":6113:6119   */\n      dup3\n        /* \"#utility.yul\":6110:6124   */\n      lt\n        /* \"#utility.yul\":6090:6108   */\n      dup2\n        /* \"#utility.yul\":6087:6125   */\n      sub\n        /* \"#utility.yul\":6084:6168   */\n      tag_237\n      jumpi\n        /* \"#utility.yul\":6140:6158   */\n      tag_238\n      tag_165\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":6084:6168   */\n    tag_237:\n        /* \"#utility.yul\":5905:6174   */\n      pop\n        /* \"#utility.yul\":5854:6174   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6180:6360   */\n    tag_166:\n        /* \"#utility.yul\":6228:6305   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6225:6226   */\n      0x00\n        /* \"#utility.yul\":6218:6306   */\n      mstore\n        /* \"#utility.yul\":6325:6329   */\n      0x11\n        /* \"#utility.yul\":6322:6323   */\n      0x04\n        /* \"#utility.yul\":6315:6330   */\n      mstore\n        /* \"#utility.yul\":6349:6353   */\n      0x24\n        /* \"#utility.yul\":6346:6347   */\n      0x00\n        /* \"#utility.yul\":6339:6354   */\n      revert\n        /* \"#utility.yul\":6366:6557   */\n    tag_92:\n        /* \"#utility.yul\":6406:6409   */\n      0x00\n        /* \"#utility.yul\":6425:6445   */\n      tag_241\n        /* \"#utility.yul\":6443:6444   */\n      dup3\n        /* \"#utility.yul\":6425:6445   */\n      tag_157\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":6420:6445   */\n      swap2\n      pop\n        /* \"#utility.yul\":6459:6479   */\n      tag_242\n        /* \"#utility.yul\":6477:6478   */\n      dup4\n        /* \"#utility.yul\":6459:6479   */\n      tag_157\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":6454:6479   */\n      swap3\n      pop\n        /* \"#utility.yul\":6502:6503   */\n      dup3\n        /* \"#utility.yul\":6499:6500   */\n      dup3\n        /* \"#utility.yul\":6495:6504   */\n      add\n        /* \"#utility.yul\":6488:6504   */\n      swap1\n      pop\n        /* \"#utility.yul\":6523:6526   */\n      dup1\n        /* \"#utility.yul\":6520:6521   */\n      dup3\n        /* \"#utility.yul\":6517:6527   */\n      gt\n        /* \"#utility.yul\":6514:6550   */\n      iszero\n      tag_243\n      jumpi\n        /* \"#utility.yul\":6530:6548   */\n      tag_244\n      tag_166\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":6514:6550   */\n    tag_243:\n        /* \"#utility.yul\":6366:6557   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6563:6681   */\n    tag_167:\n        /* \"#utility.yul\":6650:6674   */\n      tag_246\n        /* \"#utility.yul\":6668:6673   */\n      dup2\n        /* \"#utility.yul\":6650:6674   */\n      tag_154\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":6645:6648   */\n      dup3\n        /* \"#utility.yul\":6638:6675   */\n      mstore\n        /* \"#utility.yul\":6563:6681   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6687:7129   */\n    tag_105:\n        /* \"#utility.yul\":6836:6840   */\n      0x00\n        /* \"#utility.yul\":6874:6876   */\n      0x60\n        /* \"#utility.yul\":6863:6872   */\n      dup3\n        /* \"#utility.yul\":6859:6877   */\n      add\n        /* \"#utility.yul\":6851:6877   */\n      swap1\n      pop\n        /* \"#utility.yul\":6887:6958   */\n      tag_248\n        /* \"#utility.yul\":6955:6956   */\n      0x00\n        /* \"#utility.yul\":6944:6953   */\n      dup4\n        /* \"#utility.yul\":6940:6957   */\n      add\n        /* \"#utility.yul\":6931:6937   */\n      dup7\n        /* \"#utility.yul\":6887:6958   */\n      tag_167\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":6968:7040   */\n      tag_249\n        /* \"#utility.yul\":7036:7038   */\n      0x20\n        /* \"#utility.yul\":7025:7034   */\n      dup4\n        /* \"#utility.yul\":7021:7039   */\n      add\n        /* \"#utility.yul\":7012:7018   */\n      dup6\n        /* \"#utility.yul\":6968:7040   */\n      tag_162\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":7050:7122   */\n      tag_250\n        /* \"#utility.yul\":7118:7120   */\n      0x40\n        /* \"#utility.yul\":7107:7116   */\n      dup4\n        /* \"#utility.yul\":7103:7121   */\n      add\n        /* \"#utility.yul\":7094:7100   */\n      dup5\n        /* \"#utility.yul\":7050:7122   */\n      tag_162\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":6687:7129   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7135:7357   */\n    tag_124:\n        /* \"#utility.yul\":7228:7232   */\n      0x00\n        /* \"#utility.yul\":7266:7268   */\n      0x20\n        /* \"#utility.yul\":7255:7264   */\n      dup3\n        /* \"#utility.yul\":7251:7269   */\n      add\n        /* \"#utility.yul\":7243:7269   */\n      swap1\n      pop\n        /* \"#utility.yul\":7279:7350   */\n      tag_252\n        /* \"#utility.yul\":7347:7348   */\n      0x00\n        /* \"#utility.yul\":7336:7345   */\n      dup4\n        /* \"#utility.yul\":7332:7349   */\n      add\n        /* \"#utility.yul\":7323:7329   */\n      dup5\n        /* \"#utility.yul\":7279:7350   */\n      tag_167\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":7135:7357   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122065040ed8da1c6c77bec9586743f027bd9e0feb0fc43a29a1e0017c5deb3ed2b664736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_234": {
									"entryPoint": null,
									"id": 234,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_35": {
									"entryPoint": null,
									"id": 35,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_611": {
									"entryPoint": 134,
									"id": 611,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_578": {
									"entryPoint": 272,
									"id": 578,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1085,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1159,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 1209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2202,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2349,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2408,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 960,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 820,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 990,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1447,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1756,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2166,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2135,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1577,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1595,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1907,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1043,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1465,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1395,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1878,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1586,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1848,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2229,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1350,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 861,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1634,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 837,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 841,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 833,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 829,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 845,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1480,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1836,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1690,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1492,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1643,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1686,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10343:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:6"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:6"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:6",
														"type": ""
													}
												],
												"src": "580:102:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:6"
															},
															"nodeType": "YulIf",
															"src": "1030:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:6"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:6",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:6",
														"type": ""
													}
												],
												"src": "874:281:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:6"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:6"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:6"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:6",
														"type": ""
													}
												],
												"src": "1161:129:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:6"
															},
															"nodeType": "YulIf",
															"src": "1434:56:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:6"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:6"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:6",
														"type": ""
													}
												],
												"src": "1296:308:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1672:184:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1691:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1751:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:6"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1723:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1725:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1705:3:6",
																"statements": []
															},
															"src": "1701:113:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:6"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1823:27:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1654:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1659:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1664:6:6",
														"type": ""
													}
												],
												"src": "1610:246:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1957:339:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1967:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:6"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:6"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1976:66:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:16:6"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2146:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:6"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2120:25:6"
															},
															"nodeType": "YulIf",
															"src": "2117:112:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:6"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2238:52:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:6"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1930:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1935:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1943:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1951:5:6",
														"type": ""
													}
												],
												"src": "1862:434:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2389:282:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2438:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:6"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2402:35:6"
															},
															"nodeType": "YulIf",
															"src": "2399:122:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2544:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2566:99:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2575:90:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2367:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2375:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2383:5:6",
														"type": ""
													}
												],
												"src": "2316:355:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2791:739:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2837:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2839:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2839:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2839:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2812:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2821:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2808:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2808:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2833:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2804:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2804:32:6"
															},
															"nodeType": "YulIf",
															"src": "2801:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "2930:291:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2945:38:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2969:9:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2980:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2965:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2965:17:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2959:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2959:24:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2949:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3030:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3032:77:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3032:79:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3032:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3002:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3010:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2999:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2999:30:6"
																	},
																	"nodeType": "YulIf",
																	"src": "2996:117:6"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3127:84:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3183:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3194:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3179:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3179:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3203:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3137:41:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3137:74:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3127:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3231:292:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3246:39:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3270:9:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3281:2:6",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3266:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3266:18:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3260:25:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3250:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3332:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3334:77:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3334:79:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3334:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3304:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3312:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3301:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3301:30:6"
																	},
																	"nodeType": "YulIf",
																	"src": "3298:117:6"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3429:84:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3485:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3496:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3481:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3481:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3505:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3439:41:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3439:74:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3429:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2753:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2764:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2776:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2784:6:6",
														"type": ""
													}
												],
												"src": "2677:853:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3595:40:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3622:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3616:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3616:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3606:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3588:6:6",
														"type": ""
													}
												],
												"src": "3536:99:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3669:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3686:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3689:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3679:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3783:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3786:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3776:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3776:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3776:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3807:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3810:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3800:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3800:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3800:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3641:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3878:269:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3888:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3902:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3908:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3898:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3898:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3888:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3919:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3949:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3955:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3945:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3945:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3923:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3996:51:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4010:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4024:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4032:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4020:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4020:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4010:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3976:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3969:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3969:26:6"
															},
															"nodeType": "YulIf",
															"src": "3966:81:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4099:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "4113:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4113:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4113:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4063:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4086:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4094:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4083:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4083:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4060:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4060:38:6"
															},
															"nodeType": "YulIf",
															"src": "4057:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3862:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3871:6:6",
														"type": ""
													}
												],
												"src": "3827:320:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4207:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4217:11:6",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "4225:3:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4217:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4245:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "4248:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4238:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4238:14:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4238:14:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4261:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4279:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4282:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "4269:9:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4269:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4261:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4194:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4202:4:6",
														"type": ""
													}
												],
												"src": "4153:141:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4344:49:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4354:33:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4372:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4379:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4368:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4368:14:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4364:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4364:23:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4354:6:6"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4327:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4337:6:6",
														"type": ""
													}
												],
												"src": "4300:93:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4452:54:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4462:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "4487:4:6"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4493:5:6"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4483:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4483:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4462:8:6"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4427:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4433:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4443:8:6",
														"type": ""
													}
												],
												"src": "4399:107:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4588:317:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4598:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "4619:10:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4631:1:6",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4615:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4615:18:6"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "4602:9:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4642:109:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4673:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4684:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4654:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4654:97:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "4646:4:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4760:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4791:9:6"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "4802:8:6"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4772:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4772:39:6"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "4760:8:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4820:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4833:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4844:4:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4840:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4840:9:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4829:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4829:21:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4820:5:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4859:40:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4872:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "4883:8:6"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4893:4:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4879:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4879:19:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4869:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4869:30:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4859:6:6"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4549:5:6",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "4556:10:6",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "4568:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4581:6:6",
														"type": ""
													}
												],
												"src": "4512:393:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4956:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4966:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4977:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4966:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4938:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4948:7:6",
														"type": ""
													}
												],
												"src": "4911:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5026:28:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5036:12:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5043:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5036:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5012:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5022:3:6",
														"type": ""
													}
												],
												"src": "4994:60:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5120:82:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5130:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5188:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5170:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5170:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "5161:8:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5161:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5143:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5143:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5130:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5100:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5110:9:6",
														"type": ""
													}
												],
												"src": "5060:142:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5255:28:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5265:12:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5272:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5265:3:6"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5241:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5251:3:6",
														"type": ""
													}
												],
												"src": "5208:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5365:193:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5375:63:6",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "5430:7:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5399:30:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5399:39:6"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "5379:16:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5454:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "5494:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "5488:5:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5488:11:6"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5501:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "5533:16:6"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5509:23:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5509:41:6"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "5460:27:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5460:91:6"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "5447:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5447:105:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5447:105:6"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5342:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5348:6:6",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "5356:7:6",
														"type": ""
													}
												],
												"src": "5289:269:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5613:24:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5623:8:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5630:1:6",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5623:3:6"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5609:3:6",
														"type": ""
													}
												],
												"src": "5564:73:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5696:136:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5706:46:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5720:30:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5720:32:6"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "5710:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5805:4:6"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5811:6:6"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "5819:6:6"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5761:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5761:65:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5761:65:6"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5682:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5688:6:6",
														"type": ""
													}
												],
												"src": "5643:189:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5888:136:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5955:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5999:5:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6006:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "5969:29:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5969:39:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5969:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "5908:5:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5915:3:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5905:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5905:14:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5920:26:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5922:22:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5935:5:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5942:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5931:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5931:13:6"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "5922:5:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5902:2:6",
																"statements": []
															},
															"src": "5898:120:6"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "5876:5:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5883:3:6",
														"type": ""
													}
												],
												"src": "5838:186:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6109:464:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6135:431:6",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6149:54:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "6197:5:6"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "6165:31:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6165:38:6"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "6153:8:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6216:63:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "6239:8:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "6267:10:6"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "6249:17:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6249:29:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6235:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6235:44:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "6220:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6436:27:6",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6438:23:6",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "6453:8:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "6438:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "6420:10:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6432:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "6417:2:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6417:18:6"
																		},
																		"nodeType": "YulIf",
																		"src": "6414:49:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "6505:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "6522:8:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "6550:3:6"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "6532:17:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6532:22:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6518:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6518:37:6"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "6476:28:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6476:80:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6476:80:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "6126:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6131:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6123:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6123:11:6"
															},
															"nodeType": "YulIf",
															"src": "6120:446:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6085:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6092:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "6097:10:6",
														"type": ""
													}
												],
												"src": "6030:543:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6642:54:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6652:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "6677:4:6"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6683:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6673:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6673:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "6652:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "6617:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6623:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "6633:8:6",
														"type": ""
													}
												],
												"src": "6579:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6753:118:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6763:68:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6812:1:6",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "6815:5:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "6808:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6808:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6827:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "6823:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6823:6:6"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "6779:28:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6779:51:6"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "6775:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6775:56:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "6767:4:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6840:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6854:4:6"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "6860:4:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6850:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6850:15:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "6840:6:6"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6730:4:6",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "6736:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "6746:6:6",
														"type": ""
													}
												],
												"src": "6702:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6957:214:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7090:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7117:4:6"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "7123:3:6"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "7098:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7098:29:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "7090:4:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7136:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7147:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7157:1:6",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "7160:3:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7153:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7153:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7144:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7144:21:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "7136:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6938:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6944:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "6952:4:6",
														"type": ""
													}
												],
												"src": "6876:295:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7268:1303:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7279:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7326:3:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7293:32:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7293:37:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "7283:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7415:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7417:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7417:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7417:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7387:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7395:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7384:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7384:30:6"
															},
															"nodeType": "YulIf",
															"src": "7381:56:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7447:52:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "7493:4:6"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "7487:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7487:11:6"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "7461:25:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7461:38:6"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "7451:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "7592:4:6"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "7598:6:6"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7606:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "7546:45:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7546:67:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7546:67:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7623:18:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7640:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "7627:9:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7651:17:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7664:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "7651:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7715:611:6",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7729:37:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "7748:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7760:4:6",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "7756:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7756:9:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "7744:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7744:22:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "7733:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7780:51:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "7826:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "7794:31:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7794:37:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "7784:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7844:10:6",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7853:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "7848:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7912:163:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "7937:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "7955:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "7960:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "7951:3:6"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "7951:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "7945:5:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7945:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "7930:6:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7930:42:6"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7930:42:6"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "7989:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8003:6:6"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8011:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7999:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7999:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "7989:6:6"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8030:31:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "8047:9:6"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8058:2:6",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8043:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8043:18:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "8030:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "7878:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "7881:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "7875:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7875:14:6"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "7890:21:6",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "7892:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "7901:1:6"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7904:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7897:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7897:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "7892:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "7871:3:6",
																					"statements": []
																				},
																				"src": "7867:208:6"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8111:156:6",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "8129:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8156:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8161:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8152:3:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8152:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8146:5:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8146:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "8133:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8196:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "8223:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "8238:6:6"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "8246:4:6",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "8234:3:6"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8234:17:6"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "8204:18:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8204:48:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "8189:6:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8189:64:6"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8189:64:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "8094:7:6"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "8103:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "8091:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8091:19:6"
																				},
																				"nodeType": "YulIf",
																				"src": "8088:179:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8287:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "8301:6:6"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "8309:1:6",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "8297:3:6"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8297:14:6"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8313:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8293:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8293:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8280:6:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8280:36:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8280:36:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7708:618:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7713:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8343:222:6",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8357:14:6",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8370:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "8361:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8394:67:6",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8412:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8431:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8436:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8427:3:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8427:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8421:5:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8421:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8412:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "8387:6:6"
																				},
																				"nodeType": "YulIf",
																				"src": "8384:77:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8481:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8540:5:6"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "8547:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "8487:52:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8487:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8474:6:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8474:81:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8474:81:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8335:230:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7688:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7696:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7685:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7685:14:6"
															},
															"nodeType": "YulSwitch",
															"src": "7678:887:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "7257:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7263:3:6",
														"type": ""
													}
												],
												"src": "7176:1395:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8622:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8632:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8647:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8654:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8643:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8643:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8632:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8604:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8614:7:6",
														"type": ""
													}
												],
												"src": "8577:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8754:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8764:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8793:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "8775:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8775:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8764:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8736:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8746:7:6",
														"type": ""
													}
												],
												"src": "8709:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8876:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8893:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8916:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8898:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8898:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8886:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8886:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8886:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8864:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8871:3:6",
														"type": ""
													}
												],
												"src": "8811:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9033:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9043:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9055:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9066:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9051:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9051:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9043:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9123:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9136:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9147:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9132:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9132:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9079:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9079:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9079:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9005:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9017:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9028:4:6",
														"type": ""
													}
												],
												"src": "8935:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9191:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9208:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9211:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9201:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9201:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9201:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9305:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9308:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9298:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9298:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9298:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9329:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9332:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9322:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9322:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9322:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9163:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9393:147:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9403:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9426:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9408:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9408:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9403:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9437:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9460:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9442:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9442:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9437:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9471:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9482:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9485:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9478:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9478:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9471:3:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9511:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9513:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9513:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9513:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9503:1:6"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "9506:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9500:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9500:10:6"
															},
															"nodeType": "YulIf",
															"src": "9497:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9380:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9383:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9389:3:6",
														"type": ""
													}
												],
												"src": "9349:191:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9611:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9628:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9651:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9633:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9633:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9621:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9621:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9621:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9599:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9606:3:6",
														"type": ""
													}
												],
												"src": "9546:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9824:288:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9834:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9846:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9857:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9842:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9842:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9834:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9914:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9927:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9938:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9923:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9923:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9870:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9870:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9870:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9995:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10008:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10019:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10004:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10004:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9951:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9951:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9951:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10077:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10090:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10101:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10086:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10086:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10033:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10033:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10033:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9780:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9792:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9800:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9808:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9819:4:6",
														"type": ""
													}
												],
												"src": "9670:442:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10216:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10226:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10238:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10249:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10234:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10234:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10226:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10306:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10319:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10330:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10315:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10315:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10262:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10262:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10262:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10188:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10200:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10211:4:6",
														"type": ""
													}
												],
												"src": "10118:222:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600160055534801562000015575f80fd5b50604051620018e2380380620018e283398181016040528101906200003b9190620004b9565b818181600390816200004e919062000773565b50806004908162000060919062000773565b5050506200007e3368056bc75e2d631000006200008660201b60201c565b505062000983565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620000f9575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401620000f091906200089a565b60405180910390fd5b6200010c5f83836200011060201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160362000164578060025f828254620001579190620008e2565b9250508190555062000235565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015620001f0578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401620001e7939291906200092d565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200027e578060025f8282540392505081905550620002c8565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000327919062000968565b60405180910390a3505050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b62000395826200034d565b810181811067ffffffffffffffff82111715620003b757620003b66200035d565b5b80604052505050565b5f620003cb62000334565b9050620003d982826200038a565b919050565b5f67ffffffffffffffff821115620003fb57620003fa6200035d565b5b62000406826200034d565b9050602081019050919050565b5f5b838110156200043257808201518184015260208101905062000415565b5f8484015250505050565b5f620004536200044d84620003de565b620003c0565b90508281526020810184848401111562000472576200047162000349565b5b6200047f84828562000413565b509392505050565b5f82601f8301126200049e576200049d62000345565b5b8151620004b08482602086016200043d565b91505092915050565b5f8060408385031215620004d257620004d16200033d565b5b5f83015167ffffffffffffffff811115620004f257620004f162000341565b5b620005008582860162000487565b925050602083015167ffffffffffffffff81111562000524576200052362000341565b5b620005328582860162000487565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200058b57607f821691505b602082108103620005a157620005a062000546565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620006057fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620005c8565b620006118683620005c8565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6200065b620006556200064f8462000629565b62000632565b62000629565b9050919050565b5f819050919050565b62000676836200063b565b6200068e620006858262000662565b848454620005d4565b825550505050565b5f90565b620006a462000696565b620006b18184846200066b565b505050565b5b81811015620006d857620006cc5f826200069a565b600181019050620006b7565b5050565b601f8211156200072757620006f181620005a7565b620006fc84620005b9565b810160208510156200070c578190505b620007246200071b85620005b9565b830182620006b6565b50505b505050565b5f82821c905092915050565b5f620007495f19846008026200072c565b1980831691505092915050565b5f62000763838362000738565b9150826002028217905092915050565b6200077e826200053c565b67ffffffffffffffff8111156200079a57620007996200035d565b5b620007a6825462000573565b620007b3828285620006dc565b5f60209050601f831160018114620007e9575f8415620007d4578287015190505b620007e0858262000756565b8655506200084f565b601f198416620007f986620005a7565b5f5b828110156200082257848901518255600182019150602085019450602081019050620007fb565b868310156200084257848901516200083e601f89168262000738565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620008828262000857565b9050919050565b620008948162000876565b82525050565b5f602082019050620008af5f83018462000889565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f620008ee8262000629565b9150620008fb8362000629565b9250828201905080821115620009165762000915620008b5565b5b92915050565b620009278162000629565b82525050565b5f606082019050620009425f83018662000889565b6200095160208301856200091c565b6200096060408301846200091c565b949350505050565b5f6020820190506200097d5f8301846200091c565b92915050565b610f5180620009915f395ff3fe608060405234801561000f575f80fd5b50600436106100b2575f3560e01c8063395093511161006f578063395093511461018e57806370a08231146101be57806395d89b41146101ee578063a457c2d71461020c578063a9059cbb1461023c578063dd62ed3e1461026c576100b2565b806306fdde03146100b6578063095ea7b3146100d457806318160ddd1461010457806323b872dd146101225780632e52d60614610152578063313ce56714610170575b5f80fd5b6100be61029c565b6040516100cb9190610bca565b60405180910390f35b6100ee60048036038101906100e99190610c7b565b61032c565b6040516100fb9190610cd3565b60405180910390f35b61010c61034e565b6040516101199190610cfb565b60405180910390f35b61013c60048036038101906101379190610d14565b610357565b6040516101499190610cd3565b60405180910390f35b61015a610385565b6040516101679190610cfb565b60405180910390f35b61017861038b565b6040516101859190610d7f565b60405180910390f35b6101a860048036038101906101a39190610c7b565b610393565b6040516101b59190610cd3565b60405180910390f35b6101d860048036038101906101d39190610d98565b6103c9565b6040516101e59190610cfb565b60405180910390f35b6101f661040e565b6040516102039190610bca565b60405180910390f35b61022660048036038101906102219190610c7b565b61049e565b6040516102339190610cd3565b60405180910390f35b61025660048036038101906102519190610c7b565b610519565b6040516102639190610cd3565b60405180910390f35b61028660048036038101906102819190610dc3565b61053b565b6040516102939190610cfb565b60405180910390f35b6060600380546102ab90610e2e565b80601f01602080910402602001604051908101604052809291908181526020018280546102d790610e2e565b80156103225780601f106102f957610100808354040283529160200191610322565b820191905f5260205f20905b81548152906001019060200180831161030557829003601f168201915b5050505050905090565b5f806103366105bd565b90506103438185856105c4565b600191505092915050565b5f600254905090565b5f806103616105bd565b905061036e8582856105d6565b610379858585610668565b60019150509392505050565b60055481565b5f6012905090565b5f8061039d6105bd565b90506103be8185856103af858961053b565b6103b99190610e8b565b6105c4565b600191505092915050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606004805461041d90610e2e565b80601f016020809104026020016040519081016040528092919081815260200182805461044990610e2e565b80156104945780601f1061046b57610100808354040283529160200191610494565b820191905f5260205f20905b81548152906001019060200180831161047757829003601f168201915b5050505050905090565b5f806104a86105bd565b90505f6104b5828661053b565b905083811015610500578481856040517fa60f030c0000000000000000000000000000000000000000000000000000000081526004016104f793929190610ecd565b60405180910390fd5b61050d82868684036105c4565b60019250505092915050565b5f806105236105bd565b9050610530818585610668565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b6105d18383836001610758565b505050565b5f6105e1848461053b565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106625781811015610653578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161064a93929190610ecd565b60405180910390fd5b61066184848484035f610758565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106d8575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016106cf9190610f02565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610748575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161073f9190610f02565b60405180910390fd5b610753838383610927565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036107c8575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016107bf9190610f02565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610838575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161082f9190610f02565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610921578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516109189190610cfb565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610977578060025f82825461096b9190610e8b565b92505081905550610a45565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610a00578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016109f793929190610ecd565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a8c578060025f8282540392505081905550610ad6565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b339190610cfb565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610b77578082015181840152602081019050610b5c565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610b9c82610b40565b610ba68185610b4a565b9350610bb6818560208601610b5a565b610bbf81610b82565b840191505092915050565b5f6020820190508181035f830152610be28184610b92565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610c1782610bee565b9050919050565b610c2781610c0d565b8114610c31575f80fd5b50565b5f81359050610c4281610c1e565b92915050565b5f819050919050565b610c5a81610c48565b8114610c64575f80fd5b50565b5f81359050610c7581610c51565b92915050565b5f8060408385031215610c9157610c90610bea565b5b5f610c9e85828601610c34565b9250506020610caf85828601610c67565b9150509250929050565b5f8115159050919050565b610ccd81610cb9565b82525050565b5f602082019050610ce65f830184610cc4565b92915050565b610cf581610c48565b82525050565b5f602082019050610d0e5f830184610cec565b92915050565b5f805f60608486031215610d2b57610d2a610bea565b5b5f610d3886828701610c34565b9350506020610d4986828701610c34565b9250506040610d5a86828701610c67565b9150509250925092565b5f60ff82169050919050565b610d7981610d64565b82525050565b5f602082019050610d925f830184610d70565b92915050565b5f60208284031215610dad57610dac610bea565b5b5f610dba84828501610c34565b91505092915050565b5f8060408385031215610dd957610dd8610bea565b5b5f610de685828601610c34565b9250506020610df785828601610c34565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610e4557607f821691505b602082108103610e5857610e57610e01565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610e9582610c48565b9150610ea083610c48565b9250828201905080821115610eb857610eb7610e5e565b5b92915050565b610ec781610c0d565b82525050565b5f606082019050610ee05f830186610ebe565b610eed6020830185610cec565b610efa6040830184610cec565b949350505050565b5f602082019050610f155f830184610ebe565b9291505056fea264697066735822122065040ed8da1c6c77bec9586743f027bd9e0feb0fc43a29a1e0017c5deb3ed2b664736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x5 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x15 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x18E2 CODESIZE SUB DUP1 PUSH3 0x18E2 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x3B SWAP2 SWAP1 PUSH3 0x4B9 JUMP JUMPDEST DUP2 DUP2 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x4E SWAP2 SWAP1 PUSH3 0x773 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x60 SWAP2 SWAP1 PUSH3 0x773 JUMP JUMPDEST POP POP POP PUSH3 0x7E CALLER PUSH9 0x56BC75E2D63100000 PUSH3 0x86 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0x983 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xF9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xF0 SWAP2 SWAP1 PUSH3 0x89A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x10C PUSH0 DUP4 DUP4 PUSH3 0x110 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x164 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x157 SWAP2 SWAP1 PUSH3 0x8E2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x235 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x1F0 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1E7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x92D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x27E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x2C8 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x327 SWAP2 SWAP1 PUSH3 0x968 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH3 0x395 DUP3 PUSH3 0x34D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x3B7 JUMPI PUSH3 0x3B6 PUSH3 0x35D JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x3CB PUSH3 0x334 JUMP JUMPDEST SWAP1 POP PUSH3 0x3D9 DUP3 DUP3 PUSH3 0x38A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x3FB JUMPI PUSH3 0x3FA PUSH3 0x35D JUMP JUMPDEST JUMPDEST PUSH3 0x406 DUP3 PUSH3 0x34D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x432 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x415 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x453 PUSH3 0x44D DUP5 PUSH3 0x3DE JUMP JUMPDEST PUSH3 0x3C0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x472 JUMPI PUSH3 0x471 PUSH3 0x349 JUMP JUMPDEST JUMPDEST PUSH3 0x47F DUP5 DUP3 DUP6 PUSH3 0x413 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x49E JUMPI PUSH3 0x49D PUSH3 0x345 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x4B0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x43D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x4D2 JUMPI PUSH3 0x4D1 PUSH3 0x33D JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4F2 JUMPI PUSH3 0x4F1 PUSH3 0x341 JUMP JUMPDEST JUMPDEST PUSH3 0x500 DUP6 DUP3 DUP7 ADD PUSH3 0x487 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x524 JUMPI PUSH3 0x523 PUSH3 0x341 JUMP JUMPDEST JUMPDEST PUSH3 0x532 DUP6 DUP3 DUP7 ADD PUSH3 0x487 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x58B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x5A1 JUMPI PUSH3 0x5A0 PUSH3 0x546 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x605 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x5C8 JUMP JUMPDEST PUSH3 0x611 DUP7 DUP4 PUSH3 0x5C8 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x65B PUSH3 0x655 PUSH3 0x64F DUP5 PUSH3 0x629 JUMP JUMPDEST PUSH3 0x632 JUMP JUMPDEST PUSH3 0x629 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x676 DUP4 PUSH3 0x63B JUMP JUMPDEST PUSH3 0x68E PUSH3 0x685 DUP3 PUSH3 0x662 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x5D4 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x6A4 PUSH3 0x696 JUMP JUMPDEST PUSH3 0x6B1 DUP2 DUP5 DUP5 PUSH3 0x66B JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x6D8 JUMPI PUSH3 0x6CC PUSH0 DUP3 PUSH3 0x69A JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x6B7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x727 JUMPI PUSH3 0x6F1 DUP2 PUSH3 0x5A7 JUMP JUMPDEST PUSH3 0x6FC DUP5 PUSH3 0x5B9 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x70C JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x724 PUSH3 0x71B DUP6 PUSH3 0x5B9 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x6B6 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x749 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x72C JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x763 DUP4 DUP4 PUSH3 0x738 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x77E DUP3 PUSH3 0x53C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x79A JUMPI PUSH3 0x799 PUSH3 0x35D JUMP JUMPDEST JUMPDEST PUSH3 0x7A6 DUP3 SLOAD PUSH3 0x573 JUMP JUMPDEST PUSH3 0x7B3 DUP3 DUP3 DUP6 PUSH3 0x6DC JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x7E9 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x7D4 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x7E0 DUP6 DUP3 PUSH3 0x756 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x84F JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x7F9 DUP7 PUSH3 0x5A7 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x822 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x7FB JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x842 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x83E PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x738 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x882 DUP3 PUSH3 0x857 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x894 DUP2 PUSH3 0x876 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x8AF PUSH0 DUP4 ADD DUP5 PUSH3 0x889 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH3 0x8EE DUP3 PUSH3 0x629 JUMP JUMPDEST SWAP2 POP PUSH3 0x8FB DUP4 PUSH3 0x629 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x916 JUMPI PUSH3 0x915 PUSH3 0x8B5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x927 DUP2 PUSH3 0x629 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x942 PUSH0 DUP4 ADD DUP7 PUSH3 0x889 JUMP JUMPDEST PUSH3 0x951 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x91C JUMP JUMPDEST PUSH3 0x960 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x91C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x97D PUSH0 DUP4 ADD DUP5 PUSH3 0x91C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF51 DUP1 PUSH3 0x991 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x26C JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x2E52D606 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x170 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBE PUSH2 0x29C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xBCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xC7B JUMP JUMPDEST PUSH2 0x32C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0xCD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x34E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xCFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0xD14 JUMP JUMPDEST PUSH2 0x357 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0xCD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH2 0x385 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xCFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH2 0x38B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0xD7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0xC7B JUMP JUMPDEST PUSH2 0x393 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0xCD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0xD98 JUMP JUMPDEST PUSH2 0x3C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0xCFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F6 PUSH2 0x40E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x203 SWAP2 SWAP1 PUSH2 0xBCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x226 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x221 SWAP2 SWAP1 PUSH2 0xC7B JUMP JUMPDEST PUSH2 0x49E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x233 SWAP2 SWAP1 PUSH2 0xCD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x251 SWAP2 SWAP1 PUSH2 0xC7B JUMP JUMPDEST PUSH2 0x519 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x263 SWAP2 SWAP1 PUSH2 0xCD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x286 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x281 SWAP2 SWAP1 PUSH2 0xDC3 JUMP JUMPDEST PUSH2 0x53B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x293 SWAP2 SWAP1 PUSH2 0xCFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2AB SWAP1 PUSH2 0xE2E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D7 SWAP1 PUSH2 0xE2E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x322 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x322 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x305 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x336 PUSH2 0x5BD JUMP JUMPDEST SWAP1 POP PUSH2 0x343 DUP2 DUP6 DUP6 PUSH2 0x5C4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x361 PUSH2 0x5BD JUMP JUMPDEST SWAP1 POP PUSH2 0x36E DUP6 DUP3 DUP6 PUSH2 0x5D6 JUMP JUMPDEST PUSH2 0x379 DUP6 DUP6 DUP6 PUSH2 0x668 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x39D PUSH2 0x5BD JUMP JUMPDEST SWAP1 POP PUSH2 0x3BE DUP2 DUP6 DUP6 PUSH2 0x3AF DUP6 DUP10 PUSH2 0x53B JUMP JUMPDEST PUSH2 0x3B9 SWAP2 SWAP1 PUSH2 0xE8B JUMP JUMPDEST PUSH2 0x5C4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x41D SWAP1 PUSH2 0xE2E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x449 SWAP1 PUSH2 0xE2E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x494 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x46B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x494 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x477 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4A8 PUSH2 0x5BD JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x4B5 DUP3 DUP7 PUSH2 0x53B JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x500 JUMPI DUP5 DUP2 DUP6 PUSH1 0x40 MLOAD PUSH32 0xA60F030C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xECD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x50D DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5C4 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x523 PUSH2 0x5BD JUMP JUMPDEST SWAP1 POP PUSH2 0x530 DUP2 DUP6 DUP6 PUSH2 0x668 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5D1 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x758 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5E1 DUP5 DUP5 PUSH2 0x53B JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x662 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x653 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xECD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x661 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x758 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6D8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CF SWAP2 SWAP1 PUSH2 0xF02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x748 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x73F SWAP2 SWAP1 PUSH2 0xF02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x753 DUP4 DUP4 DUP4 PUSH2 0x927 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7C8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BF SWAP2 SWAP1 PUSH2 0xF02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x838 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82F SWAP2 SWAP1 PUSH2 0xF02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x921 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x918 SWAP2 SWAP1 PUSH2 0xCFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x977 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x96B SWAP2 SWAP1 PUSH2 0xE8B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA45 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xA00 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xECD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA8C JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xAD6 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xB33 SWAP2 SWAP1 PUSH2 0xCFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB77 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xB5C JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB9C DUP3 PUSH2 0xB40 JUMP JUMPDEST PUSH2 0xBA6 DUP2 DUP6 PUSH2 0xB4A JUMP JUMPDEST SWAP4 POP PUSH2 0xBB6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xB5A JUMP JUMPDEST PUSH2 0xBBF DUP2 PUSH2 0xB82 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xBE2 DUP2 DUP5 PUSH2 0xB92 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC17 DUP3 PUSH2 0xBEE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC27 DUP2 PUSH2 0xC0D JUMP JUMPDEST DUP2 EQ PUSH2 0xC31 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC42 DUP2 PUSH2 0xC1E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC5A DUP2 PUSH2 0xC48 JUMP JUMPDEST DUP2 EQ PUSH2 0xC64 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC75 DUP2 PUSH2 0xC51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC91 JUMPI PUSH2 0xC90 PUSH2 0xBEA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC9E DUP6 DUP3 DUP7 ADD PUSH2 0xC34 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCAF DUP6 DUP3 DUP7 ADD PUSH2 0xC67 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCCD DUP2 PUSH2 0xCB9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCE6 PUSH0 DUP4 ADD DUP5 PUSH2 0xCC4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCF5 DUP2 PUSH2 0xC48 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD0E PUSH0 DUP4 ADD DUP5 PUSH2 0xCEC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD2B JUMPI PUSH2 0xD2A PUSH2 0xBEA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD38 DUP7 DUP3 DUP8 ADD PUSH2 0xC34 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xD49 DUP7 DUP3 DUP8 ADD PUSH2 0xC34 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xD5A DUP7 DUP3 DUP8 ADD PUSH2 0xC67 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD79 DUP2 PUSH2 0xD64 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD92 PUSH0 DUP4 ADD DUP5 PUSH2 0xD70 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDAD JUMPI PUSH2 0xDAC PUSH2 0xBEA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDBA DUP5 DUP3 DUP6 ADD PUSH2 0xC34 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDD9 JUMPI PUSH2 0xDD8 PUSH2 0xBEA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDE6 DUP6 DUP3 DUP7 ADD PUSH2 0xC34 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDF7 DUP6 DUP3 DUP7 ADD PUSH2 0xC34 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xE45 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xE58 JUMPI PUSH2 0xE57 PUSH2 0xE01 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE95 DUP3 PUSH2 0xC48 JUMP JUMPDEST SWAP2 POP PUSH2 0xEA0 DUP4 PUSH2 0xC48 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xEB8 JUMPI PUSH2 0xEB7 PUSH2 0xE5E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEC7 DUP2 PUSH2 0xC0D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xEE0 PUSH0 DUP4 ADD DUP7 PUSH2 0xEBE JUMP JUMPDEST PUSH2 0xEED PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xCEC JUMP JUMPDEST PUSH2 0xEFA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xCEC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF15 PUSH0 DUP4 ADD DUP5 PUSH2 0xEBE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0x40ED8DA1C6C PUSH24 0xBEC9586743F027BD9E0FEB0FC43A29A1E0017C5DEB3ED2B6 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "172:454:0:-:0;;;224:7;208:23;;278:345;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;340:5;347:7;2348:5:2;2340;:13;;;;;;:::i;:::-;;2373:7;2363;:17;;;;;;:::i;:::-;;2274:113;;581:32:0::1;587:10;599:13;581:5;;;:32;;:::i;:::-;278:345:::0;;172:454;;9883:208:2;9972:1;9953:21;;:7;:21;;;9949:91;;10026:1;9997:32;;;;;;;;;;;:::i;:::-;;;;;;;;9949:91;10049:35;10065:1;10069:7;10078:5;10049:7;;;:35;;:::i;:::-;9883:208;;:::o;8433:1107::-;8538:1;8522:18;;:4;:18;;;8518:540;;8674:5;8658:12;;:21;;;;;;;:::i;:::-;;;;;;;;8518:540;;;8710:19;8732:9;:15;8742:4;8732:15;;;;;;;;;;;;;;;;8710:37;;8779:5;8765:11;:19;8761:115;;;8836:4;8842:11;8855:5;8811:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;8761:115;9028:5;9014:11;:19;8996:9;:15;9006:4;8996:15;;;;;;;;;;;;;;;:37;;;;8696:362;8518:540;9086:1;9072:16;;:2;:16;;;9068:425;;9251:5;9235:12;;:21;;;;;;;;;;;9068:425;;;9463:5;9446:9;:13;9456:2;9446:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;9068:425;9523:2;9508:25;;9517:4;9508:25;;;9527:5;9508:25;;;;;;:::i;:::-;;;;;;;;8433:1107;;;:::o;7:75:6:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;8577:126::-;8614:7;8654:42;8647:5;8643:54;8632:65;;8577:126;;;:::o;8709:96::-;8746:7;8775:24;8793:5;8775:24;:::i;:::-;8764:35;;8709:96;;;:::o;8811:118::-;8898:24;8916:5;8898:24;:::i;:::-;8893:3;8886:37;8811:118;;:::o;8935:222::-;9028:4;9066:2;9055:9;9051:18;9043:26;;9079:71;9147:1;9136:9;9132:17;9123:6;9079:71;:::i;:::-;8935:222;;;;:::o;9163:180::-;9211:77;9208:1;9201:88;9308:4;9305:1;9298:15;9332:4;9329:1;9322:15;9349:191;9389:3;9408:20;9426:1;9408:20;:::i;:::-;9403:25;;9442:20;9460:1;9442:20;:::i;:::-;9437:25;;9485:1;9482;9478:9;9471:16;;9506:3;9503:1;9500:10;9497:36;;;9513:18;;:::i;:::-;9497:36;9349:191;;;;:::o;9546:118::-;9633:24;9651:5;9633:24;:::i;:::-;9628:3;9621:37;9546:118;;:::o;9670:442::-;9819:4;9857:2;9846:9;9842:18;9834:26;;9870:71;9938:1;9927:9;9923:17;9914:6;9870:71;:::i;:::-;9951:72;10019:2;10008:9;10004:18;9995:6;9951:72;:::i;:::-;10033;10101:2;10090:9;10086:18;10077:6;10033:72;:::i;:::-;9670:442;;;;;;:::o;10118:222::-;10211:4;10249:2;10238:9;10234:18;10226:26;;10262:71;10330:1;10319:9;10315:17;10306:6;10262:71;:::i;:::-;10118:222;;;;:::o;172:454:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_662": {
									"entryPoint": 1476,
									"id": 662,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_722": {
									"entryPoint": 1880,
									"id": 722,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_887": {
									"entryPoint": 1469,
									"id": 887,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_770": {
									"entryPoint": 1494,
									"id": 770,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_501": {
									"entryPoint": 1640,
									"id": 501,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_578": {
									"entryPoint": 2343,
									"id": 578,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_324": {
									"entryPoint": 1339,
									"id": 324,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_348": {
									"entryPoint": 812,
									"id": 348,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_283": {
									"entryPoint": 969,
									"id": 283,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_261": {
									"entryPoint": 907,
									"id": 261,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_454": {
									"entryPoint": 1182,
									"id": 454,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_409": {
									"entryPoint": 915,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@n_12": {
									"entryPoint": 901,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_243": {
									"entryPoint": 668,
									"id": 243,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_252": {
									"entryPoint": 1038,
									"id": 252,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_270": {
									"entryPoint": 846,
									"id": 270,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_380": {
									"entryPoint": 855,
									"id": 380,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_307": {
									"entryPoint": 1305,
									"id": 307,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3124,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3175,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3480,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3348,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3774,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2962,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3308,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3789,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3323,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2880,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2890,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3723,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3085,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3054,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3144,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3428,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2906,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3630,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3678,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 3585,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3050,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2946,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 3102,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7360:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:6",
														"type": ""
													}
												],
												"src": "7:99:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:6",
														"type": ""
													}
												],
												"src": "112:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:6"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:6",
																"statements": []
															},
															"src": "378:113:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:6"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:6",
														"type": ""
													}
												],
												"src": "287:246:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:6",
														"type": ""
													}
												],
												"src": "539:102:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:6"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:6",
														"type": ""
													}
												],
												"src": "647:377:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:6"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:6",
														"type": ""
													}
												],
												"src": "1030:313:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1389:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1399:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1382:6:6",
														"type": ""
													}
												],
												"src": "1349:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1519:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1642:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1721:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1731:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1703:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1713:7:6",
														"type": ""
													}
												],
												"src": "1676:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1853:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1863:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1874:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1835:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1845:7:6",
														"type": ""
													}
												],
												"src": "1808:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1953:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2010:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:43:6"
															},
															"nodeType": "YulIf",
															"src": "1963:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1946:5:6",
														"type": ""
													}
												],
												"src": "1910:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2090:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2100:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2109:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2138:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2068:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2076:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2084:5:6",
														"type": ""
													}
												],
												"src": "2038:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2228:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2238:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2249:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2210:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2220:7:6",
														"type": ""
													}
												],
												"src": "2183:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2309:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2366:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:43:6"
															},
															"nodeType": "YulIf",
															"src": "2319:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2302:5:6",
														"type": ""
													}
												],
												"src": "2266:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2446:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2456:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2465:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2494:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2424:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2432:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2440:5:6",
														"type": ""
													}
												],
												"src": "2394:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2622:391:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2635:32:6"
															},
															"nodeType": "YulIf",
															"src": "2632:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "2761:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2805:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2888:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2933:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2584:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2595:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2607:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2615:6:6",
														"type": ""
													}
												],
												"src": "2539:474:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3061:48:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3071:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3043:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3053:7:6",
														"type": ""
													}
												],
												"src": "3019:90:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3174:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3184:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3162:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3169:3:6",
														"type": ""
													}
												],
												"src": "3115:109:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3322:118:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3332:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3340:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3368:65:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3294:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3306:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3317:4:6",
														"type": ""
													}
												],
												"src": "3230:210:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3511:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3521:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3499:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3506:3:6",
														"type": ""
													}
												],
												"src": "3446:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3668:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3678:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3686:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3714:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3640:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3652:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3663:4:6",
														"type": ""
													}
												],
												"src": "3570:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3898:519:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3944:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3911:32:6"
															},
															"nodeType": "YulIf",
															"src": "3908:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "4037:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4081:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4164:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4209:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4292:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4337:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3852:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3863:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3875:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3883:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3891:6:6",
														"type": ""
													}
												],
												"src": "3798:619:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4466:43:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4476:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4448:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4458:7:6",
														"type": ""
													}
												],
												"src": "4423:86:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4576:51:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4586:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:6"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4564:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4571:3:6",
														"type": ""
													}
												],
												"src": "4515:112:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4727:120:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4737:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4745:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4773:67:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4699:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4711:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4722:4:6",
														"type": ""
													}
												],
												"src": "4633:214:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4919:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4965:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4967:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4967:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4967:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4940:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4949:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4936:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4961:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4932:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4932:32:6"
															},
															"nodeType": "YulIf",
															"src": "4929:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "5058:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5073:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5087:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5077:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5102:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5137:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5148:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5133:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5133:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5157:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5112:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5112:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5102:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4889:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4900:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4912:6:6",
														"type": ""
													}
												],
												"src": "4853:329:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5271:391:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5317:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5319:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5319:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5319:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5292:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5301:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5288:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5288:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5313:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5284:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5284:32:6"
															},
															"nodeType": "YulIf",
															"src": "5281:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "5410:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5425:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5439:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5429:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5454:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5489:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5500:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5485:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5485:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5509:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5464:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5464:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5454:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5537:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5552:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5566:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5556:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5582:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5617:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5628:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5613:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5613:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5637:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5592:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5592:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5582:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5233:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5244:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5256:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5264:6:6",
														"type": ""
													}
												],
												"src": "5188:474:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5696:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5713:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5716:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5706:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5706:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5706:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5810:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5813:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5803:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5803:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5803:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5834:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5837:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5827:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5827:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5827:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "5668:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5905:269:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5915:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5929:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5935:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5925:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5925:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5915:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5946:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5976:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5982:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5972:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5972:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5950:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6023:51:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6037:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "6051:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6059:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6047:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6047:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6037:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6003:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5996:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5996:26:6"
															},
															"nodeType": "YulIf",
															"src": "5993:81:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6126:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "6140:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6140:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6140:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6090:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6113:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6121:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6110:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6110:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6087:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6087:38:6"
															},
															"nodeType": "YulIf",
															"src": "6084:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5889:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5898:6:6",
														"type": ""
													}
												],
												"src": "5854:320:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6208:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6225:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6228:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6218:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6218:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6218:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6322:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6325:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6315:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6315:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6315:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6346:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6349:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6339:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6339:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6339:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6180:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6410:147:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6420:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6443:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6425:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6425:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6420:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6454:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6477:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6459:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6459:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6454:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6488:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6499:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6502:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6495:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6495:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6488:3:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6528:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6530:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6530:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6530:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6520:1:6"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "6523:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6517:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6517:10:6"
															},
															"nodeType": "YulIf",
															"src": "6514:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6397:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6400:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6406:3:6",
														"type": ""
													}
												],
												"src": "6366:191:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6628:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6645:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6668:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6650:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6650:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6638:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6638:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6638:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6616:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6623:3:6",
														"type": ""
													}
												],
												"src": "6563:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6841:288:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6851:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6863:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6874:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6859:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6859:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6851:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6931:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6944:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6955:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6940:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6940:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6887:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6887:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6887:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7012:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7025:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7036:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7021:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7021:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6968:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6968:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6968:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7094:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7107:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7118:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7103:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7103:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7050:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7050:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7050:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6797:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6809:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6817:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6825:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6836:4:6",
														"type": ""
													}
												],
												"src": "6687:442:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7233:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7243:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7255:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7266:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7251:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7251:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7243:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7323:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7336:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7347:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7332:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7332:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7279:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7279:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7279:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7205:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7217:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7228:4:6",
														"type": ""
													}
												],
												"src": "7135:222:6"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100b2575f3560e01c8063395093511161006f578063395093511461018e57806370a08231146101be57806395d89b41146101ee578063a457c2d71461020c578063a9059cbb1461023c578063dd62ed3e1461026c576100b2565b806306fdde03146100b6578063095ea7b3146100d457806318160ddd1461010457806323b872dd146101225780632e52d60614610152578063313ce56714610170575b5f80fd5b6100be61029c565b6040516100cb9190610bca565b60405180910390f35b6100ee60048036038101906100e99190610c7b565b61032c565b6040516100fb9190610cd3565b60405180910390f35b61010c61034e565b6040516101199190610cfb565b60405180910390f35b61013c60048036038101906101379190610d14565b610357565b6040516101499190610cd3565b60405180910390f35b61015a610385565b6040516101679190610cfb565b60405180910390f35b61017861038b565b6040516101859190610d7f565b60405180910390f35b6101a860048036038101906101a39190610c7b565b610393565b6040516101b59190610cd3565b60405180910390f35b6101d860048036038101906101d39190610d98565b6103c9565b6040516101e59190610cfb565b60405180910390f35b6101f661040e565b6040516102039190610bca565b60405180910390f35b61022660048036038101906102219190610c7b565b61049e565b6040516102339190610cd3565b60405180910390f35b61025660048036038101906102519190610c7b565b610519565b6040516102639190610cd3565b60405180910390f35b61028660048036038101906102819190610dc3565b61053b565b6040516102939190610cfb565b60405180910390f35b6060600380546102ab90610e2e565b80601f01602080910402602001604051908101604052809291908181526020018280546102d790610e2e565b80156103225780601f106102f957610100808354040283529160200191610322565b820191905f5260205f20905b81548152906001019060200180831161030557829003601f168201915b5050505050905090565b5f806103366105bd565b90506103438185856105c4565b600191505092915050565b5f600254905090565b5f806103616105bd565b905061036e8582856105d6565b610379858585610668565b60019150509392505050565b60055481565b5f6012905090565b5f8061039d6105bd565b90506103be8185856103af858961053b565b6103b99190610e8b565b6105c4565b600191505092915050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606004805461041d90610e2e565b80601f016020809104026020016040519081016040528092919081815260200182805461044990610e2e565b80156104945780601f1061046b57610100808354040283529160200191610494565b820191905f5260205f20905b81548152906001019060200180831161047757829003601f168201915b5050505050905090565b5f806104a86105bd565b90505f6104b5828661053b565b905083811015610500578481856040517fa60f030c0000000000000000000000000000000000000000000000000000000081526004016104f793929190610ecd565b60405180910390fd5b61050d82868684036105c4565b60019250505092915050565b5f806105236105bd565b9050610530818585610668565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b6105d18383836001610758565b505050565b5f6105e1848461053b565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106625781811015610653578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161064a93929190610ecd565b60405180910390fd5b61066184848484035f610758565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106d8575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016106cf9190610f02565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610748575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161073f9190610f02565b60405180910390fd5b610753838383610927565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036107c8575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016107bf9190610f02565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610838575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161082f9190610f02565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610921578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516109189190610cfb565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610977578060025f82825461096b9190610e8b565b92505081905550610a45565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610a00578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016109f793929190610ecd565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a8c578060025f8282540392505081905550610ad6565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b339190610cfb565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610b77578082015181840152602081019050610b5c565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610b9c82610b40565b610ba68185610b4a565b9350610bb6818560208601610b5a565b610bbf81610b82565b840191505092915050565b5f6020820190508181035f830152610be28184610b92565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610c1782610bee565b9050919050565b610c2781610c0d565b8114610c31575f80fd5b50565b5f81359050610c4281610c1e565b92915050565b5f819050919050565b610c5a81610c48565b8114610c64575f80fd5b50565b5f81359050610c7581610c51565b92915050565b5f8060408385031215610c9157610c90610bea565b5b5f610c9e85828601610c34565b9250506020610caf85828601610c67565b9150509250929050565b5f8115159050919050565b610ccd81610cb9565b82525050565b5f602082019050610ce65f830184610cc4565b92915050565b610cf581610c48565b82525050565b5f602082019050610d0e5f830184610cec565b92915050565b5f805f60608486031215610d2b57610d2a610bea565b5b5f610d3886828701610c34565b9350506020610d4986828701610c34565b9250506040610d5a86828701610c67565b9150509250925092565b5f60ff82169050919050565b610d7981610d64565b82525050565b5f602082019050610d925f830184610d70565b92915050565b5f60208284031215610dad57610dac610bea565b5b5f610dba84828501610c34565b91505092915050565b5f8060408385031215610dd957610dd8610bea565b5b5f610de685828601610c34565b9250506020610df785828601610c34565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610e4557607f821691505b602082108103610e5857610e57610e01565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610e9582610c48565b9150610ea083610c48565b9250828201905080821115610eb857610eb7610e5e565b5b92915050565b610ec781610c0d565b82525050565b5f606082019050610ee05f830186610ebe565b610eed6020830185610cec565b610efa6040830184610cec565b949350505050565b5f602082019050610f155f830184610ebe565b9291505056fea264697066735822122065040ed8da1c6c77bec9586743f027bd9e0feb0fc43a29a1e0017c5deb3ed2b664736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x26C JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x2E52D606 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x170 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBE PUSH2 0x29C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xBCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xC7B JUMP JUMPDEST PUSH2 0x32C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0xCD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x34E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xCFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0xD14 JUMP JUMPDEST PUSH2 0x357 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0xCD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH2 0x385 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xCFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH2 0x38B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0xD7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0xC7B JUMP JUMPDEST PUSH2 0x393 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0xCD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0xD98 JUMP JUMPDEST PUSH2 0x3C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0xCFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F6 PUSH2 0x40E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x203 SWAP2 SWAP1 PUSH2 0xBCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x226 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x221 SWAP2 SWAP1 PUSH2 0xC7B JUMP JUMPDEST PUSH2 0x49E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x233 SWAP2 SWAP1 PUSH2 0xCD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x251 SWAP2 SWAP1 PUSH2 0xC7B JUMP JUMPDEST PUSH2 0x519 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x263 SWAP2 SWAP1 PUSH2 0xCD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x286 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x281 SWAP2 SWAP1 PUSH2 0xDC3 JUMP JUMPDEST PUSH2 0x53B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x293 SWAP2 SWAP1 PUSH2 0xCFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2AB SWAP1 PUSH2 0xE2E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D7 SWAP1 PUSH2 0xE2E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x322 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x322 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x305 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x336 PUSH2 0x5BD JUMP JUMPDEST SWAP1 POP PUSH2 0x343 DUP2 DUP6 DUP6 PUSH2 0x5C4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x361 PUSH2 0x5BD JUMP JUMPDEST SWAP1 POP PUSH2 0x36E DUP6 DUP3 DUP6 PUSH2 0x5D6 JUMP JUMPDEST PUSH2 0x379 DUP6 DUP6 DUP6 PUSH2 0x668 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x39D PUSH2 0x5BD JUMP JUMPDEST SWAP1 POP PUSH2 0x3BE DUP2 DUP6 DUP6 PUSH2 0x3AF DUP6 DUP10 PUSH2 0x53B JUMP JUMPDEST PUSH2 0x3B9 SWAP2 SWAP1 PUSH2 0xE8B JUMP JUMPDEST PUSH2 0x5C4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x41D SWAP1 PUSH2 0xE2E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x449 SWAP1 PUSH2 0xE2E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x494 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x46B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x494 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x477 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4A8 PUSH2 0x5BD JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x4B5 DUP3 DUP7 PUSH2 0x53B JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x500 JUMPI DUP5 DUP2 DUP6 PUSH1 0x40 MLOAD PUSH32 0xA60F030C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xECD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x50D DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5C4 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x523 PUSH2 0x5BD JUMP JUMPDEST SWAP1 POP PUSH2 0x530 DUP2 DUP6 DUP6 PUSH2 0x668 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5D1 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x758 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5E1 DUP5 DUP5 PUSH2 0x53B JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x662 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x653 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xECD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x661 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x758 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6D8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CF SWAP2 SWAP1 PUSH2 0xF02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x748 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x73F SWAP2 SWAP1 PUSH2 0xF02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x753 DUP4 DUP4 DUP4 PUSH2 0x927 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7C8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BF SWAP2 SWAP1 PUSH2 0xF02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x838 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82F SWAP2 SWAP1 PUSH2 0xF02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x921 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x918 SWAP2 SWAP1 PUSH2 0xCFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x977 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x96B SWAP2 SWAP1 PUSH2 0xE8B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA45 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xA00 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xECD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA8C JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xAD6 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xB33 SWAP2 SWAP1 PUSH2 0xCFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB77 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xB5C JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB9C DUP3 PUSH2 0xB40 JUMP JUMPDEST PUSH2 0xBA6 DUP2 DUP6 PUSH2 0xB4A JUMP JUMPDEST SWAP4 POP PUSH2 0xBB6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xB5A JUMP JUMPDEST PUSH2 0xBBF DUP2 PUSH2 0xB82 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xBE2 DUP2 DUP5 PUSH2 0xB92 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC17 DUP3 PUSH2 0xBEE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC27 DUP2 PUSH2 0xC0D JUMP JUMPDEST DUP2 EQ PUSH2 0xC31 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC42 DUP2 PUSH2 0xC1E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC5A DUP2 PUSH2 0xC48 JUMP JUMPDEST DUP2 EQ PUSH2 0xC64 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC75 DUP2 PUSH2 0xC51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC91 JUMPI PUSH2 0xC90 PUSH2 0xBEA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC9E DUP6 DUP3 DUP7 ADD PUSH2 0xC34 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCAF DUP6 DUP3 DUP7 ADD PUSH2 0xC67 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCCD DUP2 PUSH2 0xCB9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCE6 PUSH0 DUP4 ADD DUP5 PUSH2 0xCC4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCF5 DUP2 PUSH2 0xC48 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD0E PUSH0 DUP4 ADD DUP5 PUSH2 0xCEC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD2B JUMPI PUSH2 0xD2A PUSH2 0xBEA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD38 DUP7 DUP3 DUP8 ADD PUSH2 0xC34 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xD49 DUP7 DUP3 DUP8 ADD PUSH2 0xC34 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xD5A DUP7 DUP3 DUP8 ADD PUSH2 0xC67 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD79 DUP2 PUSH2 0xD64 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD92 PUSH0 DUP4 ADD DUP5 PUSH2 0xD70 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDAD JUMPI PUSH2 0xDAC PUSH2 0xBEA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDBA DUP5 DUP3 DUP6 ADD PUSH2 0xC34 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDD9 JUMPI PUSH2 0xDD8 PUSH2 0xBEA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDE6 DUP6 DUP3 DUP7 ADD PUSH2 0xC34 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDF7 DUP6 DUP3 DUP7 ADD PUSH2 0xC34 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xE45 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xE58 JUMPI PUSH2 0xE57 PUSH2 0xE01 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE95 DUP3 PUSH2 0xC48 JUMP JUMPDEST SWAP2 POP PUSH2 0xEA0 DUP4 PUSH2 0xC48 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xEB8 JUMPI PUSH2 0xEB7 PUSH2 0xE5E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEC7 DUP2 PUSH2 0xC0D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xEE0 PUSH0 DUP4 ADD DUP7 PUSH2 0xEBE JUMP JUMPDEST PUSH2 0xEED PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xCEC JUMP JUMPDEST PUSH2 0xEFA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xCEC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF15 PUSH0 DUP4 ADD DUP5 PUSH2 0xEBE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0x40ED8DA1C6C PUSH24 0xBEC9586743F027BD9E0FEB0FC43A29A1E0017C5DEB3ED2B6 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "172:454:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2452:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4671:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3522:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5417:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;208:23:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3380:82:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6056:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3677:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2654:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6959:493;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3988:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4224:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2452:89;2497:13;2529:5;2522:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2452:89;:::o;4671:186::-;4744:4;4760:13;4776:12;:10;:12::i;:::-;4760:28;;4798:31;4807:5;4814:7;4823:5;4798:8;:31::i;:::-;4846:4;4839:11;;;4671:186;;;;:::o;3522:97::-;3574:7;3600:12;;3593:19;;3522:97;:::o;5417:244::-;5504:4;5520:15;5538:12;:10;:12::i;:::-;5520:30;;5560:37;5576:4;5582:7;5591:5;5560:15;:37::i;:::-;5607:26;5617:4;5623:2;5627:5;5607:9;:26::i;:::-;5650:4;5643:11;;;5417:244;;;;;:::o;208:23:0:-;;;;:::o;3380:82:2:-;3429:5;3453:2;3446:9;;3380:82;:::o;6056:234::-;6144:4;6160:13;6176:12;:10;:12::i;:::-;6160:28;;6198:64;6207:5;6214:7;6251:10;6223:25;6233:5;6240:7;6223:9;:25::i;:::-;:38;;;;:::i;:::-;6198:8;:64::i;:::-;6279:4;6272:11;;;6056:234;;;;:::o;3677:116::-;3742:7;3768:9;:18;3778:7;3768:18;;;;;;;;;;;;;;;;3761:25;;3677:116;;;:::o;2654:93::-;2701:13;2733:7;2726:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2654:93;:::o;6959:493::-;7054:4;7070:13;7086:12;:10;:12::i;:::-;7070:28;;7108:24;7135:25;7145:5;7152:7;7135:9;:25::i;:::-;7108:52;;7193:17;7174:16;:36;7170:148;;;7262:7;7271:16;7289:17;7233:74;;;;;;;;;;;;;:::i;:::-;;;;;;;;7170:148;7351:62;7360:5;7367:7;7395:17;7376:16;:36;7351:8;:62::i;:::-;7441:4;7434:11;;;;6959:493;;;;:::o;3988:178::-;4057:4;4073:13;4089:12;:10;:12::i;:::-;4073:28;;4111:27;4121:5;4128:2;4132:5;4111:9;:27::i;:::-;4155:4;4148:11;;;3988:178;;;;:::o;4224:140::-;4304:7;4330:11;:18;4342:5;4330:18;;;;;;;;;;;;;;;:27;4349:7;4330:27;;;;;;;;;;;;;;;;4323:34;;4224:140;;;;:::o;641:96:5:-;694:7;720:10;713:17;;641:96;:::o;11158:128:2:-;11242:37;11251:5;11258:7;11267:5;11274:4;11242:8;:37::i;:::-;11158:128;;;:::o;12829:477::-;12928:24;12955:25;12965:5;12972:7;12955:9;:25::i;:::-;12928:52;;13014:17;12994:16;:37;12990:310;;13070:5;13051:16;:24;13047:130;;;13129:7;13138:16;13156:5;13102:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;13047:130;13218:57;13227:5;13234:7;13262:5;13243:16;:24;13269:5;13218:8;:57::i;:::-;12990:310;12918:388;12829:477;;;:::o;7825:300::-;7924:1;7908:18;;:4;:18;;;7904:86;;7976:1;7949:30;;;;;;;;;;;:::i;:::-;;;;;;;;7904:86;8017:1;8003:16;;:2;:16;;;7999:86;;8071:1;8042:32;;;;;;;;;;;:::i;:::-;;;;;;;;7999:86;8094:24;8102:4;8108:2;8112:5;8094:7;:24::i;:::-;7825:300;;;:::o;12118:432::-;12247:1;12230:19;;:5;:19;;;12226:89;;12301:1;12272:32;;;;;;;;;;;:::i;:::-;;;;;;;;12226:89;12347:1;12328:21;;:7;:21;;;12324:90;;12400:1;12372:31;;;;;;;;;;;:::i;:::-;;;;;;;;12324:90;12453:5;12423:11;:18;12435:5;12423:18;;;;;;;;;;;;;;;:27;12442:7;12423:27;;;;;;;;;;;;;;;:35;;;;12472:9;12468:76;;;12518:7;12502:31;;12511:5;12502:31;;;12527:5;12502:31;;;;;;:::i;:::-;;;;;;;;12468:76;12118:432;;;;:::o;8433:1107::-;8538:1;8522:18;;:4;:18;;;8518:540;;8674:5;8658:12;;:21;;;;;;;:::i;:::-;;;;;;;;8518:540;;;8710:19;8732:9;:15;8742:4;8732:15;;;;;;;;;;;;;;;;8710:37;;8779:5;8765:11;:19;8761:115;;;8836:4;8842:11;8855:5;8811:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;8761:115;9028:5;9014:11;:19;8996:9;:15;9006:4;8996:15;;;;;;;;;;;;;;;:37;;;;8696:362;8518:540;9086:1;9072:16;;:2;:16;;;9068:425;;9251:5;9235:12;;:21;;;;;;;;;;;9068:425;;;9463:5;9446:9;:13;9456:2;9446:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;9068:425;9523:2;9508:25;;9517:4;9508:25;;;9527:5;9508:25;;;;;;:::i;:::-;;;;;;;;8433:1107;;;:::o;7:99:6:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:474::-;5256:6;5264;5313:2;5301:9;5292:7;5288:23;5284:32;5281:119;;;5319:79;;:::i;:::-;5281:119;5439:1;5464:53;5509:7;5500:6;5489:9;5485:22;5464:53;:::i;:::-;5454:63;;5410:117;5566:2;5592:53;5637:7;5628:6;5617:9;5613:22;5592:53;:::i;:::-;5582:63;;5537:118;5188:474;;;;;:::o;5668:180::-;5716:77;5713:1;5706:88;5813:4;5810:1;5803:15;5837:4;5834:1;5827:15;5854:320;5898:6;5935:1;5929:4;5925:12;5915:22;;5982:1;5976:4;5972:12;6003:18;5993:81;;6059:4;6051:6;6047:17;6037:27;;5993:81;6121:2;6113:6;6110:14;6090:18;6087:38;6084:84;;6140:18;;:::i;:::-;6084:84;5905:269;5854:320;;;:::o;6180:180::-;6228:77;6225:1;6218:88;6325:4;6322:1;6315:15;6349:4;6346:1;6339:15;6366:191;6406:3;6425:20;6443:1;6425:20;:::i;:::-;6420:25;;6459:20;6477:1;6459:20;:::i;:::-;6454:25;;6502:1;6499;6495:9;6488:16;;6523:3;6520:1;6517:10;6514:36;;;6530:18;;:::i;:::-;6514:36;6366:191;;;;:::o;6563:118::-;6650:24;6668:5;6650:24;:::i;:::-;6645:3;6638:37;6563:118;;:::o;6687:442::-;6836:4;6874:2;6863:9;6859:18;6851:26;;6887:71;6955:1;6944:9;6940:17;6931:6;6887:71;:::i;:::-;6968:72;7036:2;7025:9;7021:18;7012:6;6968:72;:::i;:::-;7050;7118:2;7107:9;7103:18;7094:6;7050:72;:::i;:::-;6687:442;;;;;;:::o;7135:222::-;7228:4;7266:2;7255:9;7251:18;7243:26;;7279:71;7347:1;7336:9;7332:17;7323:6;7279:71;:::i;:::-;7135:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "784200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2851",
								"decimals()": "449",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"n()": "2514",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2477",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 172,
									"end": 626,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 172,
									"end": 626,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 172,
									"end": 626,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 224,
									"end": 231,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 208,
									"end": 231,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 208,
									"end": 231,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 278,
									"end": 623,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 278,
									"end": 623,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 278,
									"end": 623,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 278,
									"end": 623,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 278,
									"end": 623,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 278,
									"end": 623,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 278,
									"end": 623,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 278,
									"end": 623,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 278,
									"end": 623,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 278,
									"end": 623,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 278,
									"end": 623,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 278,
									"end": 623,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 278,
									"end": 623,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 278,
									"end": 623,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 278,
									"end": 623,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 278,
									"end": 623,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 278,
									"end": 623,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 278,
									"end": 623,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 278,
									"end": 623,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 278,
									"end": 623,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 278,
									"end": 623,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 278,
									"end": 623,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 278,
									"end": 623,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 278,
									"end": 623,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 278,
									"end": 623,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 278,
									"end": 623,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 278,
									"end": 623,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 278,
									"end": 623,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 278,
									"end": 623,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 278,
									"end": 623,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 278,
									"end": 623,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 278,
									"end": 623,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 278,
									"end": 623,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 278,
									"end": 623,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 278,
									"end": 623,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 340,
									"end": 345,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2348,
									"end": 2353,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2340,
									"end": 2345,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 2340,
									"end": 2353,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2340,
									"end": 2353,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2340,
									"end": 2353,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 2340,
									"end": 2353,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2340,
									"end": 2353,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2340,
									"end": 2353,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2340,
									"end": 2353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2340,
									"end": 2353,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 2340,
									"end": 2353,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2340,
									"end": 2353,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2373,
									"end": 2380,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2363,
									"end": 2370,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 2363,
									"end": 2380,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2363,
									"end": 2380,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2363,
									"end": 2380,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 2363,
									"end": 2380,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2363,
									"end": 2380,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2363,
									"end": 2380,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2363,
									"end": 2380,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2363,
									"end": 2380,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 2363,
									"end": 2380,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2363,
									"end": 2380,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2274,
									"end": 2387,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2274,
									"end": 2387,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 581,
									"end": 613,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 587,
									"end": 597,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 599,
									"end": 612,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "56BC75E2D63100000"
								},
								{
									"begin": 581,
									"end": 586,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 581,
									"end": 586,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 581,
									"end": 586,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 581,
									"end": 613,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 581,
									"end": 613,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 581,
									"end": 613,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 581,
									"end": 613,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 581,
									"end": 613,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 278,
									"end": 623,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 278,
									"end": 623,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 172,
									"end": 626,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 172,
									"end": 626,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 9883,
									"end": 10091,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 9883,
									"end": 10091,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 9972,
									"end": 9973,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 9953,
									"end": 9974,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9953,
									"end": 9974,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 9953,
									"end": 9960,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 9953,
									"end": 9974,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9953,
									"end": 9974,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 9953,
									"end": 9974,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 9949,
									"end": 10040,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 9949,
									"end": 10040,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 10026,
									"end": 10027,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 9997,
									"end": 10029,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 9997,
									"end": 10029,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 9997,
									"end": 10029,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9997,
									"end": 10029,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 9997,
									"end": 10029,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 9997,
									"end": 10029,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 9997,
									"end": 10029,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 9997,
									"end": 10029,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 9997,
									"end": 10029,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 9997,
									"end": 10029,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9997,
									"end": 10029,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 9997,
									"end": 10029,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 9997,
									"end": 10029,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 9997,
									"end": 10029,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 9997,
									"end": 10029,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 9997,
									"end": 10029,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 9997,
									"end": 10029,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 9997,
									"end": 10029,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 9997,
									"end": 10029,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 9997,
									"end": 10029,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9997,
									"end": 10029,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 9949,
									"end": 10040,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 9949,
									"end": 10040,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 10049,
									"end": 10084,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 10065,
									"end": 10066,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 10069,
									"end": 10076,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 10078,
									"end": 10083,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 10049,
									"end": 10056,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 10049,
									"end": 10056,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 10049,
									"end": 10056,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 10049,
									"end": 10084,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 10049,
									"end": 10084,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 10049,
									"end": 10084,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 10049,
									"end": 10084,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 10049,
									"end": 10084,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 9883,
									"end": 10091,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9883,
									"end": 10091,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9883,
									"end": 10091,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8433,
									"end": 9540,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 8433,
									"end": 9540,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8538,
									"end": 8539,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8522,
									"end": 8540,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8522,
									"end": 8540,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 8522,
									"end": 8526,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 8522,
									"end": 8540,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8522,
									"end": 8540,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 8522,
									"end": 8540,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 8518,
									"end": 9058,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 8518,
									"end": 9058,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 8674,
									"end": 8679,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8658,
									"end": 8670,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 8658,
									"end": 8670,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8658,
									"end": 8679,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8658,
									"end": 8679,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8658,
									"end": 8679,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 8658,
									"end": 8679,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 8658,
									"end": 8679,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8658,
									"end": 8679,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8658,
									"end": 8679,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 8658,
									"end": 8679,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8658,
									"end": 8679,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 8658,
									"end": 8679,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8658,
									"end": 8679,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 8658,
									"end": 8679,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8658,
									"end": 8679,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8658,
									"end": 8679,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8658,
									"end": 8679,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8658,
									"end": 8679,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 8658,
									"end": 8679,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8518,
									"end": 9058,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 8518,
									"end": 9058,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8518,
									"end": 9058,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 8518,
									"end": 9058,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8710,
									"end": 8729,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8732,
									"end": 8741,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8732,
									"end": 8747,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8742,
									"end": 8746,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 8732,
									"end": 8747,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8732,
									"end": 8747,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 8732,
									"end": 8747,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8732,
									"end": 8747,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 8732,
									"end": 8747,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8732,
									"end": 8747,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 8732,
									"end": 8747,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 8732,
									"end": 8747,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8732,
									"end": 8747,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8732,
									"end": 8747,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8732,
									"end": 8747,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 8732,
									"end": 8747,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 8732,
									"end": 8747,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8732,
									"end": 8747,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8732,
									"end": 8747,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 8732,
									"end": 8747,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 8710,
									"end": 8747,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8710,
									"end": 8747,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8779,
									"end": 8784,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8765,
									"end": 8776,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8765,
									"end": 8784,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 8761,
									"end": 8876,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 8761,
									"end": 8876,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 8761,
									"end": 8876,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 8836,
									"end": 8840,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 8842,
									"end": 8853,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8855,
									"end": 8860,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 8811,
									"end": 8861,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 8811,
									"end": 8861,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 8811,
									"end": 8861,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8811,
									"end": 8861,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8811,
									"end": 8861,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 8811,
									"end": 8861,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 8811,
									"end": 8861,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8811,
									"end": 8861,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 8811,
									"end": 8861,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 8811,
									"end": 8861,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 8811,
									"end": 8861,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8811,
									"end": 8861,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8811,
									"end": 8861,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 8811,
									"end": 8861,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8811,
									"end": 8861,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 8811,
									"end": 8861,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8811,
									"end": 8861,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 8811,
									"end": 8861,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 8811,
									"end": 8861,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8811,
									"end": 8861,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8811,
									"end": 8861,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 8811,
									"end": 8861,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8811,
									"end": 8861,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 8761,
									"end": 8876,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 8761,
									"end": 8876,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 9028,
									"end": 9033,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 9014,
									"end": 9025,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 9014,
									"end": 9033,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 8996,
									"end": 9005,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8996,
									"end": 9011,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 9006,
									"end": 9010,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 8996,
									"end": 9011,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8996,
									"end": 9011,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 8996,
									"end": 9011,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8996,
									"end": 9011,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 8996,
									"end": 9011,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8996,
									"end": 9011,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 8996,
									"end": 9011,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 8996,
									"end": 9011,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8996,
									"end": 9011,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8996,
									"end": 9011,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8996,
									"end": 9011,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 8996,
									"end": 9011,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 8996,
									"end": 9011,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8996,
									"end": 9011,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8996,
									"end": 9011,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 8996,
									"end": 9033,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8996,
									"end": 9033,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8996,
									"end": 9033,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 8996,
									"end": 9033,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8696,
									"end": 9058,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8518,
									"end": 9058,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 8518,
									"end": 9058,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 9086,
									"end": 9087,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 9072,
									"end": 9088,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9072,
									"end": 9088,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 9072,
									"end": 9074,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 9072,
									"end": 9088,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9072,
									"end": 9088,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 9072,
									"end": 9088,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 9068,
									"end": 9493,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 9068,
									"end": 9493,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 9251,
									"end": 9256,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 9235,
									"end": 9247,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 9235,
									"end": 9247,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 9235,
									"end": 9256,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 9235,
									"end": 9256,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 9235,
									"end": 9256,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 9235,
									"end": 9256,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 9235,
									"end": 9256,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 9235,
									"end": 9256,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9235,
									"end": 9256,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9235,
									"end": 9256,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 9235,
									"end": 9256,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9235,
									"end": 9256,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 9235,
									"end": 9256,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9068,
									"end": 9493,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 9068,
									"end": 9493,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 9068,
									"end": 9493,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 9068,
									"end": 9493,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 9463,
									"end": 9468,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 9446,
									"end": 9455,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 9446,
									"end": 9459,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 9456,
									"end": 9458,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 9446,
									"end": 9459,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9446,
									"end": 9459,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 9446,
									"end": 9459,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9446,
									"end": 9459,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 9446,
									"end": 9459,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 9446,
									"end": 9459,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 9446,
									"end": 9459,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 9446,
									"end": 9459,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 9446,
									"end": 9459,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9446,
									"end": 9459,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 9446,
									"end": 9459,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 9446,
									"end": 9459,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 9446,
									"end": 9459,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 9446,
									"end": 9459,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 9446,
									"end": 9459,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 9446,
									"end": 9459,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 9446,
									"end": 9468,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 9446,
									"end": 9468,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 9446,
									"end": 9468,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 9446,
									"end": 9468,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 9446,
									"end": 9468,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 9446,
									"end": 9468,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9446,
									"end": 9468,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9446,
									"end": 9468,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 9446,
									"end": 9468,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9446,
									"end": 9468,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 9446,
									"end": 9468,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9068,
									"end": 9493,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 9068,
									"end": 9493,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 9523,
									"end": 9525,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 9508,
									"end": 9533,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9508,
									"end": 9533,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 9517,
									"end": 9521,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 9508,
									"end": 9533,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9508,
									"end": 9533,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 9508,
									"end": 9533,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 9527,
									"end": 9532,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 9508,
									"end": 9533,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 9508,
									"end": 9533,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 9508,
									"end": 9533,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 9508,
									"end": 9533,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 9508,
									"end": 9533,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9508,
									"end": 9533,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 9508,
									"end": 9533,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 9508,
									"end": 9533,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 9508,
									"end": 9533,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 9508,
									"end": 9533,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 9508,
									"end": 9533,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 9508,
									"end": 9533,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 9508,
									"end": 9533,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 9508,
									"end": 9533,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 9508,
									"end": 9533,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9508,
									"end": 9533,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 8433,
									"end": 9540,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8433,
									"end": 9540,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8433,
									"end": 9540,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8433,
									"end": 9540,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2776,
									"end": 2782,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2784,
									"end": 2790,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2833,
									"end": 2835,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2821,
									"end": 2830,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2812,
									"end": 2819,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2808,
									"end": 2831,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2804,
									"end": 2836,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "104"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 2839,
									"end": 2918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "tag",
									"source": 6,
									"value": "104"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "tag",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2980,
									"end": 2981,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2969,
									"end": 2978,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2965,
									"end": 2982,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2959,
									"end": 2983,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3002,
									"end": 3008,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2999,
									"end": 3029,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "106"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 3032,
									"end": 3111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "tag",
									"source": 6,
									"value": "106"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "tag",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 3203,
									"end": 3210,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3194,
									"end": 3200,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3183,
									"end": 3192,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3179,
									"end": 3201,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 3137,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "tag",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2930,
									"end": 3221,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3281,
									"end": 3283,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3270,
									"end": 3279,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3266,
									"end": 3284,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3260,
									"end": 3285,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3312,
									"end": 3330,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3304,
									"end": 3310,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3301,
									"end": 3331,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "109"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 3334,
									"end": 3413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "tag",
									"source": 6,
									"value": "109"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "tag",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "110"
								},
								{
									"begin": 3505,
									"end": 3512,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3496,
									"end": 3502,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3485,
									"end": 3494,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3481,
									"end": 3503,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 3439,
									"end": 3513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "tag",
									"source": 6,
									"value": "110"
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3231,
									"end": 3523,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2677,
									"end": 3530,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3588,
									"end": 3594,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3622,
									"end": 3627,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3616,
									"end": 3628,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3536,
									"end": 3635,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "tag",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3689,
									"end": 3766,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3686,
									"end": 3687,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3679,
									"end": 3767,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3786,
									"end": 3790,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 3783,
									"end": 3784,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 3776,
									"end": 3791,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3810,
									"end": 3814,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 3807,
									"end": 3808,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3800,
									"end": 3815,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3871,
									"end": 3877,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3908,
									"end": 3909,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 3902,
									"end": 3906,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3898,
									"end": 3910,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3955,
									"end": 3956,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3949,
									"end": 3953,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3945,
									"end": 3957,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3976,
									"end": 3994,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4032,
									"end": 4036,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 4024,
									"end": 4030,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4020,
									"end": 4037,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "tag",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4094,
									"end": 4096,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4086,
									"end": 4092,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4083,
									"end": 4097,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4063,
									"end": 4081,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4060,
									"end": 4098,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "115"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "116"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 4113,
									"end": 4131,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "tag",
									"source": 6,
									"value": "116"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "tag",
									"source": 6,
									"value": "115"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3878,
									"end": 4147,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3827,
									"end": 4147,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4202,
									"end": 4206,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4225,
									"end": 4228,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4248,
									"end": 4251,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4245,
									"end": 4246,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4238,
									"end": 4252,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4282,
									"end": 4286,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4279,
									"end": 4280,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4153,
									"end": 4294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4337,
									"end": 4343,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4384,
									"end": 4386,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4379,
									"end": 4381,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 4372,
									"end": 4377,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4368,
									"end": 4382,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4364,
									"end": 4387,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4300,
									"end": 4393,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4443,
									"end": 4451,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4493,
									"end": 4498,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4487,
									"end": 4491,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4483,
									"end": 4499,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4399,
									"end": 4506,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4581,
									"end": 4587,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4632,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 4619,
									"end": 4629,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4615,
									"end": 4633,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "121"
								},
								{
									"begin": 4684,
									"end": 4750,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4673,
									"end": 4682,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 4654,
									"end": 4751,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "tag",
									"source": 6,
									"value": "121"
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "122"
								},
								{
									"begin": 4802,
									"end": 4810,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 4791,
									"end": 4800,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 4772,
									"end": 4811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "tag",
									"source": 6,
									"value": "122"
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4844,
									"end": 4848,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4840,
									"end": 4849,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 4833,
									"end": 4838,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4829,
									"end": 4850,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4893,
									"end": 4897,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4883,
									"end": 4891,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 4879,
									"end": 4898,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4872,
									"end": 4877,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4869,
									"end": 4899,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4512,
									"end": 4905,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4948,
									"end": 4955,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4977,
									"end": 4982,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4911,
									"end": 4988,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5022,
									"end": 5025,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5043,
									"end": 5048,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4994,
									"end": 5054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5110,
									"end": 5119,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "126"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "127"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "128"
								},
								{
									"begin": 5188,
									"end": 5193,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 5170,
									"end": 5194,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "tag",
									"source": 6,
									"value": "128"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 5161,
									"end": 5195,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "tag",
									"source": 6,
									"value": "127"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 5143,
									"end": 5196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "tag",
									"source": 6,
									"value": "126"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5060,
									"end": 5202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5251,
									"end": 5254,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5272,
									"end": 5277,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5208,
									"end": 5283,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "131"
								},
								{
									"begin": 5430,
									"end": 5437,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 5399,
									"end": 5438,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "tag",
									"source": 6,
									"value": "131"
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "132"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 5533,
									"end": 5549,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 5509,
									"end": 5550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "tag",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5501,
									"end": 5507,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5494,
									"end": 5498,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5488,
									"end": 5499,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 5460,
									"end": 5551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "tag",
									"source": 6,
									"value": "132"
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5454,
									"end": 5458,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5447,
									"end": 5552,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5365,
									"end": 5558,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5289,
									"end": 5558,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5609,
									"end": 5612,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5564,
									"end": 5637,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "136"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 5720,
									"end": 5752,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "tag",
									"source": 6,
									"value": "136"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "137"
								},
								{
									"begin": 5819,
									"end": 5825,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5811,
									"end": 5817,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5805,
									"end": 5809,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 5761,
									"end": 5826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "tag",
									"source": 6,
									"value": "137"
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5696,
									"end": 5832,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5643,
									"end": 5832,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "tag",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 6,
									"value": "139"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5915,
									"end": 5918,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5908,
									"end": 5913,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5905,
									"end": 5919,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "141"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "142"
								},
								{
									"begin": 6006,
									"end": 6007,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5999,
									"end": 6004,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 5969,
									"end": 6008,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "tag",
									"source": 6,
									"value": "142"
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5942,
									"end": 5943,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 5935,
									"end": 5940,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5931,
									"end": 5944,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "139"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 6,
									"value": "141"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5838,
									"end": 6024,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6131,
									"end": 6133,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 6126,
									"end": 6129,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6123,
									"end": 6134,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "144"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "145"
								},
								{
									"begin": 6197,
									"end": 6202,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 6165,
									"end": 6203,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "tag",
									"source": 6,
									"value": "145"
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "146"
								},
								{
									"begin": 6267,
									"end": 6277,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 6249,
									"end": 6278,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "tag",
									"source": 6,
									"value": "146"
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6239,
									"end": 6247,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6235,
									"end": 6279,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6432,
									"end": 6434,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6420,
									"end": 6430,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 6417,
									"end": 6435,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "147"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6453,
									"end": 6461,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "tag",
									"source": 6,
									"value": "147"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "148"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "149"
								},
								{
									"begin": 6550,
									"end": 6553,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 6532,
									"end": 6554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "tag",
									"source": 6,
									"value": "149"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6522,
									"end": 6530,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6518,
									"end": 6555,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6505,
									"end": 6516,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 6476,
									"end": 6556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "tag",
									"source": 6,
									"value": "148"
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "tag",
									"source": 6,
									"value": "144"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6030,
									"end": 6573,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "tag",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6633,
									"end": 6641,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6683,
									"end": 6688,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6677,
									"end": 6681,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6673,
									"end": 6689,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6579,
									"end": 6696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "tag",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6746,
									"end": 6752,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "152"
								},
								{
									"begin": 6827,
									"end": 6828,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6823,
									"end": 6829,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 6815,
									"end": 6820,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6812,
									"end": 6813,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 6808,
									"end": 6821,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 6779,
									"end": 6830,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "tag",
									"source": 6,
									"value": "152"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6775,
									"end": 6831,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 6860,
									"end": 6864,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6854,
									"end": 6858,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6850,
									"end": 6865,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6753,
									"end": 6871,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6702,
									"end": 6871,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "tag",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6952,
									"end": 6956,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "154"
								},
								{
									"begin": 7123,
									"end": 7126,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7117,
									"end": 7121,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 7098,
									"end": 7127,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "tag",
									"source": 6,
									"value": "154"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7160,
									"end": 7163,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7157,
									"end": 7158,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 7153,
									"end": 7164,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 7147,
									"end": 7151,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7144,
									"end": 7165,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6876,
									"end": 7171,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "156"
								},
								{
									"begin": 7326,
									"end": 7329,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 7293,
									"end": 7330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "tag",
									"source": 6,
									"value": "156"
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7387,
									"end": 7393,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7384,
									"end": 7414,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "157"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "158"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 7417,
									"end": 7435,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "tag",
									"source": 6,
									"value": "158"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "tag",
									"source": 6,
									"value": "157"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "159"
								},
								{
									"begin": 7493,
									"end": 7497,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7487,
									"end": 7498,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 7461,
									"end": 7499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "tag",
									"source": 6,
									"value": "159"
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "160"
								},
								{
									"begin": 7606,
									"end": 7612,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7598,
									"end": 7604,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7592,
									"end": 7596,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 7546,
									"end": 7613,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "tag",
									"source": 6,
									"value": "160"
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7664,
									"end": 7668,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7696,
									"end": 7698,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 7688,
									"end": 7694,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7685,
									"end": 7699,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 7713,
									"end": 7714,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "162"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8370,
									"end": 8371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8387,
									"end": 8393,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "163"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8436,
									"end": 8445,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8431,
									"end": 8434,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 8427,
									"end": 8446,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8421,
									"end": 8447,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "tag",
									"source": 6,
									"value": "163"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "164"
								},
								{
									"begin": 8547,
									"end": 8553,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 8540,
									"end": 8545,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 8487,
									"end": 8554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "tag",
									"source": 6,
									"value": "164"
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8481,
									"end": 8485,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 8474,
									"end": 8555,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 8343,
									"end": 8565,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "161"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "tag",
									"source": 6,
									"value": "162"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7760,
									"end": 7764,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 7756,
									"end": 7765,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 7748,
									"end": 7754,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7744,
									"end": 7766,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "165"
								},
								{
									"begin": 7826,
									"end": 7830,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 7794,
									"end": 7831,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "tag",
									"source": 6,
									"value": "165"
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7853,
									"end": 7854,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 6,
									"value": "166"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7881,
									"end": 7888,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7878,
									"end": 7879,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7875,
									"end": 7889,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "168"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7960,
									"end": 7969,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7955,
									"end": 7958,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 7951,
									"end": 7970,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7945,
									"end": 7971,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 7937,
									"end": 7943,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7930,
									"end": 7972,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 8011,
									"end": 8012,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 8003,
									"end": 8009,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7999,
									"end": 8013,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8058,
									"end": 8060,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 8047,
									"end": 8056,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 8043,
									"end": 8061,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7904,
									"end": 7908,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7901,
									"end": 7902,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7897,
									"end": 7909,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "166"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 6,
									"value": "168"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8103,
									"end": 8109,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 8094,
									"end": 8101,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8091,
									"end": 8110,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "169"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8161,
									"end": 8170,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8156,
									"end": 8159,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 8152,
									"end": 8171,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8146,
									"end": 8172,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "170"
								},
								{
									"begin": 8246,
									"end": 8250,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 8238,
									"end": 8244,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 8234,
									"end": 8251,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 8223,
									"end": 8232,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 8204,
									"end": 8252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "tag",
									"source": 6,
									"value": "170"
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8196,
									"end": 8202,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8189,
									"end": 8253,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 8111,
									"end": 8267,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "tag",
									"source": 6,
									"value": "169"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8313,
									"end": 8314,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 8309,
									"end": 8310,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 8301,
									"end": 8307,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 8297,
									"end": 8311,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 8293,
									"end": 8315,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8287,
									"end": 8291,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 8280,
									"end": 8316,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "tag",
									"source": 6,
									"value": "161"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7176,
									"end": 8571,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8577,
									"end": 8703,
									"name": "tag",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 8577,
									"end": 8703,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8614,
									"end": 8621,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8654,
									"end": 8696,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8647,
									"end": 8652,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8643,
									"end": 8697,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 8632,
									"end": 8697,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8632,
									"end": 8697,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8577,
									"end": 8703,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 8577,
									"end": 8703,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8577,
									"end": 8703,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8577,
									"end": 8703,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8709,
									"end": 8805,
									"name": "tag",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 8709,
									"end": 8805,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8746,
									"end": 8753,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8775,
									"end": 8799,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "173"
								},
								{
									"begin": 8793,
									"end": 8798,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8775,
									"end": 8799,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 8775,
									"end": 8799,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8775,
									"end": 8799,
									"name": "tag",
									"source": 6,
									"value": "173"
								},
								{
									"begin": 8775,
									"end": 8799,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8764,
									"end": 8799,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8764,
									"end": 8799,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8709,
									"end": 8805,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 8709,
									"end": 8805,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8709,
									"end": 8805,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8709,
									"end": 8805,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8811,
									"end": 8929,
									"name": "tag",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 8811,
									"end": 8929,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8898,
									"end": 8922,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "175"
								},
								{
									"begin": 8916,
									"end": 8921,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8898,
									"end": 8922,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 8898,
									"end": 8922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8898,
									"end": 8922,
									"name": "tag",
									"source": 6,
									"value": "175"
								},
								{
									"begin": 8898,
									"end": 8922,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8893,
									"end": 8896,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8886,
									"end": 8923,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 8811,
									"end": 8929,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8811,
									"end": 8929,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8811,
									"end": 8929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8935,
									"end": 9157,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 8935,
									"end": 9157,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9028,
									"end": 9032,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9066,
									"end": 9068,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 9055,
									"end": 9064,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9051,
									"end": 9069,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9043,
									"end": 9069,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9043,
									"end": 9069,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9079,
									"end": 9150,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "177"
								},
								{
									"begin": 9147,
									"end": 9148,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9136,
									"end": 9145,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 9132,
									"end": 9149,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9123,
									"end": 9129,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 9079,
									"end": 9150,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 9079,
									"end": 9150,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9079,
									"end": 9150,
									"name": "tag",
									"source": 6,
									"value": "177"
								},
								{
									"begin": 9079,
									"end": 9150,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8935,
									"end": 9157,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 8935,
									"end": 9157,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 8935,
									"end": 9157,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8935,
									"end": 9157,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8935,
									"end": 9157,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9163,
									"end": 9343,
									"name": "tag",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 9163,
									"end": 9343,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9211,
									"end": 9288,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9208,
									"end": 9209,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9201,
									"end": 9289,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 9308,
									"end": 9312,
									"name": "PUSH",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 9305,
									"end": 9306,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 9298,
									"end": 9313,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 9332,
									"end": 9336,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 9329,
									"end": 9330,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9322,
									"end": 9337,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 9349,
									"end": 9540,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 9349,
									"end": 9540,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9389,
									"end": 9392,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9408,
									"end": 9428,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "180"
								},
								{
									"begin": 9426,
									"end": 9427,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9408,
									"end": 9428,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 9408,
									"end": 9428,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9408,
									"end": 9428,
									"name": "tag",
									"source": 6,
									"value": "180"
								},
								{
									"begin": 9408,
									"end": 9428,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9403,
									"end": 9428,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9403,
									"end": 9428,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9442,
									"end": 9462,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "181"
								},
								{
									"begin": 9460,
									"end": 9461,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 9442,
									"end": 9462,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 9442,
									"end": 9462,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9442,
									"end": 9462,
									"name": "tag",
									"source": 6,
									"value": "181"
								},
								{
									"begin": 9442,
									"end": 9462,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9437,
									"end": 9462,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 9437,
									"end": 9462,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9485,
									"end": 9486,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9482,
									"end": 9483,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9478,
									"end": 9487,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9471,
									"end": 9487,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9471,
									"end": 9487,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9506,
									"end": 9509,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 9503,
									"end": 9504,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9500,
									"end": 9510,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 9497,
									"end": 9533,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 9497,
									"end": 9533,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "182"
								},
								{
									"begin": 9497,
									"end": 9533,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 9513,
									"end": 9531,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "183"
								},
								{
									"begin": 9513,
									"end": 9531,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 9513,
									"end": 9531,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9513,
									"end": 9531,
									"name": "tag",
									"source": 6,
									"value": "183"
								},
								{
									"begin": 9513,
									"end": 9531,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9497,
									"end": 9533,
									"name": "tag",
									"source": 6,
									"value": "182"
								},
								{
									"begin": 9497,
									"end": 9533,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9349,
									"end": 9540,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 9349,
									"end": 9540,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9349,
									"end": 9540,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9349,
									"end": 9540,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9349,
									"end": 9540,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9546,
									"end": 9664,
									"name": "tag",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 9546,
									"end": 9664,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9633,
									"end": 9657,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "185"
								},
								{
									"begin": 9651,
									"end": 9656,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 9633,
									"end": 9657,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 9633,
									"end": 9657,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9633,
									"end": 9657,
									"name": "tag",
									"source": 6,
									"value": "185"
								},
								{
									"begin": 9633,
									"end": 9657,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9628,
									"end": 9631,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9621,
									"end": 9658,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 9546,
									"end": 9664,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9546,
									"end": 9664,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9546,
									"end": 9664,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9670,
									"end": 10112,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 9670,
									"end": 10112,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9819,
									"end": 9823,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9857,
									"end": 9859,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 9846,
									"end": 9855,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9842,
									"end": 9860,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9834,
									"end": 9860,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9834,
									"end": 9860,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9870,
									"end": 9941,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "187"
								},
								{
									"begin": 9938,
									"end": 9939,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9927,
									"end": 9936,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 9923,
									"end": 9940,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9914,
									"end": 9920,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 9870,
									"end": 9941,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 9870,
									"end": 9941,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9870,
									"end": 9941,
									"name": "tag",
									"source": 6,
									"value": "187"
								},
								{
									"begin": 9870,
									"end": 9941,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9951,
									"end": 10023,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "188"
								},
								{
									"begin": 10019,
									"end": 10021,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 10008,
									"end": 10017,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 10004,
									"end": 10022,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9995,
									"end": 10001,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 9951,
									"end": 10023,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 9951,
									"end": 10023,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9951,
									"end": 10023,
									"name": "tag",
									"source": 6,
									"value": "188"
								},
								{
									"begin": 9951,
									"end": 10023,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10033,
									"end": 10105,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "189"
								},
								{
									"begin": 10101,
									"end": 10103,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 10090,
									"end": 10099,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 10086,
									"end": 10104,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10077,
									"end": 10083,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 10033,
									"end": 10105,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 10033,
									"end": 10105,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10033,
									"end": 10105,
									"name": "tag",
									"source": 6,
									"value": "189"
								},
								{
									"begin": 10033,
									"end": 10105,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9670,
									"end": 10112,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 9670,
									"end": 10112,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 9670,
									"end": 10112,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9670,
									"end": 10112,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9670,
									"end": 10112,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9670,
									"end": 10112,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9670,
									"end": 10112,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10118,
									"end": 10340,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 10118,
									"end": 10340,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10211,
									"end": 10215,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10249,
									"end": 10251,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 10238,
									"end": 10247,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10234,
									"end": 10252,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10226,
									"end": 10252,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10226,
									"end": 10252,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10262,
									"end": 10333,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "191"
								},
								{
									"begin": 10330,
									"end": 10331,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10319,
									"end": 10328,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 10315,
									"end": 10332,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10306,
									"end": 10312,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 10262,
									"end": 10333,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 10262,
									"end": 10333,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10262,
									"end": 10333,
									"name": "tag",
									"source": 6,
									"value": "191"
								},
								{
									"begin": 10262,
									"end": 10333,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10118,
									"end": 10340,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 10118,
									"end": 10340,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 10118,
									"end": 10340,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10118,
									"end": 10340,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10118,
									"end": 10340,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 172,
									"end": 626,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 172,
									"end": 626,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 172,
									"end": 626,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 172,
									"end": 626,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 172,
									"end": 626,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 172,
									"end": 626,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 172,
									"end": 626,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 172,
									"end": 626,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 172,
									"end": 626,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122065040ed8da1c6c77bec9586743f027bd9e0feb0fc43a29a1e0017c5deb3ed2b664736f6c63430008140033",
									".code": [
										{
											"begin": 172,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 172,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 172,
											"end": 626,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 172,
											"end": 626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 172,
											"end": 626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 172,
											"end": 626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 172,
											"end": 626,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 172,
											"end": 626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 172,
											"end": 626,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 172,
											"end": 626,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 172,
											"end": 626,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 172,
											"end": 626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 172,
											"end": 626,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 172,
											"end": 626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 172,
											"end": 626,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 172,
											"end": 626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 172,
											"end": 626,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 172,
											"end": 626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 172,
											"end": 626,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 172,
											"end": 626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 172,
											"end": 626,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 172,
											"end": 626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 172,
											"end": 626,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 172,
											"end": 626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 172,
											"end": 626,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 172,
											"end": 626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 172,
											"end": 626,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 172,
											"end": 626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 172,
											"end": 626,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 172,
											"end": 626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 172,
											"end": 626,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 172,
											"end": 626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 172,
											"end": 626,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 172,
											"end": 626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "2E52D606"
										},
										{
											"begin": 172,
											"end": 626,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 172,
											"end": 626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 172,
											"end": 626,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 172,
											"end": 626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 172,
											"end": 626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 172,
											"end": 626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 172,
											"end": 626,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2452,
											"end": 2541,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2452,
											"end": 2541,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2452,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2452,
											"end": 2541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2541,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2452,
											"end": 2541,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2541,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2452,
											"end": 2541,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2452,
											"end": 2541,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2541,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2452,
											"end": 2541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2541,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2452,
											"end": 2541,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2541,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2452,
											"end": 2541,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2541,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2541,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2541,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2541,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2541,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4671,
											"end": 4857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 4671,
											"end": 4857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4671,
											"end": 4857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3522,
											"end": 3619,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3522,
											"end": 3619,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3522,
											"end": 3619,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3522,
											"end": 3619,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3522,
											"end": 3619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3522,
											"end": 3619,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3522,
											"end": 3619,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3522,
											"end": 3619,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3522,
											"end": 3619,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3522,
											"end": 3619,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3522,
											"end": 3619,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3522,
											"end": 3619,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3522,
											"end": 3619,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3522,
											"end": 3619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3522,
											"end": 3619,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3522,
											"end": 3619,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3522,
											"end": 3619,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3522,
											"end": 3619,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3522,
											"end": 3619,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3522,
											"end": 3619,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3522,
											"end": 3619,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3522,
											"end": 3619,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3522,
											"end": 3619,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5417,
											"end": 5661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 5417,
											"end": 5661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 5417,
											"end": 5661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 208,
											"end": 231,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 208,
											"end": 231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 208,
											"end": 231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 208,
											"end": 231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 208,
											"end": 231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 208,
											"end": 231,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 208,
											"end": 231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 208,
											"end": 231,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 208,
											"end": 231,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 208,
											"end": 231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 208,
											"end": 231,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 208,
											"end": 231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 208,
											"end": 231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 208,
											"end": 231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 208,
											"end": 231,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 208,
											"end": 231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 208,
											"end": 231,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 208,
											"end": 231,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 208,
											"end": 231,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 208,
											"end": 231,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 208,
											"end": 231,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 208,
											"end": 231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 208,
											"end": 231,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3380,
											"end": 3462,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3380,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3380,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3380,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3380,
											"end": 3462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3380,
											"end": 3462,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3380,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3380,
											"end": 3462,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3380,
											"end": 3462,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3380,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3380,
											"end": 3462,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3380,
											"end": 3462,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3380,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3380,
											"end": 3462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3380,
											"end": 3462,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3380,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3380,
											"end": 3462,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3380,
											"end": 3462,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3380,
											"end": 3462,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3380,
											"end": 3462,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3380,
											"end": 3462,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3380,
											"end": 3462,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3380,
											"end": 3462,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 6056,
											"end": 6290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 6056,
											"end": 6290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 6056,
											"end": 6290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3677,
											"end": 3793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3677,
											"end": 3793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3677,
											"end": 3793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2654,
											"end": 2747,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2654,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2654,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2654,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2654,
											"end": 2747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2654,
											"end": 2747,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2654,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2654,
											"end": 2747,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2654,
											"end": 2747,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2654,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2654,
											"end": 2747,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2654,
											"end": 2747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2654,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2654,
											"end": 2747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2654,
											"end": 2747,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2654,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2654,
											"end": 2747,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2654,
											"end": 2747,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2654,
											"end": 2747,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2654,
											"end": 2747,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2654,
											"end": 2747,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2654,
											"end": 2747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2654,
											"end": 2747,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 6959,
											"end": 7452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 6959,
											"end": 7452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 6959,
											"end": 7452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3988,
											"end": 4166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3988,
											"end": 4166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3988,
											"end": 4166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4224,
											"end": 4364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 4224,
											"end": 4364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4224,
											"end": 4364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2541,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2452,
											"end": 2541,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2497,
											"end": 2510,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2529,
											"end": 2534,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2522,
											"end": 2534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2522,
											"end": 2534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2541,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4748,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4773,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 4788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 4776,
											"end": 4786,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 4776,
											"end": 4788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 4788,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 4776,
											"end": 4788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4760,
											"end": 4788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4760,
											"end": 4788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4798,
											"end": 4829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 4807,
											"end": 4812,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4814,
											"end": 4821,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4823,
											"end": 4828,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4798,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4798,
											"end": 4829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4798,
											"end": 4829,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 4798,
											"end": 4829,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4846,
											"end": 4850,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4839,
											"end": 4850,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4839,
											"end": 4850,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4839,
											"end": 4850,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3522,
											"end": 3619,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3522,
											"end": 3619,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3574,
											"end": 3581,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3600,
											"end": 3612,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3600,
											"end": 3612,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3593,
											"end": 3612,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3593,
											"end": 3612,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3522,
											"end": 3619,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3522,
											"end": 3619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5504,
											"end": 5508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5520,
											"end": 5535,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5538,
											"end": 5550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 5538,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 5538,
											"end": 5550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5538,
											"end": 5550,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 5538,
											"end": 5550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5520,
											"end": 5550,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5520,
											"end": 5550,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5597,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 5576,
											"end": 5580,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5582,
											"end": 5589,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5596,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 5560,
											"end": 5597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5597,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 5560,
											"end": 5597,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5607,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 5617,
											"end": 5621,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5625,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5627,
											"end": 5632,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5607,
											"end": 5616,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 5607,
											"end": 5633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5607,
											"end": 5633,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 5607,
											"end": 5633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5650,
											"end": 5654,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5643,
											"end": 5654,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5654,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5654,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 208,
											"end": 231,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 208,
											"end": 231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 208,
											"end": 231,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 208,
											"end": 231,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 208,
											"end": 231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 208,
											"end": 231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3380,
											"end": 3462,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3380,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3429,
											"end": 3434,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3453,
											"end": 3455,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3446,
											"end": 3455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3380,
											"end": 3462,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3380,
											"end": 3462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6144,
											"end": 6148,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6160,
											"end": 6173,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6176,
											"end": 6188,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 6176,
											"end": 6186,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 6176,
											"end": 6188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6176,
											"end": 6188,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 6176,
											"end": 6188,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6160,
											"end": 6188,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6160,
											"end": 6188,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6198,
											"end": 6262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 6207,
											"end": 6212,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6221,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6251,
											"end": 6261,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6223,
											"end": 6248,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 6233,
											"end": 6238,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6240,
											"end": 6247,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 6223,
											"end": 6232,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 6223,
											"end": 6248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6223,
											"end": 6248,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 6223,
											"end": 6248,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6223,
											"end": 6261,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 6223,
											"end": 6261,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6223,
											"end": 6261,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6223,
											"end": 6261,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 6223,
											"end": 6261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6223,
											"end": 6261,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 6223,
											"end": 6261,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6198,
											"end": 6206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 6198,
											"end": 6262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6198,
											"end": 6262,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 6198,
											"end": 6262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6279,
											"end": 6283,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6272,
											"end": 6283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6272,
											"end": 6283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6272,
											"end": 6283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3742,
											"end": 3749,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3768,
											"end": 3777,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3768,
											"end": 3786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3778,
											"end": 3785,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3768,
											"end": 3786,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3768,
											"end": 3786,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3768,
											"end": 3786,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3768,
											"end": 3786,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3768,
											"end": 3786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3768,
											"end": 3786,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3768,
											"end": 3786,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3768,
											"end": 3786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3768,
											"end": 3786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3768,
											"end": 3786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3768,
											"end": 3786,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3768,
											"end": 3786,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3768,
											"end": 3786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3768,
											"end": 3786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3768,
											"end": 3786,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3768,
											"end": 3786,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3761,
											"end": 3786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3761,
											"end": 3786,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2654,
											"end": 2747,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2654,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2701,
											"end": 2714,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2733,
											"end": 2740,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2726,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2726,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2654,
											"end": 2747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2654,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7054,
											"end": 7058,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7070,
											"end": 7083,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7086,
											"end": 7098,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 7086,
											"end": 7096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 7086,
											"end": 7098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7086,
											"end": 7098,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 7086,
											"end": 7098,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7070,
											"end": 7098,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7070,
											"end": 7098,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7108,
											"end": 7132,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7135,
											"end": 7160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 7145,
											"end": 7150,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7152,
											"end": 7159,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7135,
											"end": 7144,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 7135,
											"end": 7160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7135,
											"end": 7160,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 7135,
											"end": 7160,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7108,
											"end": 7160,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7108,
											"end": 7160,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7210,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7174,
											"end": 7190,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7174,
											"end": 7210,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7170,
											"end": 7318,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7170,
											"end": 7318,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 7170,
											"end": 7318,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7262,
											"end": 7269,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7271,
											"end": 7287,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7289,
											"end": 7306,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7233,
											"end": 7307,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7233,
											"end": 7307,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7233,
											"end": 7307,
											"name": "PUSH",
											"source": 2,
											"value": "A60F030C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7233,
											"end": 7307,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7233,
											"end": 7307,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7233,
											"end": 7307,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7233,
											"end": 7307,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7233,
											"end": 7307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 7233,
											"end": 7307,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7233,
											"end": 7307,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7233,
											"end": 7307,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7233,
											"end": 7307,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7233,
											"end": 7307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 7233,
											"end": 7307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7233,
											"end": 7307,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 7233,
											"end": 7307,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7233,
											"end": 7307,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7233,
											"end": 7307,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7233,
											"end": 7307,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7233,
											"end": 7307,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7233,
											"end": 7307,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7233,
											"end": 7307,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7233,
											"end": 7307,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7170,
											"end": 7318,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 7170,
											"end": 7318,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7351,
											"end": 7413,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 7360,
											"end": 7365,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7367,
											"end": 7374,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7395,
											"end": 7412,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7376,
											"end": 7392,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7376,
											"end": 7412,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7351,
											"end": 7359,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 7351,
											"end": 7413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7351,
											"end": 7413,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 7351,
											"end": 7413,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7445,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7434,
											"end": 7445,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7434,
											"end": 7445,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7434,
											"end": 7445,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7434,
											"end": 7445,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 7452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4061,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 4089,
											"end": 4099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 4089,
											"end": 4101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4073,
											"end": 4101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4073,
											"end": 4101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4138,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 4121,
											"end": 4126,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4128,
											"end": 4130,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4132,
											"end": 4137,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 4111,
											"end": 4138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4138,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 4111,
											"end": 4138,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4155,
											"end": 4159,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4148,
											"end": 4159,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4148,
											"end": 4159,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4148,
											"end": 4159,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 4166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4304,
											"end": 4311,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4330,
											"end": 4341,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4330,
											"end": 4348,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4342,
											"end": 4347,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4330,
											"end": 4348,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4330,
											"end": 4348,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4330,
											"end": 4348,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4330,
											"end": 4348,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4330,
											"end": 4348,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4330,
											"end": 4348,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4330,
											"end": 4348,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4330,
											"end": 4348,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4330,
											"end": 4348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4330,
											"end": 4348,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4330,
											"end": 4348,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4330,
											"end": 4348,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4330,
											"end": 4348,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4330,
											"end": 4348,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4330,
											"end": 4348,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4330,
											"end": 4357,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4356,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4330,
											"end": 4357,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4330,
											"end": 4357,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4330,
											"end": 4357,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4330,
											"end": 4357,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4330,
											"end": 4357,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4330,
											"end": 4357,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4330,
											"end": 4357,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4330,
											"end": 4357,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4330,
											"end": 4357,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4330,
											"end": 4357,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4330,
											"end": 4357,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4330,
											"end": 4357,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4330,
											"end": 4357,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4330,
											"end": 4357,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4330,
											"end": 4357,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4330,
											"end": 4357,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4357,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4357,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 641,
											"end": 737,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 641,
											"end": 737,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 694,
											"end": 701,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 720,
											"end": 730,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 713,
											"end": 730,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 713,
											"end": 730,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 641,
											"end": 737,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 641,
											"end": 737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11158,
											"end": 11286,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 11158,
											"end": 11286,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11242,
											"end": 11279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 11251,
											"end": 11256,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11258,
											"end": 11265,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11267,
											"end": 11272,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11274,
											"end": 11278,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 11242,
											"end": 11250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 11242,
											"end": 11279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11242,
											"end": 11279,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 11242,
											"end": 11279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11158,
											"end": 11286,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11158,
											"end": 11286,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11158,
											"end": 11286,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11158,
											"end": 11286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12829,
											"end": 13306,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 12829,
											"end": 13306,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12928,
											"end": 12952,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12955,
											"end": 12980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 12965,
											"end": 12970,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12972,
											"end": 12979,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12955,
											"end": 12964,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 12955,
											"end": 12980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12955,
											"end": 12980,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 12955,
											"end": 12980,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12928,
											"end": 12980,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12928,
											"end": 12980,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13014,
											"end": 13031,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12994,
											"end": 13010,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12994,
											"end": 13031,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 12990,
											"end": 13300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 12990,
											"end": 13300,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13070,
											"end": 13075,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13051,
											"end": 13067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13051,
											"end": 13075,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 13047,
											"end": 13177,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13047,
											"end": 13177,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 13047,
											"end": 13177,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13129,
											"end": 13136,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13138,
											"end": 13154,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13156,
											"end": 13161,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13102,
											"end": 13162,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13102,
											"end": 13162,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13102,
											"end": 13162,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13102,
											"end": 13162,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13102,
											"end": 13162,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13102,
											"end": 13162,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13102,
											"end": 13162,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13102,
											"end": 13162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 13102,
											"end": 13162,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 13102,
											"end": 13162,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 13102,
											"end": 13162,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13102,
											"end": 13162,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13102,
											"end": 13162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 13102,
											"end": 13162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13102,
											"end": 13162,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 13102,
											"end": 13162,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13102,
											"end": 13162,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13102,
											"end": 13162,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13102,
											"end": 13162,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13102,
											"end": 13162,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13102,
											"end": 13162,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13102,
											"end": 13162,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13102,
											"end": 13162,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13047,
											"end": 13177,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 13047,
											"end": 13177,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13218,
											"end": 13275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 13227,
											"end": 13232,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13234,
											"end": 13241,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13262,
											"end": 13267,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13243,
											"end": 13259,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13243,
											"end": 13267,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13269,
											"end": 13274,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13218,
											"end": 13226,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 13218,
											"end": 13275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13218,
											"end": 13275,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 13218,
											"end": 13275,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12990,
											"end": 13300,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 12990,
											"end": 13300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12918,
											"end": 13306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12829,
											"end": 13306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12829,
											"end": 13306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12829,
											"end": 13306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12829,
											"end": 13306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7825,
											"end": 8125,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 7825,
											"end": 8125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7924,
											"end": 7925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7908,
											"end": 7926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7908,
											"end": 7926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7908,
											"end": 7912,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7908,
											"end": 7926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7908,
											"end": 7926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7908,
											"end": 7926,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7904,
											"end": 7990,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 7904,
											"end": 7990,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7976,
											"end": 7977,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7949,
											"end": 7979,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7949,
											"end": 7979,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7949,
											"end": 7979,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7949,
											"end": 7979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7949,
											"end": 7979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7949,
											"end": 7979,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7949,
											"end": 7979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7949,
											"end": 7979,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 7949,
											"end": 7979,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7949,
											"end": 7979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7949,
											"end": 7979,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 7949,
											"end": 7979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7949,
											"end": 7979,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 7949,
											"end": 7979,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7949,
											"end": 7979,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7949,
											"end": 7979,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7949,
											"end": 7979,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7949,
											"end": 7979,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7949,
											"end": 7979,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7949,
											"end": 7979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7949,
											"end": 7979,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7904,
											"end": 7990,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 7904,
											"end": 7990,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8017,
											"end": 8018,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8003,
											"end": 8019,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8003,
											"end": 8019,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8003,
											"end": 8005,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8003,
											"end": 8019,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8003,
											"end": 8019,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8003,
											"end": 8019,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7999,
											"end": 8085,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 7999,
											"end": 8085,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8071,
											"end": 8072,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 8042,
											"end": 8074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7999,
											"end": 8085,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 7999,
											"end": 8085,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8094,
											"end": 8118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 8102,
											"end": 8106,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8108,
											"end": 8110,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8112,
											"end": 8117,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8094,
											"end": 8101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 8094,
											"end": 8118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8094,
											"end": 8118,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 8094,
											"end": 8118,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7825,
											"end": 8125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7825,
											"end": 8125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7825,
											"end": 8125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7825,
											"end": 8125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12118,
											"end": 12550,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 12118,
											"end": 12550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12247,
											"end": 12248,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12230,
											"end": 12249,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12230,
											"end": 12249,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12230,
											"end": 12235,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12230,
											"end": 12249,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12230,
											"end": 12249,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12230,
											"end": 12249,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12226,
											"end": 12315,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 12226,
											"end": 12315,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12301,
											"end": 12302,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12272,
											"end": 12304,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12272,
											"end": 12304,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12272,
											"end": 12304,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12272,
											"end": 12304,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12272,
											"end": 12304,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12272,
											"end": 12304,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12272,
											"end": 12304,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12272,
											"end": 12304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 12272,
											"end": 12304,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12272,
											"end": 12304,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12272,
											"end": 12304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 12272,
											"end": 12304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12272,
											"end": 12304,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 12272,
											"end": 12304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12272,
											"end": 12304,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12272,
											"end": 12304,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12272,
											"end": 12304,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12272,
											"end": 12304,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12272,
											"end": 12304,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12272,
											"end": 12304,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12272,
											"end": 12304,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12226,
											"end": 12315,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 12226,
											"end": 12315,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12347,
											"end": 12348,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12328,
											"end": 12349,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12328,
											"end": 12349,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12328,
											"end": 12335,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12328,
											"end": 12349,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12328,
											"end": 12349,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12328,
											"end": 12349,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12324,
											"end": 12414,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 12324,
											"end": 12414,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12400,
											"end": 12401,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12372,
											"end": 12403,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12372,
											"end": 12403,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12372,
											"end": 12403,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12372,
											"end": 12403,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12372,
											"end": 12403,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12372,
											"end": 12403,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12372,
											"end": 12403,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12372,
											"end": 12403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 12372,
											"end": 12403,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12372,
											"end": 12403,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12372,
											"end": 12403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 12372,
											"end": 12403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12372,
											"end": 12403,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 12372,
											"end": 12403,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12372,
											"end": 12403,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12372,
											"end": 12403,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12372,
											"end": 12403,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12372,
											"end": 12403,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12372,
											"end": 12403,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12372,
											"end": 12403,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12372,
											"end": 12403,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12324,
											"end": 12414,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 12324,
											"end": 12414,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12453,
											"end": 12458,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12423,
											"end": 12434,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12423,
											"end": 12441,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12435,
											"end": 12440,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 12423,
											"end": 12441,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12423,
											"end": 12441,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12423,
											"end": 12441,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12423,
											"end": 12441,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12423,
											"end": 12441,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12423,
											"end": 12441,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12423,
											"end": 12441,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12423,
											"end": 12441,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12423,
											"end": 12441,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12423,
											"end": 12441,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12423,
											"end": 12441,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12423,
											"end": 12441,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12423,
											"end": 12441,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12423,
											"end": 12441,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12423,
											"end": 12441,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12423,
											"end": 12450,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12442,
											"end": 12449,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 12423,
											"end": 12450,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12423,
											"end": 12450,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12423,
											"end": 12450,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12423,
											"end": 12450,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12423,
											"end": 12450,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12423,
											"end": 12450,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12423,
											"end": 12450,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12423,
											"end": 12450,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12423,
											"end": 12450,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12423,
											"end": 12450,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12423,
											"end": 12450,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12423,
											"end": 12450,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12423,
											"end": 12450,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12423,
											"end": 12450,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12423,
											"end": 12450,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12423,
											"end": 12458,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12423,
											"end": 12458,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12423,
											"end": 12458,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12423,
											"end": 12458,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12472,
											"end": 12481,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12544,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 12468,
											"end": 12544,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12518,
											"end": 12525,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12502,
											"end": 12533,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12502,
											"end": 12533,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12516,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12502,
											"end": 12533,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12502,
											"end": 12533,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12502,
											"end": 12533,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 12527,
											"end": 12532,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12502,
											"end": 12533,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12502,
											"end": 12533,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12502,
											"end": 12533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 12502,
											"end": 12533,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12502,
											"end": 12533,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12502,
											"end": 12533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 12502,
											"end": 12533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12502,
											"end": 12533,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 12502,
											"end": 12533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12502,
											"end": 12533,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12502,
											"end": 12533,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12502,
											"end": 12533,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12502,
											"end": 12533,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12502,
											"end": 12533,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12502,
											"end": 12533,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12502,
											"end": 12533,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12544,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 12468,
											"end": 12544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12118,
											"end": 12550,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12118,
											"end": 12550,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12118,
											"end": 12550,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12118,
											"end": 12550,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12118,
											"end": 12550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8433,
											"end": 9540,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 8433,
											"end": 9540,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8538,
											"end": 8539,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8522,
											"end": 8540,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8522,
											"end": 8540,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8522,
											"end": 8526,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8522,
											"end": 8540,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8522,
											"end": 8540,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8522,
											"end": 8540,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8518,
											"end": 9058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 8518,
											"end": 9058,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8674,
											"end": 8679,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8658,
											"end": 8670,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 8658,
											"end": 8670,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8658,
											"end": 8679,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8658,
											"end": 8679,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8658,
											"end": 8679,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8658,
											"end": 8679,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 8658,
											"end": 8679,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8658,
											"end": 8679,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8658,
											"end": 8679,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 8658,
											"end": 8679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8658,
											"end": 8679,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 8658,
											"end": 8679,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8658,
											"end": 8679,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8658,
											"end": 8679,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8658,
											"end": 8679,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8658,
											"end": 8679,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8658,
											"end": 8679,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8658,
											"end": 8679,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8658,
											"end": 8679,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8518,
											"end": 9058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 8518,
											"end": 9058,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8518,
											"end": 9058,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 8518,
											"end": 9058,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8710,
											"end": 8729,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8732,
											"end": 8741,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8732,
											"end": 8747,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8742,
											"end": 8746,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8732,
											"end": 8747,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8732,
											"end": 8747,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8732,
											"end": 8747,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8732,
											"end": 8747,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8732,
											"end": 8747,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8732,
											"end": 8747,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8732,
											"end": 8747,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8732,
											"end": 8747,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8732,
											"end": 8747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8732,
											"end": 8747,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8732,
											"end": 8747,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8732,
											"end": 8747,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8732,
											"end": 8747,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8732,
											"end": 8747,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8732,
											"end": 8747,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8732,
											"end": 8747,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8710,
											"end": 8747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8710,
											"end": 8747,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8779,
											"end": 8784,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8765,
											"end": 8776,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8765,
											"end": 8784,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 8761,
											"end": 8876,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8761,
											"end": 8876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 8761,
											"end": 8876,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8836,
											"end": 8840,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8842,
											"end": 8853,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8855,
											"end": 8860,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8811,
											"end": 8861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8811,
											"end": 8861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8811,
											"end": 8861,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8811,
											"end": 8861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8811,
											"end": 8861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8811,
											"end": 8861,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8811,
											"end": 8861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8811,
											"end": 8861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 8811,
											"end": 8861,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8811,
											"end": 8861,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8811,
											"end": 8861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8811,
											"end": 8861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8811,
											"end": 8861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 8811,
											"end": 8861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8811,
											"end": 8861,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 8811,
											"end": 8861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8811,
											"end": 8861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8811,
											"end": 8861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8811,
											"end": 8861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8811,
											"end": 8861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8811,
											"end": 8861,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8811,
											"end": 8861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8811,
											"end": 8861,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8761,
											"end": 8876,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 8761,
											"end": 8876,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9028,
											"end": 9033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9014,
											"end": 9025,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9014,
											"end": 9033,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8996,
											"end": 9005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8996,
											"end": 9011,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9006,
											"end": 9010,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8996,
											"end": 9011,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8996,
											"end": 9011,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8996,
											"end": 9011,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8996,
											"end": 9011,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8996,
											"end": 9011,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8996,
											"end": 9011,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8996,
											"end": 9011,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8996,
											"end": 9011,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8996,
											"end": 9011,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8996,
											"end": 9011,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8996,
											"end": 9011,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8996,
											"end": 9011,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8996,
											"end": 9011,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8996,
											"end": 9011,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8996,
											"end": 9011,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8996,
											"end": 9033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8996,
											"end": 9033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8996,
											"end": 9033,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8996,
											"end": 9033,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8696,
											"end": 9058,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8518,
											"end": 9058,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 8518,
											"end": 9058,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9086,
											"end": 9087,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9072,
											"end": 9088,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9072,
											"end": 9088,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9072,
											"end": 9074,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9072,
											"end": 9088,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9072,
											"end": 9088,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9072,
											"end": 9088,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9068,
											"end": 9493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 9068,
											"end": 9493,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9251,
											"end": 9256,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9235,
											"end": 9247,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 9235,
											"end": 9247,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9235,
											"end": 9256,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9235,
											"end": 9256,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9235,
											"end": 9256,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9235,
											"end": 9256,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9235,
											"end": 9256,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9235,
											"end": 9256,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9235,
											"end": 9256,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9235,
											"end": 9256,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9235,
											"end": 9256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9235,
											"end": 9256,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9235,
											"end": 9256,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9068,
											"end": 9493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 9068,
											"end": 9493,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9068,
											"end": 9493,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 9068,
											"end": 9493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9463,
											"end": 9468,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9446,
											"end": 9455,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9446,
											"end": 9459,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9456,
											"end": 9458,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9446,
											"end": 9459,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9446,
											"end": 9459,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9446,
											"end": 9459,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9446,
											"end": 9459,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9446,
											"end": 9459,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9446,
											"end": 9459,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9446,
											"end": 9459,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9446,
											"end": 9459,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9446,
											"end": 9459,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9446,
											"end": 9459,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9446,
											"end": 9459,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9446,
											"end": 9459,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9446,
											"end": 9459,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9446,
											"end": 9459,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9446,
											"end": 9459,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9446,
											"end": 9459,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9446,
											"end": 9468,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9446,
											"end": 9468,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9446,
											"end": 9468,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9446,
											"end": 9468,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9446,
											"end": 9468,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9446,
											"end": 9468,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9446,
											"end": 9468,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9446,
											"end": 9468,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9446,
											"end": 9468,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9446,
											"end": 9468,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9446,
											"end": 9468,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9068,
											"end": 9493,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 9068,
											"end": 9493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9523,
											"end": 9525,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9508,
											"end": 9533,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9508,
											"end": 9533,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9517,
											"end": 9521,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9508,
											"end": 9533,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9508,
											"end": 9533,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9508,
											"end": 9533,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9527,
											"end": 9532,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9508,
											"end": 9533,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9508,
											"end": 9533,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9508,
											"end": 9533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 9508,
											"end": 9533,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9508,
											"end": 9533,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9508,
											"end": 9533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 9508,
											"end": 9533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9508,
											"end": 9533,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 9508,
											"end": 9533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9508,
											"end": 9533,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9508,
											"end": 9533,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9508,
											"end": 9533,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9508,
											"end": 9533,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9508,
											"end": 9533,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9508,
											"end": 9533,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9508,
											"end": 9533,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 8433,
											"end": 9540,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8433,
											"end": 9540,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8433,
											"end": 9540,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8433,
											"end": 9540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4912,
											"end": 4918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4936,
											"end": 4959,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4932,
											"end": 4964,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 4967,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5087,
											"end": 5088,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 5157,
											"end": 5164,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5146,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5133,
											"end": 5155,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 5112,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5256,
											"end": 5262,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5264,
											"end": 5270,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5313,
											"end": 5315,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5301,
											"end": 5310,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5292,
											"end": 5299,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5288,
											"end": 5311,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5316,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 5319,
											"end": 5398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5439,
											"end": 5440,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 5509,
											"end": 5516,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5500,
											"end": 5506,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5489,
											"end": 5498,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5485,
											"end": 5507,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 5464,
											"end": 5517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5454,
											"end": 5517,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5454,
											"end": 5517,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5410,
											"end": 5527,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5566,
											"end": 5568,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 5637,
											"end": 5644,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5628,
											"end": 5634,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5617,
											"end": 5626,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5613,
											"end": 5635,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 5592,
											"end": 5645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5582,
											"end": 5645,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5582,
											"end": 5645,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5537,
											"end": 5655,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5668,
											"end": 5848,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 5668,
											"end": 5848,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5716,
											"end": 5793,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5713,
											"end": 5714,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5706,
											"end": 5794,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 5817,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 5810,
											"end": 5811,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5803,
											"end": 5818,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5837,
											"end": 5841,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5834,
											"end": 5835,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5827,
											"end": 5842,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5898,
											"end": 5904,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5935,
											"end": 5936,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5929,
											"end": 5933,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5925,
											"end": 5937,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5915,
											"end": 5937,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5915,
											"end": 5937,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 5983,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5976,
											"end": 5980,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5972,
											"end": 5984,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6003,
											"end": 6021,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6059,
											"end": 6063,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 6051,
											"end": 6057,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6047,
											"end": 6064,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6037,
											"end": 6064,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6037,
											"end": 6064,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6121,
											"end": 6123,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6113,
											"end": 6119,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6110,
											"end": 6124,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6090,
											"end": 6108,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6087,
											"end": 6125,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 6140,
											"end": 6158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5905,
											"end": 6174,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 6174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6180,
											"end": 6360,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 6180,
											"end": 6360,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6228,
											"end": 6305,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6225,
											"end": 6226,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6218,
											"end": 6306,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6325,
											"end": 6329,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 6322,
											"end": 6323,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6353,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6346,
											"end": 6347,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6339,
											"end": 6354,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6366,
											"end": 6557,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 6366,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6406,
											"end": 6409,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6425,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 6443,
											"end": 6444,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 6425,
											"end": 6445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6445,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 6425,
											"end": 6445,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6420,
											"end": 6445,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6420,
											"end": 6445,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6479,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 6477,
											"end": 6478,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6479,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 6459,
											"end": 6479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6479,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 6459,
											"end": 6479,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6454,
											"end": 6479,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6454,
											"end": 6479,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6502,
											"end": 6503,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6499,
											"end": 6500,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6495,
											"end": 6504,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6488,
											"end": 6504,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6488,
											"end": 6504,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6523,
											"end": 6526,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6520,
											"end": 6521,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6517,
											"end": 6527,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6550,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 6514,
											"end": 6550,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6530,
											"end": 6548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 6530,
											"end": 6548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 6530,
											"end": 6548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6530,
											"end": 6548,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 6530,
											"end": 6548,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6550,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 6514,
											"end": 6550,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6366,
											"end": 6557,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6366,
											"end": 6557,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6366,
											"end": 6557,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6366,
											"end": 6557,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6366,
											"end": 6557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6563,
											"end": 6681,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 6563,
											"end": 6681,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6650,
											"end": 6674,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 6668,
											"end": 6673,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6650,
											"end": 6674,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 6650,
											"end": 6674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6650,
											"end": 6674,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 6650,
											"end": 6674,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6645,
											"end": 6648,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6638,
											"end": 6675,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6563,
											"end": 6681,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6563,
											"end": 6681,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6563,
											"end": 6681,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 7129,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 6687,
											"end": 7129,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6836,
											"end": 6840,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6874,
											"end": 6876,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 6863,
											"end": 6872,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6859,
											"end": 6877,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6851,
											"end": 6877,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6851,
											"end": 6877,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6887,
											"end": 6958,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 6955,
											"end": 6956,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6944,
											"end": 6953,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 6957,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6937,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6887,
											"end": 6958,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 6887,
											"end": 6958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6887,
											"end": 6958,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 6887,
											"end": 6958,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6968,
											"end": 7040,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 7036,
											"end": 7038,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7025,
											"end": 7034,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7039,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7012,
											"end": 7018,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6968,
											"end": 7040,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 6968,
											"end": 7040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6968,
											"end": 7040,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 6968,
											"end": 7040,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7050,
											"end": 7122,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 7118,
											"end": 7120,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7107,
											"end": 7116,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7103,
											"end": 7121,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7094,
											"end": 7100,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7050,
											"end": 7122,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 7050,
											"end": 7122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7050,
											"end": 7122,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 7050,
											"end": 7122,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 7129,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 7129,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 7129,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 7129,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 7129,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 7129,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 7129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7357,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 7135,
											"end": 7357,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7228,
											"end": 7232,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7266,
											"end": 7268,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7255,
											"end": 7264,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7251,
											"end": 7269,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7243,
											"end": 7269,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7243,
											"end": 7269,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7279,
											"end": 7350,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 7347,
											"end": 7348,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7336,
											"end": 7345,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7332,
											"end": 7349,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7323,
											"end": 7329,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7279,
											"end": 7350,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 7279,
											"end": 7350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7279,
											"end": 7350,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 7279,
											"end": 7350,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7357,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7357,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7357,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7357,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"contracts/LionCoin.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"n()": "2e52d606",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"ERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"n\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `requestedDecrease`. NOTE: Although this function is designed to avoid double spending with {approval}, it can still be frontrunned, preventing any attempt of allowance reduction.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LionCoin.sol\":\"LionToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LionCoin.sol\":{\"keccak256\":\"0x0ca0cf0b4761f05b9b4e0ccf7808db9b04c414606f7fb7a67b91ef710bdc42b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d07eaa7637cb353f4405640441e5195d9c805e0aa38f15d797f25d086890306\",\"dweb:/ipfs/QmefSywpTNkoUHe44czh3vqRZH9n4Bz83qCD5ucz53bun3\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x5cf735f5eac2ea8469cdf266e51027bebb762eb33886f09157afc8902e177119\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9d9420ab10ec9a2e42cb934cadfe506aa446e8dbc49fa89f1f70e1d1e926c5a\",\"dweb:/ipfs/QmPKYUyeHpAN3YAkenrpSKnNZTaznS8gbkdAQqYZynCuwh\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x0f95456b0c3e1d3207b5ca097334e0702d004a4b0e8c5c60ff699658408fa624\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85a493fcb972e01701f4acefb9253a6d75fde48a97206d4d2ecc9cdff67fe430\",\"dweb:/ipfs/QmQPENnDg63iLzGjqfEBqetVcUbDBP8hzFQzPzCX8zJ8e4\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x128678ee3c594161a26eae9b27d21b934e79556ce866306133c790c22d34f38c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10971d43d16db54afe5212a618c36569bd34e3e25a63be612cf13652f2424efa\",\"dweb:/ipfs/QmcsbVy4JBiamLWLMDrijhSW7CAZtyfh38prNuMq6geVT9\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x11978b1a63c34da7be9478e3ef9b010c77e3a6a3907271a9fbcaecea5e690c7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://230dcb6f06c05bdd45777779db201a6bfdb491c0c78847c7200a54162f08f557\",\"dweb:/ipfs/QmbsVtCMwG4cEupL38UyBcZXgJ7SipqYZMgrir96aXJm5S\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0xdbc33ea310e83250cca8ad26e935a8d50ea10e781ba64a31beb0ea2ec912c605\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54cc15b73a5e92fd1ed78cb67504a534ab5879e11c0688ec10809128e1e00ac8\",\"dweb:/ipfs/QmPRtXeXmMyYt8J8u57HV6GQjuSevjE8gk5tMeyqXdkAzu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 196,
								"contract": "contracts/LionCoin.sol:LionToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 202,
								"contract": "contracts/LionCoin.sol:LionToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 204,
								"contract": "contracts/LionCoin.sol:LionToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 206,
								"contract": "contracts/LionCoin.sol:LionToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 208,
								"contract": "contracts/LionCoin.sol:LionToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 12,
								"contract": "contracts/LionCoin.sol:LionToken",
								"label": "n",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x5cf735f5eac2ea8469cdf266e51027bebb762eb33886f09157afc8902e177119\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9d9420ab10ec9a2e42cb934cadfe506aa446e8dbc49fa89f1f70e1d1e926c5a\",\"dweb:/ipfs/QmPKYUyeHpAN3YAkenrpSKnNZTaznS8gbkdAQqYZynCuwh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x5cf735f5eac2ea8469cdf266e51027bebb762eb33886f09157afc8902e177119\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9d9420ab10ec9a2e42cb934cadfe506aa446e8dbc49fa89f1f70e1d1e926c5a\",\"dweb:/ipfs/QmPKYUyeHpAN3YAkenrpSKnNZTaznS8gbkdAQqYZynCuwh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x5cf735f5eac2ea8469cdf266e51027bebb762eb33886f09157afc8902e177119\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9d9420ab10ec9a2e42cb934cadfe506aa446e8dbc49fa89f1f70e1d1e926c5a\",\"dweb:/ipfs/QmPKYUyeHpAN3YAkenrpSKnNZTaznS8gbkdAQqYZynCuwh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "ERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"errors": {
							"ERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `requestedDecrease`. NOTE: Although this function is designed to avoid double spending with {approval}, it can still be frontrunned, preventing any attempt of allowance reduction."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"ERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"errors\":{\"ERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `requestedDecrease`. NOTE: Although this function is designed to avoid double spending with {approval}, it can still be frontrunned, preventing any attempt of allowance reduction.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x5cf735f5eac2ea8469cdf266e51027bebb762eb33886f09157afc8902e177119\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9d9420ab10ec9a2e42cb934cadfe506aa446e8dbc49fa89f1f70e1d1e926c5a\",\"dweb:/ipfs/QmPKYUyeHpAN3YAkenrpSKnNZTaznS8gbkdAQqYZynCuwh\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x0f95456b0c3e1d3207b5ca097334e0702d004a4b0e8c5c60ff699658408fa624\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85a493fcb972e01701f4acefb9253a6d75fde48a97206d4d2ecc9cdff67fe430\",\"dweb:/ipfs/QmQPENnDg63iLzGjqfEBqetVcUbDBP8hzFQzPzCX8zJ8e4\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x128678ee3c594161a26eae9b27d21b934e79556ce866306133c790c22d34f38c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10971d43d16db54afe5212a618c36569bd34e3e25a63be612cf13652f2424efa\",\"dweb:/ipfs/QmcsbVy4JBiamLWLMDrijhSW7CAZtyfh38prNuMq6geVT9\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x11978b1a63c34da7be9478e3ef9b010c77e3a6a3907271a9fbcaecea5e690c7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://230dcb6f06c05bdd45777779db201a6bfdb491c0c78847c7200a54162f08f557\",\"dweb:/ipfs/QmbsVtCMwG4cEupL38UyBcZXgJ7SipqYZMgrir96aXJm5S\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0xdbc33ea310e83250cca8ad26e935a8d50ea10e781ba64a31beb0ea2ec912c605\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54cc15b73a5e92fd1ed78cb67504a534ab5879e11c0688ec10809128e1e00ac8\",\"dweb:/ipfs/QmPRtXeXmMyYt8J8u57HV6GQjuSevjE8gk5tMeyqXdkAzu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 196,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 202,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 204,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 206,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 208,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x128678ee3c594161a26eae9b27d21b934e79556ce866306133c790c22d34f38c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10971d43d16db54afe5212a618c36569bd34e3e25a63be612cf13652f2424efa\",\"dweb:/ipfs/QmcsbVy4JBiamLWLMDrijhSW7CAZtyfh38prNuMq6geVT9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x128678ee3c594161a26eae9b27d21b934e79556ce866306133c790c22d34f38c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10971d43d16db54afe5212a618c36569bd34e3e25a63be612cf13652f2424efa\",\"dweb:/ipfs/QmcsbVy4JBiamLWLMDrijhSW7CAZtyfh38prNuMq6geVT9\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x11978b1a63c34da7be9478e3ef9b010c77e3a6a3907271a9fbcaecea5e690c7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://230dcb6f06c05bdd45777779db201a6bfdb491c0c78847c7200a54162f08f557\",\"dweb:/ipfs/QmbsVtCMwG4cEupL38UyBcZXgJ7SipqYZMgrir96aXJm5S\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0xdbc33ea310e83250cca8ad26e935a8d50ea10e781ba64a31beb0ea2ec912c605\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54cc15b73a5e92fd1ed78cb67504a534ab5879e11c0688ec10809128e1e00ac8\",\"dweb:/ipfs/QmPRtXeXmMyYt8J8u57HV6GQjuSevjE8gk5tMeyqXdkAzu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/LionCoin.sol": {
				"ast": {
					"absolutePath": "contracts/LionCoin.sol",
					"exportedSymbols": {
						"Context": [
							897
						],
						"ERC20": [
							771
						],
						"IERC20": [
							849
						],
						"IERC20Errors": [
							78
						],
						"IERC20Metadata": [
							875
						],
						"LionToken": [
							36
						]
					},
					"id": 37,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:25:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 37,
							"sourceUnit": 772,
							"src": "60:108:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "ERC20",
										"nameLocations": [
											"194:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 771,
										"src": "194:5:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "194:5:0"
								}
							],
							"canonicalName": "LionToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 36,
							"linearizedBaseContracts": [
								36,
								771,
								78,
								875,
								849,
								897
							],
							"name": "LionToken",
							"nameLocation": "181:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "2e52d606",
									"id": 12,
									"mutability": "mutable",
									"name": "n",
									"nameLocation": "220:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 36,
									"src": "208:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 5,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "208:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"id": 11,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1_by_3",
														"typeString": "rational_const 1 / 3"
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 6,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "225:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "33",
														"id": 7,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "227:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "225:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_3",
														"typeString": "rational_const 1 / 3"
													}
												}
											],
											"id": 9,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "224:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_3",
												"typeString": "rational_const 1 / 3"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "33",
											"id": 10,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "230:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_3_by_1",
												"typeString": "int_const 3"
											},
											"value": "3"
										},
										"src": "224:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "355:268:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 24,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "587:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "591:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "587:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_100000000000000000000_by_1",
																"typeString": "int_const 100000000000000000000"
															},
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "313030",
																"id": 26,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "599:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"id": 29,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3130",
																			"id": 27,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "605:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"hexValue": "3138",
																			"id": 28,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "609:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_18_by_1",
																				"typeString": "int_const 18"
																			},
																			"value": "18"
																		},
																		"src": "605:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		}
																	}
																],
																"id": 30,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "604:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															},
															"src": "599:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100000000000000000000_by_1",
																"typeString": "int_const 100000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_100000000000000000000_by_1",
																"typeString": "int_const 100000000000000000000"
															}
														],
														"id": 23,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "581:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "581:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 33,
												"nodeType": "ExpressionStatement",
												"src": "581:32:0"
											}
										]
									},
									"id": 35,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 19,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 14,
													"src": "340:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 20,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 16,
													"src": "347:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 21,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 18,
												"name": "ERC20",
												"nameLocations": [
													"334:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 771,
												"src": "334:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "334:21:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "304:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "290:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 13,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "290:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "325:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "311:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 15,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "311:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "289:44:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "355:0:0"
									},
									"scope": 36,
									"src": "278:345:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 37,
							"src": "172:454:0",
							"usedErrors": [
								48,
								53,
								58,
								67,
								72,
								77,
								217
							],
							"usedEvents": [
								783,
								792
							]
						}
					],
					"src": "33:593:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							173
						],
						"IERC20Errors": [
							78
						],
						"IERC721Errors": [
							126
						]
					},
					"id": 174,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 38,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 39,
								"nodeType": "StructuredDocumentation",
								"src": "58:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 78,
							"linearizedBaseContracts": [
								78
							],
							"name": "IERC20Errors",
							"nameLocation": "208:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 40,
										"nodeType": "StructuredDocumentation",
										"src": "227:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 48,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "547:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "580:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "572:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "596:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "588:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "588:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "613:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "605:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "605:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "571:49:1"
									},
									"src": "541:80:1"
								},
								{
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "627:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 53,
									"name": "ERC20InvalidSender",
									"nameLocation": "790:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "817:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "809:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "809:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:1"
									},
									"src": "784:41:1"
								},
								{
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "831:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 58,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1001:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1030:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "1022:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1022:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1021:18:1"
									},
									"src": "995:45:1"
								},
								{
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1046:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 67,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1402:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1437:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1429:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1429:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1454:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1446:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1446:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1473:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1465:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1465:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1428:52:1"
									},
									"src": "1396:85:1"
								},
								{
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1487:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 72,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1672:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1701:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1693:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1692:18:1"
									},
									"src": "1666:45:1"
								},
								{
									"documentation": {
										"id": 73,
										"nodeType": "StructuredDocumentation",
										"src": "1717:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 77,
									"name": "ERC20InvalidSpender",
									"nameLocation": "1923:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1951:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "1943:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1943:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1942:17:1"
									},
									"src": "1917:43:1"
								}
							],
							"scope": 174,
							"src": "198:1764:1",
							"usedErrors": [
								48,
								53,
								58,
								67,
								72,
								77
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 79,
								"nodeType": "StructuredDocumentation",
								"src": "1964:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 126,
							"linearizedBaseContracts": [
								126
							],
							"name": "IERC721Errors",
							"nameLocation": "2116:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "2136:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 84,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2366:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2393:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "2385:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 81,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2385:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2384:15:1"
									},
									"src": "2360:40:1"
								},
								{
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "2406:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 89,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2549:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "2572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:17:1"
									},
									"src": "2543:46:1"
								},
								{
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2595:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 98,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2895:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2924:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "2916:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2916:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2940:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "2932:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 93,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2932:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2957:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "2949:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2949:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2915:48:1"
									},
									"src": "2889:75:1"
								},
								{
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2970:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 103,
									"name": "ERC721InvalidSender",
									"nameLocation": "3133:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3161:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "3153:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3152:16:1"
									},
									"src": "3127:42:1"
								},
								{
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "3175:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 108,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3345:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3375:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "3367:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3367:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3366:18:1"
									},
									"src": "3339:46:1"
								},
								{
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "3391:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 115,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3649:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3684:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "3676:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3676:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3702:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "3694:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3694:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3675:35:1"
									},
									"src": "3643:68:1"
								},
								{
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "3717:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 120,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3902:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "3932:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "3924:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3924:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3923:18:1"
									},
									"src": "3896:46:1"
								},
								{
									"documentation": {
										"id": 121,
										"nodeType": "StructuredDocumentation",
										"src": "3948:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 125,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4156:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4186:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "4178:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4178:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4177:18:1"
									},
									"src": "4150:46:1"
								}
							],
							"scope": 174,
							"src": "2106:2092:1",
							"usedErrors": [
								84,
								89,
								98,
								103,
								108,
								115,
								120,
								125
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 127,
								"nodeType": "StructuredDocumentation",
								"src": "4200:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 173,
							"linearizedBaseContracts": [
								173
							],
							"name": "IERC1155Errors",
							"nameLocation": "4354:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "4375:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 138,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4747:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4782:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4774:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4774:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4798:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4790:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4790:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4815:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4807:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4807:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4831:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4823:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4823:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4773:66:1"
									},
									"src": "4741:99:1"
								},
								{
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "4846:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 143,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5009:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5038:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "5030:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5030:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5029:16:1"
									},
									"src": "5003:43:1"
								},
								{
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "5052:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 148,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5222:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5253:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "5245:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5245:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5244:18:1"
									},
									"src": "5216:47:1"
								},
								{
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "5269:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 155,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5536:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5573:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "5565:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5565:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5591:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "5583:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5583:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5564:33:1"
									},
									"src": "5530:68:1"
								},
								{
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "5604:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 160,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5789:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5820:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "5812:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5811:18:1"
									},
									"src": "5783:47:1"
								},
								{
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "5836:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 165,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6044:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6075:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "6067:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6067:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6066:18:1"
									},
									"src": "6038:47:1"
								},
								{
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "6091:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 172,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6382:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6416:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "6408:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6408:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6435:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "6427:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6427:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6407:41:1"
									},
									"src": "6376:73:1"
								}
							],
							"scope": 174,
							"src": "4344:2107:1",
							"usedErrors": [
								138,
								143,
								148,
								155,
								160,
								165,
								172
							],
							"usedEvents": []
						}
					],
					"src": "32:6420:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							897
						],
						"ERC20": [
							771
						],
						"IERC20": [
							849
						],
						"IERC20Errors": [
							78
						],
						"IERC20Metadata": [
							875
						]
					},
					"id": 772,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 175,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 177,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 772,
							"sourceUnit": 850,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 176,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 849,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 179,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 772,
							"sourceUnit": 876,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 178,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 875,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 181,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 772,
							"sourceUnit": 898,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 180,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 897,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 183,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 772,
							"sourceUnit": 174,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 182,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 78,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 185,
										"name": "Context",
										"nameLocations": [
											"1619:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 897,
										"src": "1619:7:2"
									},
									"id": 186,
									"nodeType": "InheritanceSpecifier",
									"src": "1619:7:2"
								},
								{
									"baseName": {
										"id": 187,
										"name": "IERC20",
										"nameLocations": [
											"1628:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 849,
										"src": "1628:6:2"
									},
									"id": 188,
									"nodeType": "InheritanceSpecifier",
									"src": "1628:6:2"
								},
								{
									"baseName": {
										"id": 189,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1636:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 875,
										"src": "1636:14:2"
									},
									"id": 190,
									"nodeType": "InheritanceSpecifier",
									"src": "1636:14:2"
								},
								{
									"baseName": {
										"id": 191,
										"name": "IERC20Errors",
										"nameLocations": [
											"1652:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 78,
										"src": "1652:12:2"
									},
									"id": 192,
									"nodeType": "InheritanceSpecifier",
									"src": "1652:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 184,
								"nodeType": "StructuredDocumentation",
								"src": "348:1243:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 771,
							"linearizedBaseContracts": [
								771,
								78,
								875,
								849,
								897
							],
							"name": "ERC20",
							"nameLocation": "1610:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 196,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1715:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "1671:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 195,
										"keyName": "account",
										"keyNameLocation": "1687:7:2",
										"keyType": {
											"id": 193,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1679:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1671:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 194,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1698:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 202,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1803:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "1731:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 201,
										"keyName": "account",
										"keyNameLocation": "1747:7:2",
										"keyType": {
											"id": 197,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1739:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1731:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 200,
											"keyName": "spender",
											"keyNameLocation": "1774:7:2",
											"keyType": {
												"id": 198,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1766:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1758:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 199,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1785:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 204,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1837:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "1821:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 203,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1821:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 206,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1871:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "1856:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 205,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1856:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 208,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1897:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "1882:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 207,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1882:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "1911:71:2",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "a60f030c",
									"id": 217,
									"name": "ERC20FailedDecreaseAllowance",
									"nameLocation": "1993:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "2022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "2047:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "2039:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2073:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "2065:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2065:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2021:70:2"
									},
									"src": "1987:105:2"
								},
								{
									"body": {
										"id": 233,
										"nodeType": "Block",
										"src": "2330:57:2",
										"statements": [
											{
												"expression": {
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 225,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "2340:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 226,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 220,
														"src": "2348:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2340:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 228,
												"nodeType": "ExpressionStatement",
												"src": "2340:13:2"
											},
											{
												"expression": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 229,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "2363:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 230,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "2373:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2363:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "2363:17:2"
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "2098:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 234,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2300:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "2286:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 219,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2286:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2321:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "2307:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 221,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2307:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2285:44:2"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2330:0:2"
									},
									"scope": 771,
									"src": "2274:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										862
									],
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "2512:29:2",
										"statements": [
											{
												"expression": {
													"id": 240,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 206,
													"src": "2529:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 239,
												"id": 241,
												"nodeType": "Return",
												"src": "2522:12:2"
											}
										]
									},
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "2393:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2461:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2465:2:2"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2497:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 237,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2497:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2496:15:2"
									},
									"scope": 771,
									"src": "2452:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										868
									],
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "2716:31:2",
										"statements": [
											{
												"expression": {
													"id": 249,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 208,
													"src": "2733:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 248,
												"id": 250,
												"nodeType": "Return",
												"src": "2726:14:2"
											}
										]
									},
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "2547:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2663:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2669:2:2"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "2701:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 246,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2701:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:15:2"
									},
									"scope": 771,
									"src": "2654:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										874
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3436:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3453:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 257,
												"id": 259,
												"nodeType": "Return",
												"src": "3446:9:2"
											}
										]
									},
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "2753:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3389:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3397:2:2"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3429:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 255,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3429:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3428:7:2"
									},
									"scope": 771,
									"src": "3380:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										798
									],
									"body": {
										"id": 269,
										"nodeType": "Block",
										"src": "3583:36:2",
										"statements": [
											{
												"expression": {
													"id": 267,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 204,
													"src": "3600:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 266,
												"id": 268,
												"nodeType": "Return",
												"src": "3593:19:2"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3468:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3531:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3542:2:2"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "3574:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3574:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3573:9:2"
									},
									"scope": 771,
									"src": "3522:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										806
									],
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "3751:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 278,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "3768:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 280,
													"indexExpression": {
														"id": 279,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "3778:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3768:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 277,
												"id": 281,
												"nodeType": "Return",
												"src": "3761:25:2"
											}
										]
									},
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "3625:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3686:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3704:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3696:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3696:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3695:17:2"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3742:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3742:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3741:9:2"
									},
									"scope": 771,
									"src": "3677:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										816
									],
									"body": {
										"id": 306,
										"nodeType": "Block",
										"src": "4063:103:2",
										"statements": [
											{
												"assignments": [
													294
												],
												"declarations": [
													{
														"constant": false,
														"id": 294,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4081:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 306,
														"src": "4073:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 293,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4073:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 297,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 295,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "4089:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4089:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4073:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 299,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 294,
															"src": "4121:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 300,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "4128:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 301,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "4132:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 298,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "4111:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4111:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 303,
												"nodeType": "ExpressionStatement",
												"src": "4111:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4155:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 292,
												"id": 305,
												"nodeType": "Return",
												"src": "4148:11:2"
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "3799:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3997:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4014:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "4006:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4006:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4026:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "4018:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4018:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:27:2"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "4057:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 290,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4057:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4056:6:2"
									},
									"scope": 771,
									"src": "3988:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 323,
										"nodeType": "Block",
										"src": "4313:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 317,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "4330:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 319,
														"indexExpression": {
															"id": 318,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "4342:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4330:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 321,
													"indexExpression": {
														"id": 320,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "4349:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4330:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 316,
												"id": 322,
												"nodeType": "Return",
												"src": "4323:34:2"
											}
										]
									},
									"documentation": {
										"id": 308,
										"nodeType": "StructuredDocumentation",
										"src": "4172:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4233:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4251:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "4243:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4243:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4266:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "4258:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4242:32:2"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "4304:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4304:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4303:9:2"
									},
									"scope": 771,
									"src": "4224:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										836
									],
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "4750:107:2",
										"statements": [
											{
												"assignments": [
													335
												],
												"declarations": [
													{
														"constant": false,
														"id": 335,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4768:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 347,
														"src": "4760:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 334,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4760:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 338,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 336,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "4776:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4776:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4760:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 340,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "4807:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 341,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "4814:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 342,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "4823:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 339,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 662,
														"src": "4798:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4798:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "4798:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4846:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 333,
												"id": 346,
												"nodeType": "Return",
												"src": "4839:11:2"
											}
										]
									},
									"documentation": {
										"id": 325,
										"nodeType": "StructuredDocumentation",
										"src": "4370:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4680:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4696:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "4688:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4713:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "4705:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4705:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4687:32:2"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "4744:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 331,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4744:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4743:6:2"
									},
									"scope": 771,
									"src": "4671:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										848
									],
									"body": {
										"id": 379,
										"nodeType": "Block",
										"src": "5510:151:2",
										"statements": [
											{
												"assignments": [
													361
												],
												"declarations": [
													{
														"constant": false,
														"id": 361,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5528:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 379,
														"src": "5520:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 360,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5520:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 364,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 362,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "5538:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5538:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5520:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 366,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "5576:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 367,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "5582:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 368,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "5591:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 365,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "5560:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5560:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 370,
												"nodeType": "ExpressionStatement",
												"src": "5560:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 372,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "5617:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 373,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "5623:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 374,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "5627:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 371,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "5607:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5607:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "5607:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5650:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 359,
												"id": 378,
												"nodeType": "Return",
												"src": "5643:11:2"
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "4863:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5426:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5447:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "5439:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5439:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5461:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "5453:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5453:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5473:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "5465:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5465:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5438:41:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "5504:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 357,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5504:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5503:6:2"
									},
									"scope": 771,
									"src": "5417:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "6150:140:2",
										"statements": [
											{
												"assignments": [
													391
												],
												"declarations": [
													{
														"constant": false,
														"id": 391,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6168:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "6160:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 390,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6160:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 394,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 392,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "6176:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6176:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6160:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 396,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "6207:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 397,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "6214:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 399,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 391,
																		"src": "6233:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 400,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 383,
																		"src": "6240:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 398,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 324,
																	"src": "6223:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6223:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 402,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 385,
																"src": "6251:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6223:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 395,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 662,
														"src": "6198:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6198:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "6198:64:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6279:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 389,
												"id": 407,
												"nodeType": "Return",
												"src": "6272:11:2"
											}
										]
									},
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "5667:384:2",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "6065:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6091:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "6083:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6083:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "6108:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "6100:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6100:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6082:37:2"
									},
									"returnParameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "6144:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 387,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6144:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6143:6:2"
									},
									"scope": 771,
									"src": "6056:234:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "7060:392:2",
										"statements": [
											{
												"assignments": [
													420
												],
												"declarations": [
													{
														"constant": false,
														"id": 420,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "7078:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 453,
														"src": "7070:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 419,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7070:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 423,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 421,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "7086:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7086:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7070:28:2"
											},
											{
												"assignments": [
													425
												],
												"declarations": [
													{
														"constant": false,
														"id": 425,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "7116:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 453,
														"src": "7108:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 424,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7108:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 430,
												"initialValue": {
													"arguments": [
														{
															"id": 427,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "7145:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 428,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "7152:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 426,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "7135:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7135:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7108:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 431,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "7174:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 432,
														"name": "requestedDecrease",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "7193:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7174:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 441,
												"nodeType": "IfStatement",
												"src": "7170:148:2",
												"trueBody": {
													"id": 440,
													"nodeType": "Block",
													"src": "7212:106:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 435,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 412,
																		"src": "7262:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 436,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 425,
																		"src": "7271:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 437,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 414,
																		"src": "7289:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 434,
																	"name": "ERC20FailedDecreaseAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "7233:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256) pure"
																	}
																},
																"id": 438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7233:74:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 439,
															"nodeType": "RevertStatement",
															"src": "7226:81:2"
														}
													]
												}
											},
											{
												"id": 450,
												"nodeType": "UncheckedBlock",
												"src": "7327:97:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 443,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "7360:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 444,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 412,
																	"src": "7367:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 445,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 425,
																		"src": "7376:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 446,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 414,
																		"src": "7395:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7376:36:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 442,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	662,
																	722
																],
																"referencedDeclaration": 662,
																"src": "7351:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7351:62:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 449,
														"nodeType": "ExpressionStatement",
														"src": "7351:62:2"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7441:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 418,
												"id": 452,
												"nodeType": "Return",
												"src": "7434:11:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "6296:658:2",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `requestedDecrease`.\n NOTE: Although this function is designed to avoid double spending with {approval},\n it can still be frontrunned, preventing any attempt of allowance reduction."
									},
									"functionSelector": "a457c2d7",
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6968:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6994:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "6986:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6986:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "7011:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "7003:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7003:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6985:44:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "7054:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 416,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7054:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7053:6:2"
									},
									"scope": 771,
									"src": "6959:493:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "7894:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 464,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "7908:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 465,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7908:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 478,
												"nodeType": "IfStatement",
												"src": "7904:86:2",
												"trueBody": {
													"id": 477,
													"nodeType": "Block",
													"src": "7928:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 473,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7976:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7968:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 471,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7968:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7968:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 470,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 53,
																	"src": "7949:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7949:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 476,
															"nodeType": "RevertStatement",
															"src": "7942:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 479,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "8003:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8017:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8009:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 480,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8009:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8009:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8003:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 493,
												"nodeType": "IfStatement",
												"src": "7999:86:2",
												"trueBody": {
													"id": 492,
													"nodeType": "Block",
													"src": "8021:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 488,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8071:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8063:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 486,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8063:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8063:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 485,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 58,
																	"src": "8042:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8042:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 491,
															"nodeType": "RevertStatement",
															"src": "8035:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 495,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "8102:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 496,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "8108:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "8112:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 494,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "8094:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8094:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "8094:24:2"
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "7458:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7834:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7852:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "7844:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7844:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7866:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "7858:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7858:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7878:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "7870:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7870:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7843:41:2"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7894:0:2"
									},
									"scope": 771,
									"src": "7825:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "8508:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 511,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "8522:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8538:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8530:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 512,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8530:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8530:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8522:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 548,
													"nodeType": "Block",
													"src": "8696:362:2",
													"statements": [
														{
															"assignments": [
																523
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 523,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "8718:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 548,
																	"src": "8710:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 522,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8710:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 527,
															"initialValue": {
																"baseExpression": {
																	"id": 524,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 196,
																	"src": "8732:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 526,
																"indexExpression": {
																	"id": 525,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 504,
																	"src": "8742:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8732:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8710:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 528,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "8765:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 529,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "8779:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8765:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 538,
															"nodeType": "IfStatement",
															"src": "8761:115:2",
															"trueBody": {
																"id": 537,
																"nodeType": "Block",
																"src": "8786:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 532,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 504,
																					"src": "8836:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 533,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 523,
																					"src": "8842:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 534,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 508,
																					"src": "8855:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 531,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 48,
																				"src": "8811:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8811:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 536,
																		"nodeType": "RevertStatement",
																		"src": "8804:57:2"
																	}
																]
															}
														},
														{
															"id": 547,
															"nodeType": "UncheckedBlock",
															"src": "8889:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 539,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 196,
																				"src": "8996:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 541,
																			"indexExpression": {
																				"id": 540,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 504,
																				"src": "9006:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "8996:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 542,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 523,
																				"src": "9014:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 543,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 508,
																				"src": "9028:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9014:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8996:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 546,
																	"nodeType": "ExpressionStatement",
																	"src": "8996:37:2"
																}
															]
														}
													]
												},
												"id": 549,
												"nodeType": "IfStatement",
												"src": "8518:540:2",
												"trueBody": {
													"id": 521,
													"nodeType": "Block",
													"src": "8542:148:2",
													"statements": [
														{
															"expression": {
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 517,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 204,
																	"src": "8658:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 518,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "8674:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8658:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 520,
															"nodeType": "ExpressionStatement",
															"src": "8658:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 550,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "9072:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9086:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9078:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 551,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9078:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9078:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9072:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 569,
													"nodeType": "Block",
													"src": "9287:206:2",
													"statements": [
														{
															"id": 568,
															"nodeType": "UncheckedBlock",
															"src": "9301:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 562,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 196,
																				"src": "9446:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 564,
																			"indexExpression": {
																				"id": 563,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 506,
																				"src": "9456:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9446:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 565,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "9463:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9446:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 567,
																	"nodeType": "ExpressionStatement",
																	"src": "9446:22:2"
																}
															]
														}
													]
												},
												"id": 570,
												"nodeType": "IfStatement",
												"src": "9068:425:2",
												"trueBody": {
													"id": 561,
													"nodeType": "Block",
													"src": "9090:191:2",
													"statements": [
														{
															"id": 560,
															"nodeType": "UncheckedBlock",
															"src": "9104:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 556,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 204,
																			"src": "9235:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 557,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "9251:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9235:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 559,
																	"nodeType": "ExpressionStatement",
																	"src": "9235:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 572,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "9517:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 573,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "9523:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 574,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "9527:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 571,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "9508:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9508:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 576,
												"nodeType": "EmitStatement",
												"src": "9503:30:2"
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "8131:297:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from` (or `to`) is\n the zero address. All customizations to transfers, mints, and burns should be done by overriding this function.\n Emits a {Transfer} event."
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8442:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8458:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "8450:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8450:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8472:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "8464:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8464:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8484:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "8476:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8476:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8449:41:2"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8508:0:2"
									},
									"scope": 771,
									"src": "8433:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "9939:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 586,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "9953:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9972:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9964:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 587,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9964:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9964:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9953:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "9949:91:2",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "9976:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 595,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10026:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10018:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 593,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10018:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10018:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 592,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 58,
																	"src": "9997:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9997:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "RevertStatement",
															"src": "9990:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10065:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10057:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 602,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10057:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10057:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 606,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "10069:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 607,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "10078:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 601,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "10049:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10049:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 609,
												"nodeType": "ExpressionStatement",
												"src": "10049:35:2"
											}
										]
									},
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "9546:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9892:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9906:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "9898:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9898:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9923:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "9915:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9915:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9897:32:2"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9939:0:2"
									},
									"scope": 771,
									"src": "9883:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "10472:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 614,
														"src": "10486:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10505:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10497:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 620,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10497:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10497:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10486:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 633,
												"nodeType": "IfStatement",
												"src": "10482:89:2",
												"trueBody": {
													"id": 632,
													"nodeType": "Block",
													"src": "10509:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 628,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10557:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10549:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 626,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10549:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10549:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 625,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 53,
																	"src": "10530:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10530:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 631,
															"nodeType": "RevertStatement",
															"src": "10523:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 635,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "10588:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10605:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10597:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 636,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10597:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10597:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 640,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "10609:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 634,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "10580:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10580:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "10580:35:2"
											}
										]
									},
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "10097:314:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, by transferring it to address(0).\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "10425:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "10439:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "10431:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10431:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10456:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "10448:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10448:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10430:32:2"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10472:0:2"
									},
									"scope": 771,
									"src": "10416:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "11232:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 655,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "11251:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 656,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "11258:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 657,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "11267:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11274:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 654,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 722,
														"src": "11242:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11242:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "11242:37:2"
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "10628:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "11167:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11184:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "11176:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11176:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11199:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "11191:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11191:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11216:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "11208:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11208:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11175:47:2"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11232:0:2"
									},
									"scope": 771,
									"src": "11158:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "12216:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 674,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "12230:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12247:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12239:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 675,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12239:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12239:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12230:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 688,
												"nodeType": "IfStatement",
												"src": "12226:89:2",
												"trueBody": {
													"id": 687,
													"nodeType": "Block",
													"src": "12251:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 683,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12301:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12293:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 681,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12293:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12293:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 680,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 72,
																	"src": "12272:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12272:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 686,
															"nodeType": "RevertStatement",
															"src": "12265:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 689,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "12328:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12347:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12339:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 690,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12339:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12339:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12328:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 703,
												"nodeType": "IfStatement",
												"src": "12324:90:2",
												"trueBody": {
													"id": 702,
													"nodeType": "Block",
													"src": "12351:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 698,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12400:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12392:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 696,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12392:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12392:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 695,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 77,
																	"src": "12372:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12372:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 701,
															"nodeType": "RevertStatement",
															"src": "12365:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 704,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "12423:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 707,
															"indexExpression": {
																"id": 705,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "12435:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12423:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 708,
														"indexExpression": {
															"id": 706,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "12442:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12423:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 709,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "12453:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12423:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "12423:35:2"
											},
											{
												"condition": {
													"id": 712,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 671,
													"src": "12472:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 720,
												"nodeType": "IfStatement",
												"src": "12468:76:2",
												"trueBody": {
													"id": 719,
													"nodeType": "Block",
													"src": "12483:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 714,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 665,
																		"src": "12511:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 715,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 667,
																		"src": "12518:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 716,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "12527:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 713,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "12502:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12502:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 718,
															"nodeType": "EmitStatement",
															"src": "12497:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "11292:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to true\n using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "12127:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12144:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "12136:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12136:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "12159:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "12151:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12151:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12176:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "12168:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12168:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "12188:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "12183:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 670,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12183:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12135:63:2"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12216:0:2"
									},
									"scope": 771,
									"src": "12118:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "12918:388:2",
										"statements": [
											{
												"assignments": [
													733
												],
												"declarations": [
													{
														"constant": false,
														"id": 733,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "12936:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 769,
														"src": "12928:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 732,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12928:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 738,
												"initialValue": {
													"arguments": [
														{
															"id": 735,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "12965:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 736,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "12972:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 734,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "12955:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12955:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12928:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 739,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "12994:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13019:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 741,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "13019:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 740,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "13014:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13014:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 744,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13028:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "13014:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12994:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 768,
												"nodeType": "IfStatement",
												"src": "12990:310:2",
												"trueBody": {
													"id": 767,
													"nodeType": "Block",
													"src": "13033:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 746,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "13051:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 747,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "13070:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13051:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 756,
															"nodeType": "IfStatement",
															"src": "13047:130:2",
															"trueBody": {
																"id": 755,
																"nodeType": "Block",
																"src": "13077:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 750,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 727,
																					"src": "13129:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 751,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "13138:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 752,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "13156:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 749,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 67,
																				"src": "13102:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13102:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 754,
																		"nodeType": "RevertStatement",
																		"src": "13095:67:2"
																	}
																]
															}
														},
														{
															"id": 766,
															"nodeType": "UncheckedBlock",
															"src": "13190:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 758,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 725,
																				"src": "13227:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 759,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 727,
																				"src": "13234:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 762,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 760,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "13243:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 761,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "13262:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13243:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 763,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13269:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 757,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				662,
																				722
																			],
																			"referencedDeclaration": 722,
																			"src": "13218:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13218:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 765,
																	"nodeType": "ExpressionStatement",
																	"src": "13218:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "12556:268:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "12838:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12862:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "12854:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12854:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "12877:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "12869:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12869:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12894:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "12886:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12886:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12853:47:2"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12918:0:2"
									},
									"scope": 771,
									"src": "12829:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 772,
							"src": "1592:11716:2",
							"usedErrors": [
								48,
								53,
								58,
								67,
								72,
								77,
								217
							],
							"usedEvents": [
								783,
								792
							]
						}
					],
					"src": "105:13204:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							849
						]
					},
					"id": 850,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 773,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 774,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 849,
							"linearizedBaseContracts": [
								849
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 775,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 783,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 776,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 779,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 784,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 792,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 793,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 798,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 849,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 799,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 806,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 849,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 807,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 816,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 813,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 849,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 817,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 818,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 849,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 836,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 833,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 849,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 837,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 848,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 845,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 849,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 850,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								783,
								792
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							849
						],
						"IERC20Metadata": [
							875
						]
					},
					"id": 876,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 851,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "110:24:4"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 853,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 876,
							"sourceUnit": 850,
							"src": "136:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 852,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 849,
										"src": "144:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 855,
										"name": "IERC20",
										"nameLocations": [
											"290:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 849,
										"src": "290:6:4"
									},
									"id": 856,
									"nodeType": "InheritanceSpecifier",
									"src": "290:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 854,
								"nodeType": "StructuredDocumentation",
								"src": "175:86:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 875,
							"linearizedBaseContracts": [
								875,
								849
							],
							"name": "IERC20Metadata",
							"nameLocation": "272:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 857,
										"nodeType": "StructuredDocumentation",
										"src": "303:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 862,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "371:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "375:2:4"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "401:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 859,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "401:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "400:15:4"
									},
									"scope": 875,
									"src": "362:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 863,
										"nodeType": "StructuredDocumentation",
										"src": "422:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 868,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "492:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "498:2:4"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "524:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 865,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "524:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "523:15:4"
									},
									"scope": 875,
									"src": "483:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 869,
										"nodeType": "StructuredDocumentation",
										"src": "545:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 874,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "624:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "632:2:4"
									},
									"returnParameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "658:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 871,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "658:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "657:7:4"
									},
									"scope": 875,
									"src": "615:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 876,
							"src": "262:405:4",
							"usedErrors": [],
							"usedEvents": [
								783,
								792
							]
						}
					],
					"src": "110:558:4"
				},
				"id": 4
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							897
						]
					},
					"id": 898,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 877,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "86:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 878,
								"nodeType": "StructuredDocumentation",
								"src": "112:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 897,
							"linearizedBaseContracts": [
								897
							],
							"name": "Context",
							"nameLocation": "627:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 886,
										"nodeType": "Block",
										"src": "703:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 883,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "720:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "724:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "720:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 882,
												"id": 885,
												"nodeType": "Return",
												"src": "713:17:5"
											}
										]
									},
									"id": 887,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "650:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "660:2:5"
									},
									"returnParameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "694:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "693:9:5"
									},
									"scope": 897,
									"src": "641:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 895,
										"nodeType": "Block",
										"src": "810:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 892,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "827:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "831:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "827:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 891,
												"id": 894,
												"nodeType": "Return",
												"src": "820:15:5"
											}
										]
									},
									"id": 896,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "752:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "760:2:5"
									},
									"returnParameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "794:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 889,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "794:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "793:16:5"
									},
									"scope": 897,
									"src": "743:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 898,
							"src": "609:235:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "86:759:5"
				},
				"id": 5
			}
		}
	}
}